Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>CD8pos_T_1001<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	127	CTGTCTCTTATA	1000000	0.01
Illumina	3	AGATCGGAAGAGC	1000000	0.00
smallRNA	2	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 127). Second best hit was Illumina (count: 3)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007061_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007061_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 124.73 s (3 us/read; 20.38 M reads/minute).

=== Summary ===

Total reads processed:              42,361,316
Reads with adapters:                18,100,267 (42.7%)
Reads written (passing filters):    42,361,316 (100.0%)

Total basepairs processed: 4,078,801,414 bp
Quality-trimmed:               3,116,312 bp (0.1%)
Total written (filtered):  4,049,522,760 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18100267 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.1%
  C: 29.4%
  G: 26.5%
  T: 22.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13229857	10590329.0	0	13229857
2	3046024	2647582.2	0	3046024
3	1288179	661895.6	0	1288179
4	489479	165473.9	0	489479
5	11676	41368.5	0	11676
6	9782	10342.1	0	9782
7	2605	2585.5	0	2605
8	508	646.4	0	508
9	147	161.6	0	24 123
10	378	40.4	1	10 368
11	490	10.1	1	13 477
12	343	2.5	1	38 305
13	354	2.5	1	9 345
14	610	2.5	1	59 551
15	577	2.5	1	45 532
16	1428	2.5	1	262 1166
17	410	2.5	1	63 347
18	907	2.5	1	147 760
19	559	2.5	1	83 476
20	407	2.5	1	50 357
21	508	2.5	1	98 410
22	219	2.5	1	16 203
23	703	2.5	1	159 544
24	264	2.5	1	36 228
25	452	2.5	1	94 358
26	616	2.5	1	148 468
27	630	2.5	1	133 497
28	512	2.5	1	140 372
29	591	2.5	1	119 472
30	188	2.5	1	10 178
31	436	2.5	1	90 346
32	159	2.5	1	16 143
33	421	2.5	1	87 334
34	317	2.5	1	64 253
35	269	2.5	1	43 226
36	236	2.5	1	29 207
37	286	2.5	1	53 233
38	237	2.5	1	31 206
39	160	2.5	1	18 142
40	206	2.5	1	27 179
41	237	2.5	1	28 209
42	222	2.5	1	22 200
43	248	2.5	1	35 213
44	182	2.5	1	13 169
45	144	2.5	1	7 137
46	90	2.5	1	2 88
47	141	2.5	1	4 137
48	141	2.5	1	5 136
49	132	2.5	1	4 128
50	141	2.5	1	5 136
51	116	2.5	1	8 108
52	121	2.5	1	3 118
53	122	2.5	1	2 120
54	197	2.5	1	2 195
55	121	2.5	1	1 120
56	80	2.5	1	1 79
57	109	2.5	1	0 109
58	123	2.5	1	0 123
59	92	2.5	1	0 92
60	141	2.5	1	3 138
61	97	2.5	1	1 96
62	85	2.5	1	0 85
63	174	2.5	1	1 173
64	108	2.5	1	0 108
65	88	2.5	1	0 88
66	129	2.5	1	1 128
67	98	2.5	1	1 97
68	259	2.5	1	0 259
69	125	2.5	1	0 125
70	137	2.5	1	0 137
71	91	2.5	1	0 91
72	104	2.5	1	0 104
73	177	2.5	1	0 177
74	131	2.5	1	1 130
75	331	2.5	1	0 331
76	122	2.5	1	1 121
77	80	2.5	1	0 80
78	192	2.5	1	0 192
79	144	2.5	1	1 143
80	132	2.5	1	1 131
81	97	2.5	1	0 97
82	68	2.5	1	0 68
83	179	2.5	1	0 179
84	78	2.5	1	0 78
85	177	2.5	1	0 177
86	110	2.5	1	0 110
87	79	2.5	1	1 78
88	185	2.5	1	0 185
89	72	2.5	1	0 72
90	53	2.5	1	1 52
91	194	2.5	1	1 193
92	167	2.5	1	0 167
93	339	2.5	1	0 339
94	59	2.5	1	0 59
95	51	2.5	1	0 51
96	45	2.5	1	0 45
97	67	2.5	1	0 67
98	203	2.5	1	0 203
99	87	2.5	1	0 87
100	96	2.5	1	0 96
101	27	2.5	1	0 27


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_1.fastq
=============================================
42361316 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007061_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007061_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 121.53 s (3 us/read; 20.91 M reads/minute).

=== Summary ===

Total reads processed:              42,361,316
Reads with adapters:                18,216,817 (43.0%)
Reads written (passing filters):    42,361,316 (100.0%)

Total basepairs processed: 4,081,678,368 bp
Quality-trimmed:              14,057,585 bp (0.3%)
Total written (filtered):  4,040,483,165 bp (99.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18216817 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.5%
  C: 29.3%
  G: 25.9%
  T: 22.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13280536	10590329.0	0	13280536
2	3082636	2647582.2	0	3082636
3	1293127	661895.6	0	1293127
4	470857	165473.9	0	470857
5	14264	41368.5	0	14264
6	10675	10342.1	0	10675
7	3680	2585.5	0	3680
8	1419	646.4	0	1419
9	734	161.6	0	545 189
10	1115	40.4	1	242 873
11	1152	10.1	1	309 843
12	814	2.5	1	186 628
13	1267	2.5	1	272 995
14	1431	2.5	1	154 1277
15	1972	2.5	1	262 1710
16	3186	2.5	1	500 2686
17	2858	2.5	1	604 2254
18	2983	2.5	1	592 2391
19	2676	2.5	1	550 2126
20	1335	2.5	1	278 1057
21	1502	2.5	1	375 1127
22	1839	2.5	1	489 1350
23	1824	2.5	1	622 1202
24	2089	2.5	1	717 1372
25	2181	2.5	1	787 1394
26	2224	2.5	1	938 1286
27	2031	2.5	1	868 1163
28	2704	2.5	1	1243 1461
29	2420	2.5	1	1297 1123
30	1340	2.5	1	555 785
31	1468	2.5	1	660 808
32	1420	2.5	1	744 676
33	1183	2.5	1	532 651
34	1179	2.5	1	546 633
35	988	2.5	1	433 555
36	759	2.5	1	318 441
37	725	2.5	1	329 396
38	633	2.5	1	225 408
39	469	2.5	1	189 280
40	413	2.5	1	145 268
41	400	2.5	1	122 278
42	305	2.5	1	79 226
43	257	2.5	1	65 192
44	242	2.5	1	44 198
45	205	2.5	1	33 172
46	188	2.5	1	26 162
47	177	2.5	1	18 159
48	159	2.5	1	14 145
49	142	2.5	1	12 130
50	164	2.5	1	7 157
51	111	2.5	1	6 105
52	142	2.5	1	5 137
53	139	2.5	1	2 137
54	230	2.5	1	7 223
55	126	2.5	1	3 123
56	92	2.5	1	5 87
57	123	2.5	1	5 118
58	88	2.5	1	1 87
59	109	2.5	1	2 107
60	143	2.5	1	4 139
61	101	2.5	1	1 100
62	88	2.5	1	2 86
63	180	2.5	1	5 175
64	123	2.5	1	2 121
65	104	2.5	1	2 102
66	107	2.5	1	0 107
67	95	2.5	1	1 94
68	229	2.5	1	0 229
69	126	2.5	1	0 126
70	120	2.5	1	2 118
71	86	2.5	1	2 84
72	75	2.5	1	0 75
73	201	2.5	1	0 201
74	131	2.5	1	0 131
75	311	2.5	1	0 311
76	120	2.5	1	0 120
77	96	2.5	1	0 96
78	200	2.5	1	0 200
79	155	2.5	1	0 155
80	132	2.5	1	0 132
81	99	2.5	1	0 99
82	70	2.5	1	0 70
83	223	2.5	1	0 223
84	91	2.5	1	1 90
85	205	2.5	1	0 205
86	96	2.5	1	0 96
87	72	2.5	1	0 72
88	210	2.5	1	0 210
89	76	2.5	1	0 76
90	79	2.5	1	1 78
91	176	2.5	1	0 176
92	134	2.5	1	0 134
93	310	2.5	1	0 310
94	44	2.5	1	0 44
95	48	2.5	1	0 48
96	43	2.5	1	0 43
97	82	2.5	1	1 81
98	160	2.5	1	1 159
99	84	2.5	1	0 84
100	67	2.5	1	0 67
101	18	2.5	1	0 18


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007061_2.fastq
=============================================
42361316 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007061_1_trimmed.fq and SRR11007061_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007061_1_trimmed.fq<<	RENAMING TO:>>CD8pos_T_1001_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007061_2_trimmed.fq<<	RENAMING TO:>>CD8pos_T_1001_R2_trimmed.fq<<
file_1: CD8pos_T_1001_R1_trimmed.fq, file_2: CD8pos_T_1001_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: CD8pos_T_1001_R1_trimmed.fq and CD8pos_T_1001_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to CD8pos_T_1001_val_1.fq
Writing validated paired-end Read 2 reads to CD8pos_T_1001_val_2.fq

Total number of sequences analysed: 42361316

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 8212 (0.02%)


  >>> Now running FastQC on the validated data CD8pos_T_1001_val_1.fq<<<

Started analysis of CD8pos_T_1001_val_1.fq
Approx 5% complete for CD8pos_T_1001_val_1.fq
Approx 10% complete for CD8pos_T_1001_val_1.fq
Approx 15% complete for CD8pos_T_1001_val_1.fq
Approx 20% complete for CD8pos_T_1001_val_1.fq
Approx 25% complete for CD8pos_T_1001_val_1.fq
Approx 30% complete for CD8pos_T_1001_val_1.fq
Approx 35% complete for CD8pos_T_1001_val_1.fq
Approx 40% complete for CD8pos_T_1001_val_1.fq
Approx 45% complete for CD8pos_T_1001_val_1.fq
Approx 50% complete for CD8pos_T_1001_val_1.fq
Approx 55% complete for CD8pos_T_1001_val_1.fq
Approx 60% complete for CD8pos_T_1001_val_1.fq
Approx 65% complete for CD8pos_T_1001_val_1.fq
Approx 70% complete for CD8pos_T_1001_val_1.fq
Approx 75% complete for CD8pos_T_1001_val_1.fq
Approx 80% complete for CD8pos_T_1001_val_1.fq
Approx 85% complete for CD8pos_T_1001_val_1.fq
Approx 90% complete for CD8pos_T_1001_val_1.fq
Approx 95% complete for CD8pos_T_1001_val_1.fq
Analysis complete for CD8pos_T_1001_val_1.fq

  >>> Now running FastQC on the validated data CD8pos_T_1001_val_2.fq<<<

Started analysis of CD8pos_T_1001_val_2.fq
Approx 5% complete for CD8pos_T_1001_val_2.fq
Approx 10% complete for CD8pos_T_1001_val_2.fq
Approx 15% complete for CD8pos_T_1001_val_2.fq
Approx 20% complete for CD8pos_T_1001_val_2.fq
Approx 25% complete for CD8pos_T_1001_val_2.fq
Approx 30% complete for CD8pos_T_1001_val_2.fq
Approx 35% complete for CD8pos_T_1001_val_2.fq
Approx 40% complete for CD8pos_T_1001_val_2.fq
Approx 45% complete for CD8pos_T_1001_val_2.fq
Approx 50% complete for CD8pos_T_1001_val_2.fq
Approx 55% complete for CD8pos_T_1001_val_2.fq
Approx 60% complete for CD8pos_T_1001_val_2.fq
Approx 65% complete for CD8pos_T_1001_val_2.fq
Approx 70% complete for CD8pos_T_1001_val_2.fq
Approx 75% complete for CD8pos_T_1001_val_2.fq
Approx 80% complete for CD8pos_T_1001_val_2.fq
Approx 85% complete for CD8pos_T_1001_val_2.fq
Approx 90% complete for CD8pos_T_1001_val_2.fq
Approx 95% complete for CD8pos_T_1001_val_2.fq
Analysis complete for CD8pos_T_1001_val_2.fq
Deleting both intermediate output files CD8pos_T_1001_R1_trimmed.fq and CD8pos_T_1001_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Effector_CD4pos_T_1001<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	62	CTGTCTCTTATA	1000000	0.01
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 62). Second best hit was smallRNA (count: 0)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007071_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007071_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 125.03 s (3 us/read; 19.92 M reads/minute).

=== Summary ===

Total reads processed:              41,500,296
Reads with adapters:                17,228,308 (41.5%)
Reads written (passing filters):    41,500,296 (100.0%)

Total basepairs processed: 4,062,781,238 bp
Quality-trimmed:               3,823,586 bp (0.1%)
Total written (filtered):  4,033,991,328 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17228308 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.2%
  C: 29.3%
  G: 26.6%
  T: 22.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	12451367	10375074.0	0	12451367
2	3067257	2593768.5	0	3067257
3	1254590	648442.1	0	1254590
4	415177	162110.5	0	415177
5	9823	40527.6	0	9823
6	7206	10131.9	0	7206
7	2133	2533.0	0	2133
8	609	633.2	0	609
9	139	158.3	0	29 110
10	352	39.6	1	15 337
11	386	9.9	1	10 376
12	337	2.5	1	19 318
13	347	2.5	1	10 337
14	514	2.5	1	47 467
15	558	2.5	1	31 527
16	1142	2.5	1	174 968
17	446	2.5	1	67 379
18	933	2.5	1	111 822
19	522	2.5	1	79 443
20	333	2.5	1	29 304
21	380	2.5	1	59 321
22	235	2.5	1	21 214
23	517	2.5	1	80 437
24	224	2.5	1	30 194
25	372	2.5	1	86 286
26	464	2.5	1	92 372
27	444	2.5	1	84 360
28	421	2.5	1	87 334
29	499	2.5	1	103 396
30	161	2.5	1	14 147
31	319	2.5	1	55 264
32	136	2.5	1	12 124
33	271	2.5	1	49 222
34	246	2.5	1	32 214
35	189	2.5	1	20 169
36	213	2.5	1	20 193
37	202	2.5	1	24 178
38	201	2.5	1	26 175
39	173	2.5	1	19 154
40	110	2.5	1	11 99
41	165	2.5	1	5 160
42	189	2.5	1	12 177
43	163	2.5	1	8 155
44	165	2.5	1	7 158
45	155	2.5	1	3 152
46	107	2.5	1	6 101
47	157	2.5	1	4 153
48	100	2.5	1	5 95
49	118	2.5	1	7 111
50	134	2.5	1	3 131
51	95	2.5	1	1 94
52	117	2.5	1	3 114
53	120	2.5	1	1 119
54	287	2.5	1	4 283
55	130	2.5	1	1 129
56	107	2.5	1	0 107
57	125	2.5	1	0 125
58	119	2.5	1	0 119
59	102	2.5	1	0 102
60	174	2.5	1	0 174
61	98	2.5	1	2 96
62	118	2.5	1	2 116
63	174	2.5	1	0 174
64	126	2.5	1	0 126
65	118	2.5	1	0 118
66	120	2.5	1	0 120
67	98	2.5	1	0 98
68	235	2.5	1	3 232
69	118	2.5	1	0 118
70	146	2.5	1	0 146
71	104	2.5	1	1 103
72	72	2.5	1	1 71
73	201	2.5	1	0 201
74	131	2.5	1	0 131
75	374	2.5	1	1 373
76	152	2.5	1	3 149
77	101	2.5	1	1 100
78	237	2.5	1	0 237
79	132	2.5	1	1 131
80	128	2.5	1	0 128
81	77	2.5	1	0 77
82	63	2.5	1	0 63
83	174	2.5	1	2 172
84	87	2.5	1	1 86
85	252	2.5	1	0 252
86	101	2.5	1	0 101
87	118	2.5	1	0 118
88	219	2.5	1	1 218
89	60	2.5	1	0 60
90	69	2.5	1	0 69
91	178	2.5	1	0 178
92	155	2.5	1	1 154
93	349	2.5	1	1 348
94	68	2.5	1	0 68
95	65	2.5	1	0 65
96	44	2.5	1	0 44
97	65	2.5	1	1 64
98	213	2.5	1	3 210
99	89	2.5	1	0 89
100	76	2.5	1	0 76
101	26	2.5	1	0 26


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_1.fastq
=============================================
41500296 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007071_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007071_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 122.30 s (3 us/read; 20.36 M reads/minute).

=== Summary ===

Total reads processed:              41,500,296
Reads with adapters:                17,300,822 (41.7%)
Reads written (passing filters):    41,500,296 (100.0%)

Total basepairs processed: 4,064,381,162 bp
Quality-trimmed:              13,145,593 bp (0.3%)
Total written (filtered):  4,025,655,756 bp (99.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17300822 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.3%
  C: 29.2%
  G: 26.4%
  T: 23.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	12480433	10375074.0	0	12480433
2	3084900	2593768.5	0	3084900
3	1254985	648442.1	0	1254985
4	414057	162110.5	0	414057
5	11476	40527.6	0	11476
6	7904	10131.9	0	7904
7	2596	2533.0	0	2596
8	1106	633.2	0	1106
9	594	158.3	0	456 138
10	743	39.6	1	165 578
11	756	9.9	1	153 603
12	550	2.5	1	88 462
13	928	2.5	1	151 777
14	970	2.5	1	80 890
15	1420	2.5	1	162 1258
16	2122	2.5	1	319 1803
17	2150	2.5	1	430 1720
18	2048	2.5	1	401 1647
19	1829	2.5	1	379 1450
20	989	2.5	1	172 817
21	1004	2.5	1	204 800
22	1208	2.5	1	298 910
23	1341	2.5	1	415 926
24	1390	2.5	1	455 935
25	1515	2.5	1	511 1004
26	1605	2.5	1	660 945
27	1239	2.5	1	510 729
28	1814	2.5	1	803 1011
29	1664	2.5	1	857 807
30	887	2.5	1	385 502
31	968	2.5	1	423 545
32	927	2.5	1	464 463
33	878	2.5	1	377 501
34	779	2.5	1	361 418
35	580	2.5	1	235 345
36	503	2.5	1	216 287
37	544	2.5	1	200 344
38	391	2.5	1	137 254
39	329	2.5	1	101 228
40	275	2.5	1	86 189
41	272	2.5	1	53 219
42	278	2.5	1	56 222
43	174	2.5	1	37 137
44	218	2.5	1	33 185
45	158	2.5	1	27 131
46	110	2.5	1	13 97
47	186	2.5	1	8 178
48	149	2.5	1	11 138
49	116	2.5	1	6 110
50	159	2.5	1	7 152
51	116	2.5	1	3 113
52	120	2.5	1	5 115
53	138	2.5	1	4 134
54	257	2.5	1	1 256
55	115	2.5	1	1 114
56	106	2.5	1	0 106
57	119	2.5	1	3 116
58	93	2.5	1	2 91
59	102	2.5	1	0 102
60	158	2.5	1	2 156
61	97	2.5	1	2 95
62	94	2.5	1	0 94
63	183	2.5	1	2 181
64	131	2.5	1	0 131
65	95	2.5	1	1 94
66	90	2.5	1	1 89
67	92	2.5	1	1 91
68	245	2.5	1	2 243
69	92	2.5	1	1 91
70	128	2.5	1	0 128
71	95	2.5	1	0 95
72	91	2.5	1	0 91
73	224	2.5	1	2 222
74	140	2.5	1	0 140
75	347	2.5	1	1 346
76	130	2.5	1	1 129
77	95	2.5	1	0 95
78	214	2.5	1	1 213
79	157	2.5	1	0 157
80	133	2.5	1	2 131
81	92	2.5	1	2 90
82	81	2.5	1	0 81
83	163	2.5	1	0 163
84	96	2.5	1	0 96
85	214	2.5	1	0 214
86	99	2.5	1	0 99
87	80	2.5	1	0 80
88	198	2.5	1	0 198
89	71	2.5	1	0 71
90	75	2.5	1	0 75
91	158	2.5	1	1 157
92	165	2.5	1	0 165
93	319	2.5	1	1 318
94	52	2.5	1	0 52
95	58	2.5	1	0 58
96	47	2.5	1	0 47
97	73	2.5	1	0 73
98	179	2.5	1	1 178
99	76	2.5	1	0 76
100	87	2.5	1	0 87
101	25	2.5	1	0 25


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007071_2.fastq
=============================================
41500296 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007071_1_trimmed.fq and SRR11007071_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007071_1_trimmed.fq<<	RENAMING TO:>>Effector_CD4pos_T_1001_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007071_2_trimmed.fq<<	RENAMING TO:>>Effector_CD4pos_T_1001_R2_trimmed.fq<<
file_1: Effector_CD4pos_T_1001_R1_trimmed.fq, file_2: Effector_CD4pos_T_1001_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Effector_CD4pos_T_1001_R1_trimmed.fq and Effector_CD4pos_T_1001_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Effector_CD4pos_T_1001_val_1.fq
Writing validated paired-end Read 2 reads to Effector_CD4pos_T_1001_val_2.fq

Total number of sequences analysed: 41500296

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 7166 (0.02%)


  >>> Now running FastQC on the validated data Effector_CD4pos_T_1001_val_1.fq<<<

Started analysis of Effector_CD4pos_T_1001_val_1.fq
Approx 5% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 10% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 15% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 20% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 25% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 30% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 35% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 40% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 45% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 50% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 55% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 60% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 65% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 70% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 75% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 80% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 85% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 90% complete for Effector_CD4pos_T_1001_val_1.fq
Approx 95% complete for Effector_CD4pos_T_1001_val_1.fq
Analysis complete for Effector_CD4pos_T_1001_val_1.fq

  >>> Now running FastQC on the validated data Effector_CD4pos_T_1001_val_2.fq<<<

Started analysis of Effector_CD4pos_T_1001_val_2.fq
Approx 5% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 10% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 15% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 20% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 25% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 30% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 35% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 40% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 45% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 50% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 55% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 60% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 65% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 70% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 75% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 80% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 85% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 90% complete for Effector_CD4pos_T_1001_val_2.fq
Approx 95% complete for Effector_CD4pos_T_1001_val_2.fq
Analysis complete for Effector_CD4pos_T_1001_val_2.fq
Deleting both intermediate output files Effector_CD4pos_T_1001_R1_trimmed.fq and Effector_CD4pos_T_1001_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Regulatory_T_1001<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	57	CTGTCTCTTATA	1000000	0.01
smallRNA	1	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 57). Second best hit was smallRNA (count: 1)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007082_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007082_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 134.91 s (3 us/read; 20.15 M reads/minute).

=== Summary ===

Total reads processed:              45,297,624
Reads with adapters:                19,005,198 (42.0%)
Reads written (passing filters):    45,297,624 (100.0%)

Total basepairs processed: 4,415,529,233 bp
Quality-trimmed:               5,471,300 bp (0.1%)
Total written (filtered):  4,382,402,396 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 19005198 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.9%
  C: 29.1%
  G: 25.7%
  T: 23.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13741082	11324406.0	0	13741082
2	3341470	2831101.5	0	3341470
3	1395937	707775.4	0	1395937
4	473560	176943.8	0	473560
5	13037	44236.0	0	13037
6	9489	11059.0	0	9489
7	3117	2764.7	0	3117
8	1280	691.2	0	1280
9	229	172.8	0	58 171
10	612	43.2	1	19 593
11	525	10.8	1	24 501
12	468	2.7	1	33 435
13	466	2.7	1	19 447
14	801	2.7	1	77 724
15	944	2.7	1	57 887
16	1640	2.7	1	239 1401
17	733	2.7	1	91 642
18	1452	2.7	1	205 1247
19	894	2.7	1	132 762
20	470	2.7	1	62 408
21	587	2.7	1	84 503
22	308	2.7	1	37 271
23	696	2.7	1	139 557
24	350	2.7	1	50 300
25	573	2.7	1	117 456
26	700	2.7	1	139 561
27	658	2.7	1	129 529
28	601	2.7	1	144 457
29	664	2.7	1	140 524
30	242	2.7	1	29 213
31	371	2.7	1	79 292
32	194	2.7	1	17 177
33	320	2.7	1	47 273
34	336	2.7	1	52 284
35	258	2.7	1	40 218
36	295	2.7	1	39 256
37	211	2.7	1	23 188
38	239	2.7	1	24 215
39	212	2.7	1	26 186
40	191	2.7	1	26 165
41	186	2.7	1	16 170
42	186	2.7	1	8 178
43	177	2.7	1	13 164
44	160	2.7	1	9 151
45	178	2.7	1	10 168
46	119	2.7	1	11 108
47	178	2.7	1	8 170
48	168	2.7	1	8 160
49	114	2.7	1	4 110
50	187	2.7	1	6 181
51	104	2.7	1	2 102
52	128	2.7	1	3 125
53	161	2.7	1	2 159
54	277	2.7	1	6 271
55	181	2.7	1	3 178
56	111	2.7	1	0 111
57	124	2.7	1	1 123
58	129	2.7	1	2 127
59	131	2.7	1	2 129
60	186	2.7	1	1 185
61	99	2.7	1	0 99
62	141	2.7	1	0 141
63	181	2.7	1	2 179
64	141	2.7	1	3 138
65	131	2.7	1	1 130
66	132	2.7	1	1 131
67	133	2.7	1	3 130
68	241	2.7	1	3 238
69	136	2.7	1	1 135
70	127	2.7	1	3 124
71	107	2.7	1	0 107
72	102	2.7	1	3 99
73	264	2.7	1	0 264
74	152	2.7	1	0 152
75	261	2.7	1	1 260
76	112	2.7	1	2 110
77	128	2.7	1	1 127
78	217	2.7	1	1 216
79	175	2.7	1	0 175
80	108	2.7	1	0 108
81	114	2.7	1	0 114
82	86	2.7	1	0 86
83	159	2.7	1	1 158
84	102	2.7	1	1 101
85	190	2.7	1	1 189
86	129	2.7	1	0 129
87	98	2.7	1	1 97
88	217	2.7	1	1 216
89	93	2.7	1	0 93
90	90	2.7	1	0 90
91	264	2.7	1	1 263
92	166	2.7	1	0 166
93	350	2.7	1	0 350
94	67	2.7	1	0 67
95	76	2.7	1	4 72
96	49	2.7	1	0 49
97	85	2.7	1	2 83
98	199	2.7	1	1 198
99	76	2.7	1	0 76
100	66	2.7	1	0 66
101	37	2.7	1	0 37


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_1.fastq
=============================================
45297624 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007082_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007082_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 133.87 s (3 us/read; 20.30 M reads/minute).

=== Summary ===

Total reads processed:              45,297,624
Reads with adapters:                18,989,963 (41.9%)
Reads written (passing filters):    45,297,624 (100.0%)

Total basepairs processed: 4,417,855,542 bp
Quality-trimmed:              22,380,188 bp (0.5%)
Total written (filtered):  4,367,060,995 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18989963 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.0%
  C: 28.9%
  G: 25.6%
  T: 23.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13653861	11324406.0	0	13653861
2	3382158	2831101.5	0	3382158
3	1390667	707775.4	0	1390667
4	473292	176943.8	0	473292
5	15102	44236.0	0	15102
6	10251	11059.0	0	10251
7	3683	2764.7	0	3683
8	1787	691.2	0	1787
9	920	172.8	0	714 206
10	1061	43.2	1	251 810
11	1060	10.8	1	256 804
12	778	2.7	1	184 594
13	1281	2.7	1	229 1052
14	1377	2.7	1	132 1245
15	2135	2.7	1	245 1890
16	3004	2.7	1	444 2560
17	3047	2.7	1	527 2520
18	3015	2.7	1	583 2432
19	2688	2.7	1	582 2106
20	1450	2.7	1	310 1140
21	1487	2.7	1	334 1153
22	1833	2.7	1	466 1367
23	1937	2.7	1	582 1355
24	1986	2.7	1	675 1311
25	2103	2.7	1	757 1346
26	2285	2.7	1	955 1330
27	1892	2.7	1	748 1144
28	2516	2.7	1	1105 1411
29	2354	2.7	1	1220 1134
30	1282	2.7	1	561 721
31	1527	2.7	1	692 835
32	1242	2.7	1	634 608
33	1177	2.7	1	544 633
34	1025	2.7	1	516 509
35	835	2.7	1	334 501
36	723	2.7	1	297 426
37	633	2.7	1	258 375
38	549	2.7	1	200 349
39	449	2.7	1	141 308
40	376	2.7	1	126 250
41	341	2.7	1	89 252
42	324	2.7	1	78 246
43	264	2.7	1	52 212
44	193	2.7	1	29 164
45	203	2.7	1	24 179
46	183	2.7	1	27 156
47	189	2.7	1	17 172
48	163	2.7	1	11 152
49	148	2.7	1	13 135
50	188	2.7	1	8 180
51	117	2.7	1	5 112
52	128	2.7	1	6 122
53	148	2.7	1	5 143
54	246	2.7	1	2 244
55	150	2.7	1	2 148
56	127	2.7	1	3 124
57	110	2.7	1	5 105
58	140	2.7	1	3 137
59	131	2.7	1	2 129
60	189	2.7	1	3 186
61	120	2.7	1	2 118
62	143	2.7	1	4 139
63	201	2.7	1	1 200
64	133	2.7	1	4 129
65	123	2.7	1	0 123
66	115	2.7	1	4 111
67	113	2.7	1	1 112
68	254	2.7	1	1 253
69	122	2.7	1	0 122
70	114	2.7	1	0 114
71	96	2.7	1	0 96
72	82	2.7	1	2 80
73	228	2.7	1	3 225
74	126	2.7	1	1 125
75	241	2.7	1	1 240
76	126	2.7	1	4 122
77	119	2.7	1	0 119
78	209	2.7	1	0 209
79	161	2.7	1	0 161
80	120	2.7	1	3 117
81	126	2.7	1	1 125
82	92	2.7	1	0 92
83	184	2.7	1	1 183
84	97	2.7	1	0 97
85	162	2.7	1	0 162
86	122	2.7	1	2 120
87	96	2.7	1	2 94
88	203	2.7	1	0 203
89	71	2.7	1	0 71
90	76	2.7	1	0 76
91	202	2.7	1	0 202
92	154	2.7	1	1 153
93	332	2.7	1	1 331
94	46	2.7	1	0 46
95	66	2.7	1	0 66
96	44	2.7	1	0 44
97	90	2.7	1	1 89
98	177	2.7	1	0 177
99	80	2.7	1	1 79
100	58	2.7	1	0 58
101	29	2.7	1	0 29


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007082_2.fastq
=============================================
45297624 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007082_1_trimmed.fq and SRR11007082_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007082_1_trimmed.fq<<	RENAMING TO:>>Regulatory_T_1001_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007082_2_trimmed.fq<<	RENAMING TO:>>Regulatory_T_1001_R2_trimmed.fq<<
file_1: Regulatory_T_1001_R1_trimmed.fq, file_2: Regulatory_T_1001_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Regulatory_T_1001_R1_trimmed.fq and Regulatory_T_1001_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Regulatory_T_1001_val_1.fq
Writing validated paired-end Read 2 reads to Regulatory_T_1001_val_2.fq

Total number of sequences analysed: 45297624

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 8261 (0.02%)


  >>> Now running FastQC on the validated data Regulatory_T_1001_val_1.fq<<<

Started analysis of Regulatory_T_1001_val_1.fq
Approx 5% complete for Regulatory_T_1001_val_1.fq
Approx 10% complete for Regulatory_T_1001_val_1.fq
Approx 15% complete for Regulatory_T_1001_val_1.fq
Approx 20% complete for Regulatory_T_1001_val_1.fq
Approx 25% complete for Regulatory_T_1001_val_1.fq
Approx 30% complete for Regulatory_T_1001_val_1.fq
Approx 35% complete for Regulatory_T_1001_val_1.fq
Approx 40% complete for Regulatory_T_1001_val_1.fq
Approx 45% complete for Regulatory_T_1001_val_1.fq
Approx 50% complete for Regulatory_T_1001_val_1.fq
Approx 55% complete for Regulatory_T_1001_val_1.fq
Approx 60% complete for Regulatory_T_1001_val_1.fq
Approx 65% complete for Regulatory_T_1001_val_1.fq
Approx 70% complete for Regulatory_T_1001_val_1.fq
Approx 75% complete for Regulatory_T_1001_val_1.fq
Approx 80% complete for Regulatory_T_1001_val_1.fq
Approx 85% complete for Regulatory_T_1001_val_1.fq
Approx 90% complete for Regulatory_T_1001_val_1.fq
Approx 95% complete for Regulatory_T_1001_val_1.fq
Analysis complete for Regulatory_T_1001_val_1.fq

  >>> Now running FastQC on the validated data Regulatory_T_1001_val_2.fq<<<

Started analysis of Regulatory_T_1001_val_2.fq
Approx 5% complete for Regulatory_T_1001_val_2.fq
Approx 10% complete for Regulatory_T_1001_val_2.fq
Approx 15% complete for Regulatory_T_1001_val_2.fq
Approx 20% complete for Regulatory_T_1001_val_2.fq
Approx 25% complete for Regulatory_T_1001_val_2.fq
Approx 30% complete for Regulatory_T_1001_val_2.fq
Approx 35% complete for Regulatory_T_1001_val_2.fq
Approx 40% complete for Regulatory_T_1001_val_2.fq
Approx 45% complete for Regulatory_T_1001_val_2.fq
Approx 50% complete for Regulatory_T_1001_val_2.fq
Approx 55% complete for Regulatory_T_1001_val_2.fq
Approx 60% complete for Regulatory_T_1001_val_2.fq
Approx 65% complete for Regulatory_T_1001_val_2.fq
Approx 70% complete for Regulatory_T_1001_val_2.fq
Approx 75% complete for Regulatory_T_1001_val_2.fq
Approx 80% complete for Regulatory_T_1001_val_2.fq
Approx 85% complete for Regulatory_T_1001_val_2.fq
Approx 90% complete for Regulatory_T_1001_val_2.fq
Approx 95% complete for Regulatory_T_1001_val_2.fq
Analysis complete for Regulatory_T_1001_val_2.fq
Deleting both intermediate output files Regulatory_T_1001_R1_trimmed.fq and Regulatory_T_1001_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mature_NK_1001<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	41	CTGTCTCTTATA	1000000	0.00
Illumina	1	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 41). Second best hit was Illumina (count: 1)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007090_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007090_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 134.06 s (4 us/read; 16.91 M reads/minute).

=== Summary ===

Total reads processed:              37,785,495
Reads with adapters:                16,167,025 (42.8%)
Reads written (passing filters):    37,785,495 (100.0%)

Total basepairs processed: 3,699,519,051 bp
Quality-trimmed:               3,736,916 bp (0.1%)
Total written (filtered):  3,672,340,308 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 16167025 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.7%
  C: 30.1%
  G: 26.6%
  T: 22.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11716805	9446373.8	0	11716805
2	2844064	2361593.4	0	2844064
3	1197770	590398.4	0	1197770
4	367271	147599.6	0	367271
5	11178	36899.9	0	11178
6	6494	9225.0	0	6494
7	2211	2306.2	0	2211
8	943	576.6	0	943
9	106	144.1	0	37 69
10	375	36.0	1	16 359
11	265	9.0	1	11 254
12	265	2.3	1	23 242
13	373	2.3	1	12 361
14	534	2.3	1	39 495
15	622	2.3	1	42 580
16	1023	2.3	1	160 863
17	505	2.3	1	55 450
18	987	2.3	1	127 860
19	649	2.3	1	87 562
20	305	2.3	1	38 267
21	429	2.3	1	51 378
22	209	2.3	1	24 185
23	527	2.3	1	94 433
24	247	2.3	1	44 203
25	397	2.3	1	79 318
26	501	2.3	1	90 411
27	449	2.3	1	102 347
28	423	2.3	1	91 332
29	467	2.3	1	94 373
30	170	2.3	1	15 155
31	275	2.3	1	37 238
32	159	2.3	1	25 134
33	282	2.3	1	47 235
34	261	2.3	1	44 217
35	186	2.3	1	25 161
36	168	2.3	1	13 155
37	202	2.3	1	22 180
38	253	2.3	1	30 223
39	142	2.3	1	11 131
40	144	2.3	1	13 131
41	132	2.3	1	15 117
42	185	2.3	1	9 176
43	157	2.3	1	11 146
44	124	2.3	1	8 116
45	101	2.3	1	3 98
46	101	2.3	1	2 99
47	125	2.3	1	0 125
48	173	2.3	1	2 171
49	103	2.3	1	3 100
50	122	2.3	1	4 118
51	128	2.3	1	2 126
52	97	2.3	1	4 93
53	133	2.3	1	0 133
54	176	2.3	1	2 174
55	109	2.3	1	0 109
56	100	2.3	1	2 98
57	101	2.3	1	2 99
58	122	2.3	1	4 118
59	99	2.3	1	0 99
60	112	2.3	1	1 111
61	75	2.3	1	0 75
62	89	2.3	1	2 87
63	128	2.3	1	2 126
64	112	2.3	1	0 112
65	107	2.3	1	0 107
66	147	2.3	1	1 146
67	120	2.3	1	1 119
68	281	2.3	1	1 280
69	101	2.3	1	2 99
70	142	2.3	1	0 142
71	85	2.3	1	0 85
72	94	2.3	1	0 94
73	306	2.3	1	0 306
74	152	2.3	1	0 152
75	674	2.3	1	0 674
76	176	2.3	1	2 174
77	90	2.3	1	0 90
78	237	2.3	1	0 237
79	78	2.3	1	0 78
80	161	2.3	1	0 161
81	106	2.3	1	0 106
82	57	2.3	1	0 57
83	238	2.3	1	0 238
84	80	2.3	1	0 80
85	374	2.3	1	1 373
86	102	2.3	1	0 102
87	68	2.3	1	0 68
88	270	2.3	1	0 270
89	79	2.3	1	0 79
90	59	2.3	1	0 59
91	151	2.3	1	0 151
92	92	2.3	1	0 92
93	261	2.3	1	0 261
94	30	2.3	1	0 30
95	41	2.3	1	0 41
96	37	2.3	1	0 37
97	86	2.3	1	0 86
98	200	2.3	1	0 200
99	82	2.3	1	0 82
100	104	2.3	1	0 104
101	17	2.3	1	0 17


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_1.fastq
=============================================
37785495 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007090_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007090_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 130.66 s (3 us/read; 17.35 M reads/minute).

=== Summary ===

Total reads processed:              37,785,495
Reads with adapters:                16,286,743 (43.1%)
Reads written (passing filters):    37,785,495 (100.0%)

Total basepairs processed: 3,701,928,916 bp
Quality-trimmed:              15,254,305 bp (0.4%)
Total written (filtered):  3,662,491,722 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 16286743 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.8%
  C: 29.8%
  G: 26.5%
  T: 22.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11809056	9446373.8	0	11809056
2	2842350	2361593.4	0	2842350
3	1203188	590398.4	0	1203188
4	355404	147599.6	0	355404
5	14378	36899.9	0	14378
6	7914	9225.0	0	7914
7	4033	2306.2	0	4033
8	1953	576.6	0	1953
9	533	144.1	0	401 132
10	911	36.0	1	156 755
11	923	9.0	1	202 721
12	511	2.3	1	98 413
13	1037	2.3	1	161 876
14	1026	2.3	1	114 912
15	2093	2.3	1	239 1854
16	2585	2.3	1	320 2265
17	2285	2.3	1	323 1962
18	2943	2.3	1	487 2456
19	2342	2.3	1	458 1884
20	1113	2.3	1	217 896
21	1133	2.3	1	189 944
22	1321	2.3	1	288 1033
23	1378	2.3	1	363 1015
24	1603	2.3	1	443 1160
25	1635	2.3	1	502 1133
26	1689	2.3	1	601 1088
27	1471	2.3	1	466 1005
28	1874	2.3	1	705 1169
29	1851	2.3	1	758 1093
30	943	2.3	1	327 616
31	1028	2.3	1	380 648
32	955	2.3	1	417 538
33	886	2.3	1	329 557
34	945	2.3	1	356 589
35	556	2.3	1	197 359
36	573	2.3	1	185 388
37	529	2.3	1	186 343
38	505	2.3	1	146 359
39	329	2.3	1	107 222
40	269	2.3	1	79 190
41	246	2.3	1	68 178
42	277	2.3	1	67 210
43	199	2.3	1	39 160
44	237	2.3	1	32 205
45	164	2.3	1	31 133
46	160	2.3	1	14 146
47	174	2.3	1	13 161
48	167	2.3	1	7 160
49	112	2.3	1	6 106
50	135	2.3	1	6 129
51	104	2.3	1	5 99
52	101	2.3	1	4 97
53	132	2.3	1	4 128
54	171	2.3	1	6 165
55	125	2.3	1	2 123
56	86	2.3	1	1 85
57	110	2.3	1	2 108
58	140	2.3	1	0 140
59	113	2.3	1	2 111
60	124	2.3	1	3 121
61	81	2.3	1	2 79
62	85	2.3	1	2 83
63	114	2.3	1	5 109
64	120	2.3	1	3 117
65	120	2.3	1	3 117
66	164	2.3	1	0 164
67	126	2.3	1	1 125
68	225	2.3	1	1 224
69	80	2.3	1	2 78
70	132	2.3	1	1 131
71	77	2.3	1	0 77
72	106	2.3	1	0 106
73	282	2.3	1	0 282
74	131	2.3	1	1 130
75	627	2.3	1	0 627
76	153	2.3	1	0 153
77	86	2.3	1	0 86
78	243	2.3	1	0 243
79	95	2.3	1	0 95
80	122	2.3	1	2 120
81	99	2.3	1	0 99
82	62	2.3	1	0 62
83	216	2.3	1	0 216
84	100	2.3	1	1 99
85	358	2.3	1	0 358
86	106	2.3	1	0 106
87	82	2.3	1	0 82
88	248	2.3	1	0 248
89	67	2.3	1	0 67
90	59	2.3	1	0 59
91	140	2.3	1	0 140
92	74	2.3	1	0 74
93	240	2.3	1	0 240
94	39	2.3	1	0 39
95	42	2.3	1	0 42
96	43	2.3	1	0 43
97	80	2.3	1	0 80
98	214	2.3	1	0 214
99	81	2.3	1	0 81
100	81	2.3	1	0 81
101	15	2.3	1	0 15


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007090_2.fastq
=============================================
37785495 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007090_1_trimmed.fq and SRR11007090_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007090_1_trimmed.fq<<	RENAMING TO:>>Mature_NK_1001_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007090_2_trimmed.fq<<	RENAMING TO:>>Mature_NK_1001_R2_trimmed.fq<<
file_1: Mature_NK_1001_R1_trimmed.fq, file_2: Mature_NK_1001_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Mature_NK_1001_R1_trimmed.fq and Mature_NK_1001_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Mature_NK_1001_val_1.fq
Writing validated paired-end Read 2 reads to Mature_NK_1001_val_2.fq

Total number of sequences analysed: 37785495

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 6907 (0.02%)


  >>> Now running FastQC on the validated data Mature_NK_1001_val_1.fq<<<

Started analysis of Mature_NK_1001_val_1.fq
Approx 5% complete for Mature_NK_1001_val_1.fq
Approx 10% complete for Mature_NK_1001_val_1.fq
Approx 15% complete for Mature_NK_1001_val_1.fq
Approx 20% complete for Mature_NK_1001_val_1.fq
Approx 25% complete for Mature_NK_1001_val_1.fq
Approx 30% complete for Mature_NK_1001_val_1.fq
Approx 35% complete for Mature_NK_1001_val_1.fq
Approx 40% complete for Mature_NK_1001_val_1.fq
Approx 45% complete for Mature_NK_1001_val_1.fq
Approx 50% complete for Mature_NK_1001_val_1.fq
Approx 55% complete for Mature_NK_1001_val_1.fq
Approx 60% complete for Mature_NK_1001_val_1.fq
Approx 65% complete for Mature_NK_1001_val_1.fq
Approx 70% complete for Mature_NK_1001_val_1.fq
Approx 75% complete for Mature_NK_1001_val_1.fq
Approx 80% complete for Mature_NK_1001_val_1.fq
Approx 85% complete for Mature_NK_1001_val_1.fq
Approx 90% complete for Mature_NK_1001_val_1.fq
Approx 95% complete for Mature_NK_1001_val_1.fq
Analysis complete for Mature_NK_1001_val_1.fq

  >>> Now running FastQC on the validated data Mature_NK_1001_val_2.fq<<<

Started analysis of Mature_NK_1001_val_2.fq
Approx 5% complete for Mature_NK_1001_val_2.fq
Approx 10% complete for Mature_NK_1001_val_2.fq
Approx 15% complete for Mature_NK_1001_val_2.fq
Approx 20% complete for Mature_NK_1001_val_2.fq
Approx 25% complete for Mature_NK_1001_val_2.fq
Approx 30% complete for Mature_NK_1001_val_2.fq
Approx 35% complete for Mature_NK_1001_val_2.fq
Approx 40% complete for Mature_NK_1001_val_2.fq
Approx 45% complete for Mature_NK_1001_val_2.fq
Approx 50% complete for Mature_NK_1001_val_2.fq
Approx 55% complete for Mature_NK_1001_val_2.fq
Approx 60% complete for Mature_NK_1001_val_2.fq
Approx 65% complete for Mature_NK_1001_val_2.fq
Approx 70% complete for Mature_NK_1001_val_2.fq
Approx 75% complete for Mature_NK_1001_val_2.fq
Approx 80% complete for Mature_NK_1001_val_2.fq
Approx 85% complete for Mature_NK_1001_val_2.fq
Approx 90% complete for Mature_NK_1001_val_2.fq
Approx 95% complete for Mature_NK_1001_val_2.fq
Analysis complete for Mature_NK_1001_val_2.fq
Deleting both intermediate output files Mature_NK_1001_R1_trimmed.fq and Mature_NK_1001_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Monocytes_1001<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	76	CTGTCTCTTATA	1000000	0.01
smallRNA	20	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 76). Second best hit was smallRNA (count: 20)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007092_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007092_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 135.09 s (3 us/read; 17.92 M reads/minute).

=== Summary ===

Total reads processed:              40,355,931
Reads with adapters:                17,437,112 (43.2%)
Reads written (passing filters):    40,355,931 (100.0%)

Total basepairs processed: 3,906,578,069 bp
Quality-trimmed:               2,339,521 bp (0.1%)
Total written (filtered):  3,879,121,716 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17437112 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.8%
  C: 30.9%
  G: 26.9%
  T: 21.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	12691922	10088982.8	0	12691922
2	2922870	2522245.7	0	2922870
3	1323473	630561.4	0	1323473
4	448962	157640.4	0	448962
5	11078	39410.1	0	11078
6	19127	9852.5	0	19127
7	3530	2463.1	0	3530
8	631	615.8	0	631
9	118	153.9	0	23 95
10	329	38.5	1	7 322
11	305	9.6	1	17 288
12	257	2.4	1	17 240
13	217	2.4	1	3 214
14	447	2.4	1	55 392
15	425	2.4	1	39 386
16	1089	2.4	1	226 863
17	335	2.4	1	52 283
18	695	2.4	1	113 582
19	425	2.4	1	70 355
20	258	2.4	1	36 222
21	386	2.4	1	53 333
22	130	2.4	1	15 115
23	494	2.4	1	104 390
24	173	2.4	1	36 137
25	333	2.4	1	86 247
26	402	2.4	1	83 319
27	413	2.4	1	86 327
28	353	2.4	1	88 265
29	397	2.4	1	77 320
30	103	2.4	1	10 93
31	269	2.4	1	61 208
32	106	2.4	1	10 96
33	226	2.4	1	52 174
34	184	2.4	1	35 149
35	197	2.4	1	35 162
36	154	2.4	1	18 136
37	178	2.4	1	41 137
38	176	2.4	1	17 159
39	110	2.4	1	18 92
40	120	2.4	1	14 106
41	123	2.4	1	20 103
42	131	2.4	1	11 120
43	100	2.4	1	8 92
44	112	2.4	1	5 107
45	66	2.4	1	4 62
46	88	2.4	1	0 88
47	75	2.4	1	0 75
48	111	2.4	1	0 111
49	113	2.4	1	4 109
50	93	2.4	1	3 90
51	62	2.4	1	2 60
52	75	2.4	1	2 73
53	129	2.4	1	2 127
54	124	2.4	1	4 120
55	103	2.4	1	0 103
56	75	2.4	1	2 73
57	108	2.4	1	1 107
58	73	2.4	1	1 72
59	64	2.4	1	0 64
60	105	2.4	1	1 104
61	68	2.4	1	0 68
62	78	2.4	1	1 77
63	133	2.4	1	0 133
64	130	2.4	1	1 129
65	94	2.4	1	0 94
66	95	2.4	1	0 95
67	68	2.4	1	1 67
68	161	2.4	1	0 161
69	83	2.4	1	0 83
70	114	2.4	1	0 114
71	68	2.4	1	0 68
72	93	2.4	1	1 92
73	192	2.4	1	1 191
74	76	2.4	1	1 75
75	164	2.4	1	0 164
76	65	2.4	1	0 65
77	76	2.4	1	1 75
78	167	2.4	1	1 166
79	81	2.4	1	0 81
80	88	2.4	1	0 88
81	82	2.4	1	0 82
82	67	2.4	1	1 66
83	155	2.4	1	0 155
84	46	2.4	1	0 46
85	146	2.4	1	0 146
86	72	2.4	1	1 71
87	64	2.4	1	1 63
88	104	2.4	1	0 104
89	53	2.4	1	1 52
90	52	2.4	1	0 52
91	147	2.4	1	3 144
92	111	2.4	1	0 111
93	212	2.4	1	1 211
94	26	2.4	1	0 26
95	30	2.4	1	0 30
96	32	2.4	1	0 32
97	62	2.4	1	0 62
98	115	2.4	1	0 115
99	62	2.4	1	0 62
100	41	2.4	1	0 41
101	12	2.4	1	0 12


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_1.fastq
=============================================
40355931 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007092_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007092_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 135.13 s (3 us/read; 17.92 M reads/minute).

=== Summary ===

Total reads processed:              40,355,931
Reads with adapters:                17,582,188 (43.6%)
Reads written (passing filters):    40,355,931 (100.0%)

Total basepairs processed: 3,908,323,887 bp
Quality-trimmed:               7,177,929 bp (0.2%)
Total written (filtered):  3,875,400,117 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17582188 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.9%
  C: 30.8%
  G: 26.7%
  T: 21.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	12802844	10088982.8	0	12802844
2	2938735	2522245.7	0	2938735
3	1329050	630561.4	0	1329050
4	437400	157640.4	0	437400
5	13243	39410.1	0	13243
6	19500	9852.5	0	19500
7	4546	2463.1	0	4546
8	1251	615.8	0	1251
9	348	153.9	0	208 140
10	714	38.5	1	102 612
11	585	9.6	1	103 482
12	435	2.4	1	76 359
13	635	2.4	1	96 539
14	802	2.4	1	69 733
15	1263	2.4	1	142 1121
16	2003	2.4	1	277 1726
17	1525	2.4	1	296 1229
18	1817	2.4	1	306 1511
19	1539	2.4	1	297 1242
20	656	2.4	1	143 513
21	1012	2.4	1	170 842
22	1171	2.4	1	253 918
23	949	2.4	1	302 647
24	1200	2.4	1	338 862
25	1262	2.4	1	383 879
26	1228	2.4	1	475 753
27	1184	2.4	1	431 753
28	1584	2.4	1	659 925
29	1370	2.4	1	666 704
30	750	2.4	1	270 480
31	895	2.4	1	346 549
32	718	2.4	1	339 379
33	723	2.4	1	263 460
34	715	2.4	1	276 439
35	485	2.4	1	179 306
36	444	2.4	1	162 282
37	414	2.4	1	147 267
38	434	2.4	1	136 298
39	256	2.4	1	99 157
40	188	2.4	1	52 136
41	226	2.4	1	51 175
42	217	2.4	1	38 179
43	127	2.4	1	25 102
44	152	2.4	1	21 131
45	115	2.4	1	18 97
46	117	2.4	1	14 103
47	106	2.4	1	16 90
48	130	2.4	1	9 121
49	102	2.4	1	7 95
50	100	2.4	1	8 92
51	84	2.4	1	4 80
52	79	2.4	1	2 77
53	134	2.4	1	4 130
54	122	2.4	1	1 121
55	105	2.4	1	3 102
56	76	2.4	1	5 71
57	119	2.4	1	3 116
58	83	2.4	1	0 83
59	69	2.4	1	1 68
60	108	2.4	1	1 107
61	84	2.4	1	0 84
62	66	2.4	1	0 66
63	139	2.4	1	1 138
64	101	2.4	1	1 100
65	94	2.4	1	1 93
66	85	2.4	1	0 85
67	69	2.4	1	0 69
68	158	2.4	1	0 158
69	92	2.4	1	2 90
70	107	2.4	1	0 107
71	62	2.4	1	1 61
72	105	2.4	1	0 105
73	239	2.4	1	1 238
74	94	2.4	1	1 93
75	185	2.4	1	0 185
76	77	2.4	1	0 77
77	97	2.4	1	0 97
78	179	2.4	1	0 179
79	106	2.4	1	0 106
80	79	2.4	1	1 78
81	80	2.4	1	0 80
82	69	2.4	1	0 69
83	160	2.4	1	0 160
84	54	2.4	1	0 54
85	147	2.4	1	0 147
86	50	2.4	1	0 50
87	73	2.4	1	0 73
88	105	2.4	1	0 105
89	49	2.4	1	0 49
90	63	2.4	1	0 63
91	137	2.4	1	0 137
92	82	2.4	1	0 82
93	245	2.4	1	0 245
94	33	2.4	1	0 33
95	34	2.4	1	0 34
96	36	2.4	1	0 36
97	65	2.4	1	0 65
98	136	2.4	1	0 136
99	46	2.4	1	0 46
100	45	2.4	1	0 45
101	17	2.4	1	0 17


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007092_2.fastq
=============================================
40355931 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007092_1_trimmed.fq and SRR11007092_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007092_1_trimmed.fq<<	RENAMING TO:>>Monocytes_1001_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007092_2_trimmed.fq<<	RENAMING TO:>>Monocytes_1001_R2_trimmed.fq<<
file_1: Monocytes_1001_R1_trimmed.fq, file_2: Monocytes_1001_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Monocytes_1001_R1_trimmed.fq and Monocytes_1001_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Monocytes_1001_val_1.fq
Writing validated paired-end Read 2 reads to Monocytes_1001_val_2.fq

Total number of sequences analysed: 40355931

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 5289 (0.01%)


  >>> Now running FastQC on the validated data Monocytes_1001_val_1.fq<<<

Started analysis of Monocytes_1001_val_1.fq
Approx 5% complete for Monocytes_1001_val_1.fq
Approx 10% complete for Monocytes_1001_val_1.fq
Approx 15% complete for Monocytes_1001_val_1.fq
Approx 20% complete for Monocytes_1001_val_1.fq
Approx 25% complete for Monocytes_1001_val_1.fq
Approx 30% complete for Monocytes_1001_val_1.fq
Approx 35% complete for Monocytes_1001_val_1.fq
Approx 40% complete for Monocytes_1001_val_1.fq
Approx 45% complete for Monocytes_1001_val_1.fq
Approx 50% complete for Monocytes_1001_val_1.fq
Approx 55% complete for Monocytes_1001_val_1.fq
Approx 60% complete for Monocytes_1001_val_1.fq
Approx 65% complete for Monocytes_1001_val_1.fq
Approx 70% complete for Monocytes_1001_val_1.fq
Approx 75% complete for Monocytes_1001_val_1.fq
Approx 80% complete for Monocytes_1001_val_1.fq
Approx 85% complete for Monocytes_1001_val_1.fq
Approx 90% complete for Monocytes_1001_val_1.fq
Approx 95% complete for Monocytes_1001_val_1.fq
Analysis complete for Monocytes_1001_val_1.fq

  >>> Now running FastQC on the validated data Monocytes_1001_val_2.fq<<<

Started analysis of Monocytes_1001_val_2.fq
Approx 5% complete for Monocytes_1001_val_2.fq
Approx 10% complete for Monocytes_1001_val_2.fq
Approx 15% complete for Monocytes_1001_val_2.fq
Approx 20% complete for Monocytes_1001_val_2.fq
Approx 25% complete for Monocytes_1001_val_2.fq
Approx 30% complete for Monocytes_1001_val_2.fq
Approx 35% complete for Monocytes_1001_val_2.fq
Approx 40% complete for Monocytes_1001_val_2.fq
Approx 45% complete for Monocytes_1001_val_2.fq
Approx 50% complete for Monocytes_1001_val_2.fq
Approx 55% complete for Monocytes_1001_val_2.fq
Approx 60% complete for Monocytes_1001_val_2.fq
Approx 65% complete for Monocytes_1001_val_2.fq
Approx 70% complete for Monocytes_1001_val_2.fq
Approx 75% complete for Monocytes_1001_val_2.fq
Approx 80% complete for Monocytes_1001_val_2.fq
Approx 85% complete for Monocytes_1001_val_2.fq
Approx 90% complete for Monocytes_1001_val_2.fq
Approx 95% complete for Monocytes_1001_val_2.fq
Analysis complete for Monocytes_1001_val_2.fq
Deleting both intermediate output files Monocytes_1001_R1_trimmed.fq and Monocytes_1001_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Myeloid_DCs_1001<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	56	CTGTCTCTTATA	1000000	0.01
smallRNA	16	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 56). Second best hit was smallRNA (count: 16)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007094_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007094_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 139.57 s (3 us/read; 17.56 M reads/minute).

=== Summary ===

Total reads processed:              40,853,462
Reads with adapters:                17,204,014 (42.1%)
Reads written (passing filters):    40,853,462 (100.0%)

Total basepairs processed: 3,988,693,488 bp
Quality-trimmed:               3,577,205 bp (0.1%)
Total written (filtered):  3,960,055,467 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17204014 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.1%
  C: 30.4%
  G: 26.1%
  T: 22.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	12374893	10213365.5	0	12374893
2	3051164	2553341.4	0	3051164
3	1299662	638335.3	0	1299662
4	427679	159583.8	0	427679
5	10813	39896.0	0	10813
6	16279	9974.0	0	16279
7	3426	2493.5	0	3426
8	835	623.4	0	835
9	163	155.8	0	30 133
10	387	39.0	1	17 370
11	286	9.7	1	8 278
12	291	2.4	1	23 268
13	314	2.4	1	14 300
14	546	2.4	1	46 500
15	592	2.4	1	33 559
16	1126	2.4	1	184 942
17	408	2.4	1	45 363
18	805	2.4	1	103 702
19	510	2.4	1	77 433
20	386	2.4	1	44 342
21	403	2.4	1	61 342
22	213	2.4	1	25 188
23	496	2.4	1	101 395
24	231	2.4	1	38 193
25	376	2.4	1	59 317
26	482	2.4	1	86 396
27	480	2.4	1	95 385
28	452	2.4	1	115 337
29	455	2.4	1	86 369
30	157	2.4	1	12 145
31	299	2.4	1	49 250
32	154	2.4	1	16 138
33	262	2.4	1	49 213
34	250	2.4	1	37 213
35	209	2.4	1	38 171
36	203	2.4	1	18 185
37	183	2.4	1	22 161
38	196	2.4	1	16 180
39	139	2.4	1	15 124
40	139	2.4	1	13 126
41	148	2.4	1	8 140
42	206	2.4	1	10 196
43	164	2.4	1	20 144
44	150	2.4	1	10 140
45	131	2.4	1	13 118
46	96	2.4	1	3 93
47	156	2.4	1	2 154
48	130	2.4	1	7 123
49	139	2.4	1	4 135
50	114	2.4	1	0 114
51	91	2.4	1	3 88
52	128	2.4	1	5 123
53	143	2.4	1	2 141
54	183	2.4	1	2 181
55	129	2.4	1	3 126
56	102	2.4	1	2 100
57	136	2.4	1	1 135
58	104	2.4	1	5 99
59	99	2.4	1	1 98
60	158	2.4	1	4 154
61	90	2.4	1	1 89
62	87	2.4	1	2 85
63	164	2.4	1	2 162
64	117	2.4	1	0 117
65	87	2.4	1	0 87
66	107	2.4	1	0 107
67	96	2.4	1	4 92
68	218	2.4	1	2 216
69	122	2.4	1	0 122
70	114	2.4	1	0 114
71	64	2.4	1	0 64
72	81	2.4	1	2 79
73	209	2.4	1	1 208
74	88	2.4	1	0 88
75	206	2.4	1	0 206
76	102	2.4	1	0 102
77	113	2.4	1	1 112
78	201	2.4	1	2 199
79	116	2.4	1	0 116
80	118	2.4	1	0 118
81	111	2.4	1	0 111
82	90	2.4	1	1 89
83	199	2.4	1	0 199
84	85	2.4	1	0 85
85	154	2.4	1	0 154
86	94	2.4	1	1 93
87	75	2.4	1	0 75
88	150	2.4	1	0 150
89	84	2.4	1	0 84
90	54	2.4	1	0 54
91	203	2.4	1	2 201
92	183	2.4	1	1 182
93	396	2.4	1	4 392
94	43	2.4	1	0 43
95	54	2.4	1	0 54
96	57	2.4	1	0 57
97	74	2.4	1	0 74
98	189	2.4	1	4 185
99	70	2.4	1	0 70
100	74	2.4	1	0 74
101	24	2.4	1	0 24


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_1.fastq
=============================================
40853462 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007094_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007094_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 341.14 s (8 us/read; 7.19 M reads/minute).

=== Summary ===

Total reads processed:              40,853,462
Reads with adapters:                17,321,332 (42.4%)
Reads written (passing filters):    40,853,462 (100.0%)

Total basepairs processed: 3,990,663,834 bp
Quality-trimmed:              13,183,089 bp (0.3%)
Total written (filtered):  3,951,643,992 bp (99.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17321332 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.3%
  C: 30.3%
  G: 25.8%
  T: 22.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	12445431	10213365.5	0	12445431
2	3074268	2553341.4	0	3074268
3	1296163	638335.3	0	1296163
4	422170	159583.8	0	422170
5	12998	39896.0	0	12998
6	16545	9974.0	0	16545
7	4186	2493.5	0	4186
8	1471	623.4	0	1471
9	717	155.8	0	495 222
10	746	39.0	1	147 599
11	805	9.7	1	190 615
12	653	2.4	1	135 518
13	973	2.4	1	171 802
14	1136	2.4	1	113 1023
15	1762	2.4	1	194 1568
16	2444	2.4	1	399 2045
17	2471	2.4	1	458 2013
18	2356	2.4	1	489 1867
19	2155	2.4	1	473 1682
20	1109	2.4	1	239 870
21	1322	2.4	1	298 1024
22	1541	2.4	1	390 1151
23	1412	2.4	1	427 985
24	1641	2.4	1	518 1123
25	1644	2.4	1	580 1064
26	1770	2.4	1	724 1046
27	1541	2.4	1	595 946
28	2114	2.4	1	944 1170
29	2059	2.4	1	1093 966
30	1008	2.4	1	432 576
31	1161	2.4	1	522 639
32	1052	2.4	1	528 524
33	962	2.4	1	421 541
34	862	2.4	1	433 429
35	565	2.4	1	260 305
36	558	2.4	1	215 343
37	518	2.4	1	232 286
38	473	2.4	1	155 318
39	336	2.4	1	94 242
40	265	2.4	1	73 192
41	233	2.4	1	52 181
42	237	2.4	1	41 196
43	175	2.4	1	32 143
44	168	2.4	1	28 140
45	153	2.4	1	16 137
46	140	2.4	1	14 126
47	171	2.4	1	9 162
48	156	2.4	1	6 150
49	145	2.4	1	11 134
50	132	2.4	1	4 128
51	98	2.4	1	3 95
52	129	2.4	1	5 124
53	172	2.4	1	8 164
54	162	2.4	1	4 158
55	116	2.4	1	5 111
56	105	2.4	1	2 103
57	134	2.4	1	3 131
58	115	2.4	1	2 113
59	101	2.4	1	3 98
60	165	2.4	1	4 161
61	94	2.4	1	1 93
62	90	2.4	1	3 87
63	210	2.4	1	0 210
64	123	2.4	1	2 121
65	101	2.4	1	1 100
66	97	2.4	1	4 93
67	120	2.4	1	1 119
68	190	2.4	1	1 189
69	107	2.4	1	0 107
70	101	2.4	1	0 101
71	69	2.4	1	1 68
72	94	2.4	1	3 91
73	213	2.4	1	3 210
74	100	2.4	1	2 98
75	246	2.4	1	0 246
76	95	2.4	1	3 92
77	107	2.4	1	1 106
78	200	2.4	1	1 199
79	132	2.4	1	1 131
80	141	2.4	1	2 139
81	117	2.4	1	0 117
82	87	2.4	1	0 87
83	236	2.4	1	0 236
84	75	2.4	1	1 74
85	195	2.4	1	1 194
86	88	2.4	1	0 88
87	80	2.4	1	1 79
88	139	2.4	1	0 139
89	69	2.4	1	0 69
90	74	2.4	1	0 74
91	161	2.4	1	4 157
92	157	2.4	1	1 156
93	335	2.4	1	2 333
94	31	2.4	1	0 31
95	48	2.4	1	0 48
96	30	2.4	1	0 30
97	78	2.4	1	1 77
98	149	2.4	1	3 146
99	92	2.4	1	0 92
100	65	2.4	1	0 65
101	26	2.4	1	0 26


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007094_2.fastq
=============================================
40853462 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007094_1_trimmed.fq and SRR11007094_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007094_1_trimmed.fq<<	RENAMING TO:>>Myeloid_DCs_1001_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007094_2_trimmed.fq<<	RENAMING TO:>>Myeloid_DCs_1001_R2_trimmed.fq<<
file_1: Myeloid_DCs_1001_R1_trimmed.fq, file_2: Myeloid_DCs_1001_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Myeloid_DCs_1001_R1_trimmed.fq and Myeloid_DCs_1001_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Myeloid_DCs_1001_val_1.fq
Writing validated paired-end Read 2 reads to Myeloid_DCs_1001_val_2.fq

Total number of sequences analysed: 40853462

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 7316 (0.02%)


  >>> Now running FastQC on the validated data Myeloid_DCs_1001_val_1.fq<<<

Started analysis of Myeloid_DCs_1001_val_1.fq
Approx 5% complete for Myeloid_DCs_1001_val_1.fq
Approx 10% complete for Myeloid_DCs_1001_val_1.fq
Approx 15% complete for Myeloid_DCs_1001_val_1.fq
Approx 20% complete for Myeloid_DCs_1001_val_1.fq
Approx 25% complete for Myeloid_DCs_1001_val_1.fq
Approx 30% complete for Myeloid_DCs_1001_val_1.fq
Approx 35% complete for Myeloid_DCs_1001_val_1.fq
Approx 40% complete for Myeloid_DCs_1001_val_1.fq
Approx 45% complete for Myeloid_DCs_1001_val_1.fq
Approx 50% complete for Myeloid_DCs_1001_val_1.fq
Approx 55% complete for Myeloid_DCs_1001_val_1.fq
Approx 60% complete for Myeloid_DCs_1001_val_1.fq
Approx 65% complete for Myeloid_DCs_1001_val_1.fq
Approx 70% complete for Myeloid_DCs_1001_val_1.fq
Approx 75% complete for Myeloid_DCs_1001_val_1.fq
Approx 80% complete for Myeloid_DCs_1001_val_1.fq
Approx 85% complete for Myeloid_DCs_1001_val_1.fq
Approx 90% complete for Myeloid_DCs_1001_val_1.fq
Approx 95% complete for Myeloid_DCs_1001_val_1.fq
Analysis complete for Myeloid_DCs_1001_val_1.fq

  >>> Now running FastQC on the validated data Myeloid_DCs_1001_val_2.fq<<<

Started analysis of Myeloid_DCs_1001_val_2.fq
Approx 5% complete for Myeloid_DCs_1001_val_2.fq
Approx 10% complete for Myeloid_DCs_1001_val_2.fq
Approx 15% complete for Myeloid_DCs_1001_val_2.fq
Approx 20% complete for Myeloid_DCs_1001_val_2.fq
Approx 25% complete for Myeloid_DCs_1001_val_2.fq
Approx 30% complete for Myeloid_DCs_1001_val_2.fq
Approx 35% complete for Myeloid_DCs_1001_val_2.fq
Approx 40% complete for Myeloid_DCs_1001_val_2.fq
Approx 45% complete for Myeloid_DCs_1001_val_2.fq
Approx 50% complete for Myeloid_DCs_1001_val_2.fq
Approx 55% complete for Myeloid_DCs_1001_val_2.fq
Approx 60% complete for Myeloid_DCs_1001_val_2.fq
Approx 65% complete for Myeloid_DCs_1001_val_2.fq
Approx 70% complete for Myeloid_DCs_1001_val_2.fq
Approx 75% complete for Myeloid_DCs_1001_val_2.fq
Approx 80% complete for Myeloid_DCs_1001_val_2.fq
Approx 85% complete for Myeloid_DCs_1001_val_2.fq
Approx 90% complete for Myeloid_DCs_1001_val_2.fq
Approx 95% complete for Myeloid_DCs_1001_val_2.fq
Analysis complete for Myeloid_DCs_1001_val_2.fq
Deleting both intermediate output files Myeloid_DCs_1001_R1_trimmed.fq and Myeloid_DCs_1001_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>CD8pos_T_1002<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	467	CTGTCTCTTATA	1000000	0.05
Illumina	3	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 467). Second best hit was Illumina (count: 3)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007096_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007096_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 188.41 s (4 us/read; 16.96 M reads/minute).

=== Summary ===

Total reads processed:              53,267,142
Reads with adapters:                21,017,624 (39.5%)
Reads written (passing filters):    53,267,142 (100.0%)

Total basepairs processed: 4,719,636,149 bp
Quality-trimmed:              11,420,231 bp (0.2%)
Total written (filtered):  4,676,883,409 bp (99.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 21017624 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 27.6%
  C: 26.1%
  G: 22.6%
  T: 23.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	16092308	13316785.5	0	16092308
2	3154407	3329196.4	0	3154407
3	1205220	832299.1	0	1205220
4	440771	208074.8	0	440771
5	14597	52018.7	0	14597
6	10643	13004.7	0	10643
7	2917	3251.2	0	2917
8	547	812.8	0	547
9	308	203.2	0	64 244
10	772	50.8	1	36 736
11	1406	12.7	1	56 1350
12	1688	3.2	1	223 1465
13	859	3.2	1	56 803
14	2798	3.2	1	260 2538
15	1368	3.2	1	92 1276
16	6866	3.2	1	1772 5094
17	1457	3.2	1	254 1203
18	2674	3.2	1	524 2150
19	1668	3.2	1	348 1320
20	1712	3.2	1	408 1304
21	2856	3.2	1	668 2188
22	732	3.2	1	81 651
23	3103	3.2	1	826 2277
24	705	3.2	1	143 562
25	2225	3.2	1	602 1623
26	3166	3.2	1	819 2347
27	2993	3.2	1	760 2233
28	2997	3.2	1	829 2168
29	3853	3.2	1	1018 2835
30	448	3.2	1	79 369
31	2920	3.2	1	662 2258
32	471	3.2	1	85 386
33	4115	3.2	1	1026 3089
34	2561	3.2	1	631 1930
35	731	3.2	1	169 562
36	2439	3.2	1	596 1843
37	3070	3.2	1	740 2330
38	1375	3.2	1	336 1039
39	779	3.2	1	164 615
40	1482	3.2	1	362 1120
41	2091	3.2	1	523 1568
42	1188	3.2	1	245 943
43	3619	3.2	1	967 2652
44	1175	3.2	1	275 900
45	854	3.2	1	191 663
46	513	3.2	1	116 397
47	664	3.2	1	128 536
48	796	3.2	1	166 630
49	868	3.2	1	187 681
50	1030	3.2	1	196 834
51	1194	3.2	1	288 906
52	511	3.2	1	95 416
53	694	3.2	1	142 552
54	887	3.2	1	181 706
55	583	3.2	1	110 473
56	507	3.2	1	111 396
57	474	3.2	1	80 394
58	604	3.2	1	108 496
59	431	3.2	1	102 329
60	427	3.2	1	49 378
61	425	3.2	1	84 341
62	318	3.2	1	40 278
63	396	3.2	1	51 345
64	348	3.2	1	51 297
65	364	3.2	1	41 323
66	242	3.2	1	19 223
67	316	3.2	1	23 293
68	388	3.2	1	21 367
69	238	3.2	1	23 215
70	294	3.2	1	13 281
71	219	3.2	1	8 211
72	190	3.2	1	4 186
73	302	3.2	1	5 297
74	190	3.2	1	1 189
75	575	3.2	1	0 575
76	288	3.2	1	1 287
77	157	3.2	1	0 157
78	296	3.2	1	3 293
79	206	3.2	1	0 206
80	417	3.2	1	0 417
81	145	3.2	1	0 145
82	162	3.2	1	0 162
83	348	3.2	1	0 348
84	149	3.2	1	0 149
85	548	3.2	1	0 548
86	174	3.2	1	0 174
87	137	3.2	1	0 137
88	428	3.2	1	1 427
89	144	3.2	1	1 143
90	139	3.2	1	0 139
91	248	3.2	1	2 246
92	191	3.2	1	0 191
93	556	3.2	1	2 554
94	71	3.2	1	0 71
95	122	3.2	1	0 122
96	48	3.2	1	0 48
97	107	3.2	1	0 107
98	336	3.2	1	1 335
99	119	3.2	1	0 119
100	110	3.2	1	0 110
101	56	3.2	1	0 56


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_1.fastq
=============================================
53267142 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007096_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007096_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 187.04 s (4 us/read; 17.09 M reads/minute).

=== Summary ===

Total reads processed:              53,267,142
Reads with adapters:                20,997,798 (39.4%)
Reads written (passing filters):    53,267,142 (100.0%)

Total basepairs processed: 4,730,250,786 bp
Quality-trimmed:              34,544,209 bp (0.7%)
Total written (filtered):  4,661,584,506 bp (98.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 20997798 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 27.6%
  C: 25.8%
  G: 22.5%
  T: 24.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	15966297	13316785.5	0	15966297
2	3169728	3329196.4	0	3169728
3	1207384	832299.1	0	1207384
4	424470	208074.8	0	424470
5	18526	52018.7	0	18526
6	12338	13004.7	0	12338
7	4835	3251.2	0	4835
8	2414	812.8	0	2414
9	2013	203.2	0	1677 336
10	2401	50.8	1	960 1441
11	3320	12.7	1	1197 2123
12	3138	3.2	1	1217 1921
13	3057	3.2	1	1004 2053
14	4038	3.2	1	764 3274
15	3810	3.2	1	738 3072
16	7360	3.2	1	1638 5722
17	5789	3.2	1	1703 4086
18	5080	3.2	1	1363 3717
19	5423	3.2	1	1586 3837
20	2789	3.2	1	871 1918
21	4052	3.2	1	1060 2992
22	4406	3.2	1	1170 3236
23	3827	3.2	1	1339 2488
24	4315	3.2	1	1481 2834
25	5090	3.2	1	1854 3236
26	4939	3.2	1	2104 2835
27	4935	3.2	1	2030 2905
28	7048	3.2	1	3130 3918
29	5876	3.2	1	3205 2671
30	4523	3.2	1	1949 2574
31	5571	3.2	1	2519 3052
32	4715	3.2	1	2600 2115
33	5157	3.2	1	2441 2716
34	5929	3.2	1	2775 3154
35	4209	3.2	1	2213 1996
36	5458	3.2	1	2581 2877
37	3709	3.2	1	1992 1717
38	4633	3.2	1	2130 2503
39	3187	3.2	1	1627 1560
40	4222	3.2	1	1946 2276
41	3259	3.2	1	1525 1734
42	3073	3.2	1	1355 1718
43	3215	3.2	1	1428 1787
44	3108	3.2	1	1378 1730
45	2572	3.2	1	1078 1494
46	2193	3.2	1	992 1201
47	1993	3.2	1	876 1117
48	1889	3.2	1	850 1039
49	1844	3.2	1	810 1034
50	1621	3.2	1	656 965
51	1612	3.2	1	697 915
52	1307	3.2	1	533 774
53	1309	3.2	1	569 740
54	1210	3.2	1	475 735
55	1143	3.2	1	429 714
56	1010	3.2	1	379 631
57	928	3.2	1	369 559
58	1050	3.2	1	358 692
59	776	3.2	1	293 483
60	824	3.2	1	273 551
61	708	3.2	1	233 475
62	593	3.2	1	196 397
63	719	3.2	1	199 520
64	568	3.2	1	171 397
65	441	3.2	1	108 333
66	326	3.2	1	79 247
67	324	3.2	1	42 282
68	425	3.2	1	30 395
69	264	3.2	1	42 222
70	286	3.2	1	22 264
71	248	3.2	1	18 230
72	245	3.2	1	14 231
73	329	3.2	1	3 326
74	186	3.2	1	2 184
75	587	3.2	1	0 587
76	271	3.2	1	1 270
77	137	3.2	1	1 136
78	308	3.2	1	1 307
79	183	3.2	1	0 183
80	407	3.2	1	1 406
81	155	3.2	1	0 155
82	150	3.2	1	0 150
83	329	3.2	1	1 328
84	162	3.2	1	0 162
85	547	3.2	1	1 546
86	185	3.2	1	0 185
87	135	3.2	1	0 135
88	422	3.2	1	2 420
89	123	3.2	1	0 123
90	125	3.2	1	0 125
91	257	3.2	1	0 257
92	197	3.2	1	1 196
93	572	3.2	1	0 572
94	81	3.2	1	0 81
95	99	3.2	1	0 99
96	55	3.2	1	1 54
97	108	3.2	1	1 107
98	272	3.2	1	0 272
99	141	3.2	1	1 140
100	134	3.2	1	0 134
101	47	3.2	1	1 46


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007096_2.fastq
=============================================
53267142 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007096_1_trimmed.fq and SRR11007096_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007096_1_trimmed.fq<<	RENAMING TO:>>CD8pos_T_1002_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007096_2_trimmed.fq<<	RENAMING TO:>>CD8pos_T_1002_R2_trimmed.fq<<
file_1: CD8pos_T_1002_R1_trimmed.fq, file_2: CD8pos_T_1002_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: CD8pos_T_1002_R1_trimmed.fq and CD8pos_T_1002_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to CD8pos_T_1002_val_1.fq
Writing validated paired-end Read 2 reads to CD8pos_T_1002_val_2.fq

Total number of sequences analysed: 53267142

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 18002 (0.03%)


  >>> Now running FastQC on the validated data CD8pos_T_1002_val_1.fq<<<

Started analysis of CD8pos_T_1002_val_1.fq
Approx 5% complete for CD8pos_T_1002_val_1.fq
Approx 10% complete for CD8pos_T_1002_val_1.fq
Approx 15% complete for CD8pos_T_1002_val_1.fq
Approx 20% complete for CD8pos_T_1002_val_1.fq
Approx 25% complete for CD8pos_T_1002_val_1.fq
Approx 30% complete for CD8pos_T_1002_val_1.fq
Approx 35% complete for CD8pos_T_1002_val_1.fq
Approx 40% complete for CD8pos_T_1002_val_1.fq
Approx 45% complete for CD8pos_T_1002_val_1.fq
Approx 50% complete for CD8pos_T_1002_val_1.fq
Approx 55% complete for CD8pos_T_1002_val_1.fq
Approx 60% complete for CD8pos_T_1002_val_1.fq
Approx 65% complete for CD8pos_T_1002_val_1.fq
Approx 70% complete for CD8pos_T_1002_val_1.fq
Approx 75% complete for CD8pos_T_1002_val_1.fq
Approx 80% complete for CD8pos_T_1002_val_1.fq
Approx 85% complete for CD8pos_T_1002_val_1.fq
Approx 90% complete for CD8pos_T_1002_val_1.fq
Approx 95% complete for CD8pos_T_1002_val_1.fq
Analysis complete for CD8pos_T_1002_val_1.fq

  >>> Now running FastQC on the validated data CD8pos_T_1002_val_2.fq<<<

Started analysis of CD8pos_T_1002_val_2.fq
Approx 5% complete for CD8pos_T_1002_val_2.fq
Approx 10% complete for CD8pos_T_1002_val_2.fq
Approx 15% complete for CD8pos_T_1002_val_2.fq
Approx 20% complete for CD8pos_T_1002_val_2.fq
Approx 25% complete for CD8pos_T_1002_val_2.fq
Approx 30% complete for CD8pos_T_1002_val_2.fq
Approx 35% complete for CD8pos_T_1002_val_2.fq
Approx 40% complete for CD8pos_T_1002_val_2.fq
Approx 45% complete for CD8pos_T_1002_val_2.fq
Approx 50% complete for CD8pos_T_1002_val_2.fq
Approx 55% complete for CD8pos_T_1002_val_2.fq
Approx 60% complete for CD8pos_T_1002_val_2.fq
Approx 65% complete for CD8pos_T_1002_val_2.fq
Approx 70% complete for CD8pos_T_1002_val_2.fq
Approx 75% complete for CD8pos_T_1002_val_2.fq
Approx 80% complete for CD8pos_T_1002_val_2.fq
Approx 85% complete for CD8pos_T_1002_val_2.fq
Approx 90% complete for CD8pos_T_1002_val_2.fq
Approx 95% complete for CD8pos_T_1002_val_2.fq
Analysis complete for CD8pos_T_1002_val_2.fq
Deleting both intermediate output files CD8pos_T_1002_R1_trimmed.fq and CD8pos_T_1002_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Regulatory_T_1002<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	418	CTGTCTCTTATA	1000000	0.04
Illumina	4	AGATCGGAAGAGC	1000000	0.00
smallRNA	1	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 418). Second best hit was Illumina (count: 4)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007113_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007113_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 181.74 s (4 us/read; 16.06 M reads/minute).

=== Summary ===

Total reads processed:              48,659,839
Reads with adapters:                18,033,223 (37.1%)
Reads written (passing filters):    48,659,839 (100.0%)

Total basepairs processed: 4,432,402,675 bp
Quality-trimmed:              23,937,471 bp (0.5%)
Total written (filtered):  4,379,614,740 bp (98.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18033223 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 27.4%
  C: 24.3%
  G: 22.4%
  T: 25.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13409850	12164959.8	0	13409850
2	2930992	3041239.9	0	2930992
3	1161168	760310.0	0	1161168
4	357142	190077.5	0	357142
5	21103	47519.4	0	21103
6	11821	11879.8	0	11821
7	6983	2970.0	0	6983
8	4489	742.5	0	4489
9	735	185.6	0	304 431
10	1813	46.4	1	155 1658
11	2235	11.6	1	208 2027
12	2352	2.9	1	330 2022
13	2214	2.9	1	167 2047
14	3533	2.9	1	323 3210
15	4405	2.9	1	390 4015
16	6152	2.9	1	970 5182
17	4761	2.9	1	720 4041
18	5492	2.9	1	804 4688
19	4727	2.9	1	856 3871
20	2282	2.9	1	407 1875
21	2778	2.9	1	491 2287
22	1960	2.9	1	309 1651
23	3025	2.9	1	664 2361
24	1990	2.9	1	452 1538
25	3139	2.9	1	784 2355
26	3746	2.9	1	953 2793
27	3848	2.9	1	962 2886
28	3960	2.9	1	1063 2897
29	4240	2.9	1	1131 3109
30	1315	2.9	1	289 1026
31	2588	2.9	1	619 1969
32	1287	2.9	1	318 969
33	2931	2.9	1	711 2220
34	2309	2.9	1	594 1715
35	1649	2.9	1	466 1183
36	2483	2.9	1	637 1846
37	1762	2.9	1	435 1327
38	1775	2.9	1	432 1343
39	2055	2.9	1	501 1554
40	1956	2.9	1	457 1499
41	2027	2.9	1	461 1566
42	2203	2.9	1	459 1744
43	2303	2.9	1	535 1768
44	1510	2.9	1	346 1164
45	1453	2.9	1	326 1127
46	965	2.9	1	201 764
47	930	2.9	1	160 770
48	1453	2.9	1	300 1153
49	1105	2.9	1	246 859
50	1113	2.9	1	190 923
51	1279	2.9	1	302 977
52	1093	2.9	1	199 894
53	887	2.9	1	173 714
54	1043	2.9	1	200 843
55	1156	2.9	1	203 953
56	834	2.9	1	189 645
57	679	2.9	1	113 566
58	932	2.9	1	191 741
59	652	2.9	1	134 518
60	612	2.9	1	71 541
61	655	2.9	1	98 557
62	773	2.9	1	151 622
63	554	2.9	1	77 477
64	508	2.9	1	81 427
65	390	2.9	1	54 336
66	472	2.9	1	65 407
67	365	2.9	1	45 320
68	503	2.9	1	38 465
69	340	2.9	1	18 322
70	287	2.9	1	17 270
71	211	2.9	1	9 202
72	282	2.9	1	10 272
73	431	2.9	1	4 427
74	303	2.9	1	3 300
75	545	2.9	1	1 544
76	279	2.9	1	0 279
77	241	2.9	1	1 240
78	377	2.9	1	1 376
79	257	2.9	1	0 257
80	421	2.9	1	2 419
81	192	2.9	1	3 189
82	175	2.9	1	0 175
83	418	2.9	1	2 416
84	263	2.9	1	1 262
85	601	2.9	1	2 599
86	255	2.9	1	1 254
87	198	2.9	1	0 198
88	471	2.9	1	4 467
89	185	2.9	1	0 185
90	155	2.9	1	0 155
91	438	2.9	1	0 438
92	332	2.9	1	1 331
93	739	2.9	1	5 734
94	105	2.9	1	1 104
95	112	2.9	1	1 111
96	90	2.9	1	1 89
97	158	2.9	1	1 157
98	432	2.9	1	3 429
99	220	2.9	1	3 217
100	135	2.9	1	0 135
101	81	2.9	1	0 81


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_1.fastq
=============================================
48659839 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007113_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007113_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 179.59 s (4 us/read; 16.26 M reads/minute).

=== Summary ===

Total reads processed:              48,659,839
Reads with adapters:                17,972,134 (36.9%)
Reads written (passing filters):    48,659,839 (100.0%)

Total basepairs processed: 4,429,118,525 bp
Quality-trimmed:              42,828,137 bp (1.0%)
Total written (filtered):  4,358,420,020 bp (98.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17972134 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.0%
  C: 24.2%
  G: 21.9%
  T: 25.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13299483	12164959.8	0	13299483
2	3038845	3041239.9	0	3038845
3	1109697	760310.0	0	1109697
4	391350	190077.5	0	391350
5	14814	47519.4	0	14814
6	10949	11879.8	0	10949
7	3664	2970.0	0	3664
8	1739	742.5	0	1739
9	1398	185.6	0	1036 362
10	1481	46.4	1	536 945
11	2292	11.6	1	718 1574
12	2035	2.9	1	666 1369
13	2130	2.9	1	628 1502
14	2526	2.9	1	382 2144
15	2367	2.9	1	365 2002
16	4753	2.9	1	961 3792
17	3384	2.9	1	849 2535
18	2814	2.9	1	697 2117
19	2835	2.9	1	699 2136
20	1646	2.9	1	399 1247
21	2478	2.9	1	528 1950
22	2524	2.9	1	609 1915
23	2201	2.9	1	731 1470
24	2313	2.9	1	741 1572
25	2489	2.9	1	961 1528
26	2786	2.9	1	1100 1686
27	2704	2.9	1	1050 1654
28	3956	2.9	1	1614 2342
29	3124	2.9	1	1708 1416
30	2199	2.9	1	883 1316
31	2885	2.9	1	1164 1721
32	2390	2.9	1	1220 1170
33	2549	2.9	1	1104 1445
34	2070	2.9	1	1045 1025
35	1890	2.9	1	726 1164
36	1651	2.9	1	770 881
37	2301	2.9	1	855 1446
38	1558	2.9	1	707 851
39	1167	2.9	1	523 644
40	1137	2.9	1	520 617
41	1492	2.9	1	558 934
42	1141	2.9	1	462 679
43	1300	2.9	1	401 899
44	1112	2.9	1	362 750
45	1042	2.9	1	295 747
46	726	2.9	1	247 479
47	750	2.9	1	208 542
48	595	2.9	1	160 435
49	598	2.9	1	166 432
50	617	2.9	1	146 471
51	441	2.9	1	144 297
52	496	2.9	1	99 397
53	486	2.9	1	108 378
54	526	2.9	1	93 433
55	439	2.9	1	70 369
56	448	2.9	1	89 359
57	409	2.9	1	92 317
58	414	2.9	1	60 354
59	311	2.9	1	47 264
60	410	2.9	1	58 352
61	335	2.9	1	32 303
62	266	2.9	1	32 234
63	344	2.9	1	25 319
64	286	2.9	1	33 253
65	261	2.9	1	14 247
66	232	2.9	1	15 217
67	231	2.9	1	4 227
68	441	2.9	1	6 435
69	267	2.9	1	3 264
70	258	2.9	1	2 256
71	225	2.9	1	5 220
72	212	2.9	1	1 211
73	416	2.9	1	2 414
74	199	2.9	1	0 199
75	689	2.9	1	2 687
76	343	2.9	1	1 342
77	189	2.9	1	1 188
78	401	2.9	1	4 397
79	292	2.9	1	2 290
80	437	2.9	1	0 437
81	185	2.9	1	0 185
82	160	2.9	1	0 160
83	417	2.9	1	0 417
84	226	2.9	1	1 225
85	617	2.9	1	2 615
86	212	2.9	1	3 209
87	172	2.9	1	0 172
88	499	2.9	1	0 499
89	179	2.9	1	0 179
90	151	2.9	1	1 150
91	368	2.9	1	2 366
92	308	2.9	1	2 306
93	724	2.9	1	2 722
94	81	2.9	1	0 81
95	139	2.9	1	1 138
96	86	2.9	1	0 86
97	136	2.9	1	1 135
98	401	2.9	1	2 399
99	206	2.9	1	1 205
100	142	2.9	1	0 142
101	74	2.9	1	1 73


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007113_2.fastq
=============================================
48659839 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007113_1_trimmed.fq and SRR11007113_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007113_1_trimmed.fq<<	RENAMING TO:>>Regulatory_T_1002_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007113_2_trimmed.fq<<	RENAMING TO:>>Regulatory_T_1002_R2_trimmed.fq<<
file_1: Regulatory_T_1002_R1_trimmed.fq, file_2: Regulatory_T_1002_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Regulatory_T_1002_R1_trimmed.fq and Regulatory_T_1002_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Regulatory_T_1002_val_1.fq
Writing validated paired-end Read 2 reads to Regulatory_T_1002_val_2.fq

Total number of sequences analysed: 48659839

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 18074 (0.04%)


  >>> Now running FastQC on the validated data Regulatory_T_1002_val_1.fq<<<

Started analysis of Regulatory_T_1002_val_1.fq
Approx 5% complete for Regulatory_T_1002_val_1.fq
Approx 10% complete for Regulatory_T_1002_val_1.fq
Approx 15% complete for Regulatory_T_1002_val_1.fq
Approx 20% complete for Regulatory_T_1002_val_1.fq
Approx 25% complete for Regulatory_T_1002_val_1.fq
Approx 30% complete for Regulatory_T_1002_val_1.fq
Approx 35% complete for Regulatory_T_1002_val_1.fq
Approx 40% complete for Regulatory_T_1002_val_1.fq
Approx 45% complete for Regulatory_T_1002_val_1.fq
Approx 50% complete for Regulatory_T_1002_val_1.fq
Approx 55% complete for Regulatory_T_1002_val_1.fq
Approx 60% complete for Regulatory_T_1002_val_1.fq
Approx 65% complete for Regulatory_T_1002_val_1.fq
Approx 70% complete for Regulatory_T_1002_val_1.fq
Approx 75% complete for Regulatory_T_1002_val_1.fq
Approx 80% complete for Regulatory_T_1002_val_1.fq
Approx 85% complete for Regulatory_T_1002_val_1.fq
Approx 90% complete for Regulatory_T_1002_val_1.fq
Approx 95% complete for Regulatory_T_1002_val_1.fq
Analysis complete for Regulatory_T_1002_val_1.fq

  >>> Now running FastQC on the validated data Regulatory_T_1002_val_2.fq<<<

Started analysis of Regulatory_T_1002_val_2.fq
Approx 5% complete for Regulatory_T_1002_val_2.fq
Approx 10% complete for Regulatory_T_1002_val_2.fq
Approx 15% complete for Regulatory_T_1002_val_2.fq
Approx 20% complete for Regulatory_T_1002_val_2.fq
Approx 25% complete for Regulatory_T_1002_val_2.fq
Approx 30% complete for Regulatory_T_1002_val_2.fq
Approx 35% complete for Regulatory_T_1002_val_2.fq
Approx 40% complete for Regulatory_T_1002_val_2.fq
Approx 45% complete for Regulatory_T_1002_val_2.fq
Approx 50% complete for Regulatory_T_1002_val_2.fq
Approx 55% complete for Regulatory_T_1002_val_2.fq
Approx 60% complete for Regulatory_T_1002_val_2.fq
Approx 65% complete for Regulatory_T_1002_val_2.fq
Approx 70% complete for Regulatory_T_1002_val_2.fq
Approx 75% complete for Regulatory_T_1002_val_2.fq
Approx 80% complete for Regulatory_T_1002_val_2.fq
Approx 85% complete for Regulatory_T_1002_val_2.fq
Approx 90% complete for Regulatory_T_1002_val_2.fq
Approx 95% complete for Regulatory_T_1002_val_2.fq
Analysis complete for Regulatory_T_1002_val_2.fq
Deleting both intermediate output files Regulatory_T_1002_R1_trimmed.fq and Regulatory_T_1002_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mature_NK_1002<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	365	CTGTCTCTTATA	1000000	0.04
Illumina	1	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 365). Second best hit was Illumina (count: 1)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007121_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007121_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 126.60 s (4 us/read; 15.46 M reads/minute).

=== Summary ===

Total reads processed:              32,610,670
Reads with adapters:                12,760,817 (39.1%)
Reads written (passing filters):    32,610,670 (100.0%)

Total basepairs processed: 2,955,373,882 bp
Quality-trimmed:               5,580,597 bp (0.2%)
Total written (filtered):  2,930,604,543 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 12760817 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.6%
  C: 26.6%
  G: 23.0%
  T: 23.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	9626444	8152667.5	0	9626444
2	2015519	2038166.9	0	2015519
3	779661	509541.7	0	779661
4	268402	127385.4	0	268402
5	8178	31846.4	0	8178
6	5413	7961.6	0	5413
7	1438	1990.4	0	1438
8	238	497.6	0	238
9	164	124.4	0	29 135
10	428	31.1	1	16 412
11	707	7.8	1	19 688
12	839	1.9	1	78 761
13	497	1.9	1	17 480
14	1391	1.9	1	114 1277
15	651	1.9	1	32 619
16	3764	1.9	1	864 2900
17	678	1.9	1	107 571
18	1381	1.9	1	275 1106
19	798	1.9	1	123 675
20	917	1.9	1	176 741
21	1739	1.9	1	407 1332
22	389	1.9	1	41 348
23	1754	1.9	1	444 1310
24	346	1.9	1	50 296
25	1190	1.9	1	293 897
26	1798	1.9	1	430 1368
27	1848	1.9	1	430 1418
28	1570	1.9	1	355 1215
29	2112	1.9	1	486 1626
30	277	1.9	1	26 251
31	1737	1.9	1	410 1327
32	240	1.9	1	25 215
33	2075	1.9	1	509 1566
34	863	1.9	1	170 693
35	721	1.9	1	171 550
36	1117	1.9	1	246 871
37	1436	1.9	1	316 1120
38	1095	1.9	1	245 850
39	1757	1.9	1	451 1306
40	1057	1.9	1	248 809
41	1439	1.9	1	331 1108
42	786	1.9	1	150 636
43	2491	1.9	1	587 1904
44	724	1.9	1	157 567
45	465	1.9	1	83 382
46	254	1.9	1	40 214
47	391	1.9	1	74 317
48	444	1.9	1	102 342
49	472	1.9	1	100 372
50	502	1.9	1	100 402
51	566	1.9	1	133 433
52	268	1.9	1	44 224
53	329	1.9	1	62 267
54	488	1.9	1	100 388
55	302	1.9	1	48 254
56	232	1.9	1	36 196
57	267	1.9	1	37 230
58	350	1.9	1	54 296
59	255	1.9	1	40 215
60	212	1.9	1	22 190
61	230	1.9	1	30 200
62	176	1.9	1	18 158
63	244	1.9	1	16 228
64	168	1.9	1	17 151
65	212	1.9	1	22 190
66	175	1.9	1	5 170
67	151	1.9	1	8 143
68	247	1.9	1	9 238
69	174	1.9	1	8 166
70	168	1.9	1	6 162
71	168	1.9	1	3 165
72	125	1.9	1	1 124
73	236	1.9	1	1 235
74	167	1.9	1	0 167
75	391	1.9	1	0 391
76	212	1.9	1	0 212
77	117	1.9	1	0 117
78	176	1.9	1	0 176
79	151	1.9	1	0 151
80	243	1.9	1	0 243
81	130	1.9	1	1 129
82	97	1.9	1	0 97
83	218	1.9	1	0 218
84	97	1.9	1	1 96
85	353	1.9	1	0 353
86	136	1.9	1	0 136
87	115	1.9	1	0 115
88	251	1.9	1	1 250
89	108	1.9	1	1 107
90	84	1.9	1	0 84
91	136	1.9	1	0 136
92	127	1.9	1	0 127
93	415	1.9	1	1 414
94	76	1.9	1	0 76
95	86	1.9	1	1 85
96	48	1.9	1	0 48
97	91	1.9	1	0 91
98	198	1.9	1	1 197
99	124	1.9	1	0 124
100	72	1.9	1	0 72
101	58	1.9	1	0 58


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_1.fastq
=============================================
32610670 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007121_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007121_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 467.35 s (14 us/read; 4.19 M reads/minute).

=== Summary ===

Total reads processed:              32,610,670
Reads with adapters:                12,715,104 (39.0%)
Reads written (passing filters):    32,610,670 (100.0%)

Total basepairs processed: 2,958,097,564 bp
Quality-trimmed:              12,107,156 bp (0.4%)
Total written (filtered):  2,926,610,652 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 12715104 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.6%
  C: 26.4%
  G: 23.0%
  T: 24.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	9583949	8152667.5	0	9583949
2	2007770	2038166.9	0	2007770
3	779426	509541.7	0	779426
4	264063	127385.4	0	264063
5	9342	31846.4	0	9342
6	5781	7961.6	0	5781
7	1843	1990.4	0	1843
8	404	497.6	0	404
9	390	124.4	0	246 144
10	619	31.1	1	119 500
11	984	7.8	1	200 784
12	1001	1.9	1	210 791
13	816	1.9	1	177 639
14	1381	1.9	1	174 1207
15	1007	1.9	1	120 887
16	3039	1.9	1	639 2400
17	1508	1.9	1	339 1169
18	1417	1.9	1	274 1143
19	1407	1.9	1	282 1125
20	563	1.9	1	125 438
21	1539	1.9	1	334 1205
22	1310	1.9	1	270 1040
23	953	1.9	1	267 686
24	1223	1.9	1	341 882
25	1398	1.9	1	443 955
26	1176	1.9	1	425 751
27	1531	1.9	1	507 1024
28	2350	1.9	1	828 1522
29	1318	1.9	1	636 682
30	1374	1.9	1	394 980
31	1630	1.9	1	563 1067
32	1102	1.9	1	553 549
33	2178	1.9	1	689 1489
34	1316	1.9	1	550 766
35	1024	1.9	1	427 597
36	990	1.9	1	456 534
37	1887	1.9	1	638 1249
38	1069	1.9	1	399 670
39	904	1.9	1	396 508
40	946	1.9	1	386 560
41	1010	1.9	1	385 625
42	843	1.9	1	294 549
43	981	1.9	1	343 638
44	757	1.9	1	285 472
45	959	1.9	1	259 700
46	1184	1.9	1	374 810
47	581	1.9	1	221 360
48	864	1.9	1	281 583
49	731	1.9	1	276 455
50	656	1.9	1	193 463
51	615	1.9	1	221 394
52	609	1.9	1	204 405
53	528	1.9	1	166 362
54	543	1.9	1	140 403
55	568	1.9	1	171 397
56	469	1.9	1	141 328
57	452	1.9	1	134 318
58	521	1.9	1	151 370
59	329	1.9	1	86 243
60	386	1.9	1	95 291
61	365	1.9	1	83 282
62	296	1.9	1	87 209
63	349	1.9	1	69 280
64	251	1.9	1	49 202
65	278	1.9	1	54 224
66	220	1.9	1	34 186
67	165	1.9	1	13 152
68	312	1.9	1	21 291
69	210	1.9	1	20 190
70	185	1.9	1	9 176
71	164	1.9	1	12 152
72	144	1.9	1	6 138
73	243	1.9	1	1 242
74	166	1.9	1	2 164
75	411	1.9	1	0 411
76	204	1.9	1	0 204
77	125	1.9	1	0 125
78	200	1.9	1	0 200
79	177	1.9	1	1 176
80	222	1.9	1	0 222
81	123	1.9	1	0 123
82	100	1.9	1	0 100
83	196	1.9	1	0 196
84	109	1.9	1	0 109
85	324	1.9	1	0 324
86	133	1.9	1	1 132
87	114	1.9	1	1 113
88	240	1.9	1	0 240
89	110	1.9	1	0 110
90	78	1.9	1	0 78
91	163	1.9	1	1 162
92	120	1.9	1	1 119
93	424	1.9	1	1 423
94	72	1.9	1	0 72
95	82	1.9	1	0 82
96	53	1.9	1	1 52
97	67	1.9	1	1 66
98	195	1.9	1	0 195
99	103	1.9	1	0 103
100	66	1.9	1	0 66
101	31	1.9	1	0 31


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007121_2.fastq
=============================================
32610670 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007121_1_trimmed.fq and SRR11007121_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007121_1_trimmed.fq<<	RENAMING TO:>>Mature_NK_1002_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007121_2_trimmed.fq<<	RENAMING TO:>>Mature_NK_1002_R2_trimmed.fq<<
file_1: Mature_NK_1002_R1_trimmed.fq, file_2: Mature_NK_1002_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Mature_NK_1002_R1_trimmed.fq and Mature_NK_1002_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Mature_NK_1002_val_1.fq
Writing validated paired-end Read 2 reads to Mature_NK_1002_val_2.fq

Total number of sequences analysed: 32610670

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 9866 (0.03%)


  >>> Now running FastQC on the validated data Mature_NK_1002_val_1.fq<<<

Started analysis of Mature_NK_1002_val_1.fq
Approx 5% complete for Mature_NK_1002_val_1.fq
Approx 10% complete for Mature_NK_1002_val_1.fq
Approx 15% complete for Mature_NK_1002_val_1.fq
Approx 20% complete for Mature_NK_1002_val_1.fq
Approx 25% complete for Mature_NK_1002_val_1.fq
Approx 30% complete for Mature_NK_1002_val_1.fq
Approx 35% complete for Mature_NK_1002_val_1.fq
Approx 40% complete for Mature_NK_1002_val_1.fq
Approx 45% complete for Mature_NK_1002_val_1.fq
Approx 50% complete for Mature_NK_1002_val_1.fq
Approx 55% complete for Mature_NK_1002_val_1.fq
Approx 60% complete for Mature_NK_1002_val_1.fq
Approx 65% complete for Mature_NK_1002_val_1.fq
Approx 70% complete for Mature_NK_1002_val_1.fq
Approx 75% complete for Mature_NK_1002_val_1.fq
Approx 80% complete for Mature_NK_1002_val_1.fq
Approx 85% complete for Mature_NK_1002_val_1.fq
Approx 90% complete for Mature_NK_1002_val_1.fq
Approx 95% complete for Mature_NK_1002_val_1.fq
Analysis complete for Mature_NK_1002_val_1.fq

  >>> Now running FastQC on the validated data Mature_NK_1002_val_2.fq<<<

Started analysis of Mature_NK_1002_val_2.fq
Approx 5% complete for Mature_NK_1002_val_2.fq
Approx 10% complete for Mature_NK_1002_val_2.fq
Approx 15% complete for Mature_NK_1002_val_2.fq
Approx 20% complete for Mature_NK_1002_val_2.fq
Approx 25% complete for Mature_NK_1002_val_2.fq
Approx 30% complete for Mature_NK_1002_val_2.fq
Approx 35% complete for Mature_NK_1002_val_2.fq
Approx 40% complete for Mature_NK_1002_val_2.fq
Approx 45% complete for Mature_NK_1002_val_2.fq
Approx 50% complete for Mature_NK_1002_val_2.fq
Approx 55% complete for Mature_NK_1002_val_2.fq
Approx 60% complete for Mature_NK_1002_val_2.fq
Approx 65% complete for Mature_NK_1002_val_2.fq
Approx 70% complete for Mature_NK_1002_val_2.fq
Approx 75% complete for Mature_NK_1002_val_2.fq
Approx 80% complete for Mature_NK_1002_val_2.fq
Approx 85% complete for Mature_NK_1002_val_2.fq
Approx 90% complete for Mature_NK_1002_val_2.fq
Approx 95% complete for Mature_NK_1002_val_2.fq
Analysis complete for Mature_NK_1002_val_2.fq
Deleting both intermediate output files Mature_NK_1002_R1_trimmed.fq and Mature_NK_1002_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Monocytes_1002<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	487	CTGTCTCTTATA	1000000	0.05
Illumina	2	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 487). Second best hit was Illumina (count: 2)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007124_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007124_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 280.31 s (6 us/read; 9.87 M reads/minute).

=== Summary ===

Total reads processed:              46,098,644
Reads with adapters:                17,999,902 (39.0%)
Reads written (passing filters):    46,098,644 (100.0%)

Total basepairs processed: 4,091,109,296 bp
Quality-trimmed:              11,217,938 bp (0.3%)
Total written (filtered):  4,052,450,644 bp (99.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17999902 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.0%
  C: 26.6%
  G: 21.8%
  T: 23.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13744894	11524661.0	0	13744894
2	2677726	2881165.2	0	2677726
3	1059949	720291.3	0	1059949
4	383312	180072.8	0	383312
5	13166	45018.2	0	13166
6	16933	11254.6	0	16933
7	4490	2813.6	0	4490
8	763	703.4	0	763
9	318	175.9	0	83 235
10	874	44.0	1	48 826
11	1162	11.0	1	49 1113
12	1699	2.7	1	209 1490
13	820	2.7	1	58 762
14	2785	2.7	1	256 2529
15	1242	2.7	1	89 1153
16	7440	2.7	1	1812 5628
17	1425	2.7	1	294 1131
18	2526	2.7	1	612 1914
19	1575	2.7	1	324 1251
20	1865	2.7	1	439 1426
21	3281	2.7	1	904 2377
22	603	2.7	1	67 536
23	3637	2.7	1	1017 2620
24	560	2.7	1	96 464
25	2399	2.7	1	611 1788
26	3348	2.7	1	857 2491
27	4159	2.7	1	1117 3042
28	2471	2.7	1	657 1814
29	5050	2.7	1	1394 3656
30	470	2.7	1	77 393
31	2421	2.7	1	610 1811
32	514	2.7	1	74 440
33	1652	2.7	1	450 1202
34	2195	2.7	1	570 1625
35	1828	2.7	1	482 1346
36	1691	2.7	1	366 1325
37	2003	2.7	1	465 1538
38	2020	2.7	1	468 1552
39	1976	2.7	1	484 1492
40	2177	2.7	1	500 1677
41	1505	2.7	1	351 1154
42	3375	2.7	1	785 2590
43	5013	2.7	1	1321 3692
44	1221	2.7	1	319 902
45	965	2.7	1	239 726
46	518	2.7	1	113 405
47	681	2.7	1	143 538
48	945	2.7	1	227 718
49	702	2.7	1	158 544
50	896	2.7	1	186 710
51	1042	2.7	1	220 822
52	425	2.7	1	77 348
53	550	2.7	1	101 449
54	693	2.7	1	159 534
55	442	2.7	1	100 342
56	353	2.7	1	64 289
57	391	2.7	1	70 321
58	460	2.7	1	73 387
59	461	2.7	1	80 381
60	382	2.7	1	51 331
61	355	2.7	1	67 288
62	253	2.7	1	39 214
63	405	2.7	1	33 372
64	260	2.7	1	32 228
65	303	2.7	1	23 280
66	234	2.7	1	12 222
67	196	2.7	1	15 181
68	449	2.7	1	17 432
69	206	2.7	1	14 192
70	234	2.7	1	11 223
71	183	2.7	1	4 179
72	163	2.7	1	0 163
73	334	2.7	1	2 332
74	149	2.7	1	2 147
75	551	2.7	1	1 550
76	247	2.7	1	1 246
77	119	2.7	1	0 119
78	324	2.7	1	0 324
79	161	2.7	1	0 161
80	356	2.7	1	0 356
81	131	2.7	1	1 130
82	114	2.7	1	0 114
83	334	2.7	1	1 333
84	118	2.7	1	0 118
85	526	2.7	1	1 525
86	134	2.7	1	0 134
87	107	2.7	1	0 107
88	372	2.7	1	0 372
89	114	2.7	1	1 113
90	110	2.7	1	2 108
91	235	2.7	1	3 232
92	186	2.7	1	0 186
93	587	2.7	1	3 584
94	73	2.7	1	0 73
95	91	2.7	1	0 91
96	58	2.7	1	0 58
97	103	2.7	1	0 103
98	302	2.7	1	2 300
99	137	2.7	1	0 137
100	102	2.7	1	0 102
101	47	2.7	1	0 47


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_1.fastq
=============================================
46098644 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007124_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007124_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 166.28 s (4 us/read; 16.63 M reads/minute).

=== Summary ===

Total reads processed:              46,098,644
Reads with adapters:                17,890,989 (38.8%)
Reads written (passing filters):    46,098,644 (100.0%)

Total basepairs processed: 4,100,988,552 bp
Quality-trimmed:              34,064,390 bp (0.8%)
Total written (filtered):  4,037,355,911 bp (98.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17890989 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 27.9%
  C: 26.1%
  G: 21.7%
  T: 24.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13556634	11524661.0	0	13556634
2	2688116	2881165.2	0	2688116
3	1057842	720291.3	0	1057842
4	368653	180072.8	0	368653
5	16355	45018.2	0	16355
6	18423	11254.6	0	18423
7	6202	2813.6	0	6202
8	2632	703.4	0	2632
9	1875	175.9	0	1495 380
10	2267	44.0	1	875 1392
11	2648	11.0	1	1035 1613
12	3038	2.7	1	1069 1969
13	2763	2.7	1	886 1877
14	3766	2.7	1	679 3087
15	3497	2.7	1	692 2805
16	7418	2.7	1	1585 5833
17	5473	2.7	1	1541 3932
18	4644	2.7	1	1282 3362
19	5001	2.7	1	1431 3570
20	2486	2.7	1	753 1733
21	3991	2.7	1	1026 2965
22	4200	2.7	1	1148 3052
23	3408	2.7	1	1164 2244
24	3982	2.7	1	1374 2608
25	4697	2.7	1	1760 2937
26	4474	2.7	1	1843 2631
27	4724	2.7	1	1870 2854
28	6744	2.7	1	2857 3887
29	5209	2.7	1	2713 2496
30	4224	2.7	1	1814 2410
31	5037	2.7	1	2162 2875
32	4071	2.7	1	2205 1866
33	5024	2.7	1	2345 2679
34	5402	2.7	1	2434 2968
35	3782	2.7	1	1912 1870
36	5275	2.7	1	2331 2944
37	3244	2.7	1	1736 1508
38	4263	2.7	1	1949 2314
39	2951	2.7	1	1462 1489
40	3692	2.7	1	1705 1987
41	3084	2.7	1	1402 1682
42	2784	2.7	1	1164 1620
43	2880	2.7	1	1292 1588
44	2823	2.7	1	1165 1658
45	2384	2.7	1	1040 1344
46	1913	2.7	1	807 1106
47	1753	2.7	1	747 1006
48	1590	2.7	1	707 883
49	1584	2.7	1	675 909
50	1378	2.7	1	582 796
51	1374	2.7	1	612 762
52	1206	2.7	1	497 709
53	1131	2.7	1	467 664
54	996	2.7	1	392 604
55	958	2.7	1	364 594
56	958	2.7	1	366 592
57	876	2.7	1	320 556
58	865	2.7	1	313 552
59	684	2.7	1	234 450
60	773	2.7	1	238 535
61	664	2.7	1	218 446
62	529	2.7	1	182 347
63	679	2.7	1	179 500
64	450	2.7	1	132 318
65	384	2.7	1	77 307
66	298	2.7	1	48 250
67	298	2.7	1	36 262
68	447	2.7	1	39 408
69	231	2.7	1	23 208
70	261	2.7	1	21 240
71	220	2.7	1	22 198
72	198	2.7	1	10 188
73	290	2.7	1	5 285
74	216	2.7	1	5 211
75	574	2.7	1	1 573
76	217	2.7	1	0 217
77	160	2.7	1	0 160
78	276	2.7	1	0 276
79	181	2.7	1	0 181
80	362	2.7	1	0 362
81	128	2.7	1	1 127
82	117	2.7	1	0 117
83	329	2.7	1	1 328
84	144	2.7	1	0 144
85	523	2.7	1	0 523
86	109	2.7	1	1 108
87	129	2.7	1	0 129
88	340	2.7	1	0 340
89	119	2.7	1	0 119
90	119	2.7	1	0 119
91	251	2.7	1	0 251
92	185	2.7	1	0 185
93	539	2.7	1	0 539
94	60	2.7	1	0 60
95	80	2.7	1	1 79
96	48	2.7	1	0 48
97	103	2.7	1	1 102
98	292	2.7	1	1 291
99	150	2.7	1	1 149
100	110	2.7	1	0 110
101	58	2.7	1	0 58


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007124_2.fastq
=============================================
46098644 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007124_1_trimmed.fq and SRR11007124_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007124_1_trimmed.fq<<	RENAMING TO:>>Monocytes_1002_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007124_2_trimmed.fq<<	RENAMING TO:>>Monocytes_1002_R2_trimmed.fq<<
file_1: Monocytes_1002_R1_trimmed.fq, file_2: Monocytes_1002_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Monocytes_1002_R1_trimmed.fq and Monocytes_1002_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Monocytes_1002_val_1.fq
Writing validated paired-end Read 2 reads to Monocytes_1002_val_2.fq

Total number of sequences analysed: 46098644

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 16111 (0.03%)


  >>> Now running FastQC on the validated data Monocytes_1002_val_1.fq<<<

Started analysis of Monocytes_1002_val_1.fq
Approx 5% complete for Monocytes_1002_val_1.fq
Approx 10% complete for Monocytes_1002_val_1.fq
Approx 15% complete for Monocytes_1002_val_1.fq
Approx 20% complete for Monocytes_1002_val_1.fq
Approx 25% complete for Monocytes_1002_val_1.fq
Approx 30% complete for Monocytes_1002_val_1.fq
Approx 35% complete for Monocytes_1002_val_1.fq
Approx 40% complete for Monocytes_1002_val_1.fq
Approx 45% complete for Monocytes_1002_val_1.fq
Approx 50% complete for Monocytes_1002_val_1.fq
Approx 55% complete for Monocytes_1002_val_1.fq
Approx 60% complete for Monocytes_1002_val_1.fq
Approx 65% complete for Monocytes_1002_val_1.fq
Approx 70% complete for Monocytes_1002_val_1.fq
Approx 75% complete for Monocytes_1002_val_1.fq
Approx 80% complete for Monocytes_1002_val_1.fq
Approx 85% complete for Monocytes_1002_val_1.fq
Approx 90% complete for Monocytes_1002_val_1.fq
Approx 95% complete for Monocytes_1002_val_1.fq
Analysis complete for Monocytes_1002_val_1.fq

  >>> Now running FastQC on the validated data Monocytes_1002_val_2.fq<<<

Started analysis of Monocytes_1002_val_2.fq
Approx 5% complete for Monocytes_1002_val_2.fq
Approx 10% complete for Monocytes_1002_val_2.fq
Approx 15% complete for Monocytes_1002_val_2.fq
Approx 20% complete for Monocytes_1002_val_2.fq
Approx 25% complete for Monocytes_1002_val_2.fq
Approx 30% complete for Monocytes_1002_val_2.fq
Approx 35% complete for Monocytes_1002_val_2.fq
Approx 40% complete for Monocytes_1002_val_2.fq
Approx 45% complete for Monocytes_1002_val_2.fq
Approx 50% complete for Monocytes_1002_val_2.fq
Approx 55% complete for Monocytes_1002_val_2.fq
Approx 60% complete for Monocytes_1002_val_2.fq
Approx 65% complete for Monocytes_1002_val_2.fq
Approx 70% complete for Monocytes_1002_val_2.fq
Approx 75% complete for Monocytes_1002_val_2.fq
Approx 80% complete for Monocytes_1002_val_2.fq
Approx 85% complete for Monocytes_1002_val_2.fq
Approx 90% complete for Monocytes_1002_val_2.fq
Approx 95% complete for Monocytes_1002_val_2.fq
Analysis complete for Monocytes_1002_val_2.fq
Deleting both intermediate output files Monocytes_1002_R1_trimmed.fq and Monocytes_1002_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Myeloid_DCs_1002<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	383	CTGTCTCTTATA	1000000	0.04
Illumina	2	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 383). Second best hit was Illumina (count: 2)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007126_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007126_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 159.32 s (4 us/read; 16.70 M reads/minute).

=== Summary ===

Total reads processed:              44,354,252
Reads with adapters:                17,376,310 (39.2%)
Reads written (passing filters):    44,354,252 (100.0%)

Total basepairs processed: 4,006,706,111 bp
Quality-trimmed:              10,073,218 bp (0.3%)
Total written (filtered):  3,970,458,566 bp (99.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17376310 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.8%
  C: 26.6%
  G: 22.8%
  T: 23.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13114110	11088563.0	0	13114110
2	2730706	2772140.8	0	2730706
3	1065684	693035.2	0	1065684
4	363726	173258.8	0	363726
5	11884	43314.7	0	11884
6	9531	10828.7	0	9531
7	2920	2707.2	0	2920
8	568	676.8	0	568
9	287	169.2	0	54 233
10	671	42.3	1	28 643
11	997	10.6	1	41 956
12	1322	2.6	1	162 1160
13	808	2.6	1	45 763
14	2224	2.6	1	220 2004
15	1229	2.6	1	72 1157
16	5410	2.6	1	1275 4135
17	1168	2.6	1	228 940
18	2069	2.6	1	424 1645
19	1300	2.6	1	282 1018
20	1311	2.6	1	286 1025
21	2107	2.6	1	491 1616
22	631	2.6	1	70 561
23	2497	2.6	1	657 1840
24	577	2.6	1	110 467
25	1704	2.6	1	447 1257
26	2540	2.6	1	607 1933
27	2232	2.6	1	543 1689
28	2285	2.6	1	602 1683
29	2958	2.6	1	760 2198
30	367	2.6	1	66 301
31	2207	2.6	1	517 1690
32	445	2.6	1	65 380
33	3142	2.6	1	803 2339
34	2096	2.6	1	492 1604
35	516	2.6	1	128 388
36	1879	2.6	1	383 1496
37	2257	2.6	1	554 1703
38	1097	2.6	1	256 841
39	658	2.6	1	116 542
40	1083	2.6	1	269 814
41	1600	2.6	1	340 1260
42	965	2.6	1	211 754
43	2705	2.6	1	705 2000
44	884	2.6	1	231 653
45	709	2.6	1	141 568
46	405	2.6	1	78 327
47	611	2.6	1	100 511
48	575	2.6	1	102 473
49	647	2.6	1	136 511
50	817	2.6	1	159 658
51	921	2.6	1	218 703
52	423	2.6	1	69 354
53	503	2.6	1	108 395
54	741	2.6	1	106 635
55	429	2.6	1	78 351
56	400	2.6	1	74 326
57	459	2.6	1	60 399
58	504	2.6	1	88 416
59	345	2.6	1	76 269
60	329	2.6	1	40 289
61	355	2.6	1	52 303
62	317	2.6	1	48 269
63	319	2.6	1	30 289
64	420	2.6	1	41 379
65	281	2.6	1	26 255
66	182	2.6	1	16 166
67	247	2.6	1	19 228
68	370	2.6	1	19 351
69	272	2.6	1	16 256
70	253	2.6	1	15 238
71	140	2.6	1	5 135
72	168	2.6	1	1 167
73	279	2.6	1	4 275
74	221	2.6	1	0 221
75	702	2.6	1	0 702
76	264	2.6	1	4 260
77	138	2.6	1	0 138
78	303	2.6	1	0 303
79	146	2.6	1	0 146
80	383	2.6	1	0 383
81	111	2.6	1	0 111
82	141	2.6	1	0 141
83	282	2.6	1	2 280
84	126	2.6	1	0 126
85	626	2.6	1	1 625
86	144	2.6	1	0 144
87	126	2.6	1	0 126
88	387	2.6	1	0 387
89	116	2.6	1	0 116
90	103	2.6	1	0 103
91	183	2.6	1	0 183
92	269	2.6	1	1 268
93	636	2.6	1	2 634
94	97	2.6	1	0 97
95	104	2.6	1	0 104
96	50	2.6	1	0 50
97	101	2.6	1	0 101
98	305	2.6	1	1 304
99	236	2.6	1	0 236
100	195	2.6	1	0 195
101	37	2.6	1	0 37


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_1.fastq
=============================================
44354252 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007126_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007126_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 164.57 s (4 us/read; 16.17 M reads/minute).

=== Summary ===

Total reads processed:              44,354,252
Reads with adapters:                17,337,580 (39.1%)
Reads written (passing filters):    44,354,252 (100.0%)

Total basepairs processed: 4,014,366,433 bp
Quality-trimmed:              32,409,987 bp (0.8%)
Total written (filtered):  3,953,730,457 bp (98.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17337580 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.8%
  C: 26.2%
  G: 22.7%
  T: 24.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	12994677	11088563.0	0	12994677
2	2740234	2772140.8	0	2740234
3	1072148	693035.2	0	1072148
4	349834	173258.8	0	349834
5	14968	43314.7	0	14968
6	10849	10828.7	0	10849
7	4228	2707.2	0	4228
8	2064	676.8	0	2064
9	1663	169.2	0	1351 312
10	1924	42.3	1	801 1123
11	2378	10.6	1	965 1413
12	2431	2.6	1	981 1450
13	2430	2.6	1	798 1632
14	3073	2.6	1	561 2512
15	3024	2.6	1	512 2512
16	5743	2.6	1	1327 4416
17	4697	2.6	1	1296 3401
18	3935	2.6	1	1093 2842
19	4026	2.6	1	1150 2876
20	2170	2.6	1	649 1521
21	3114	2.6	1	799 2315
22	3342	2.6	1	943 2399
23	3027	2.6	1	1044 1983
24	3410	2.6	1	1158 2252
25	3805	2.6	1	1491 2314
26	3926	2.6	1	1711 2215
27	3751	2.6	1	1557 2194
28	5595	2.6	1	2537 3058
29	4591	2.6	1	2459 2132
30	3490	2.6	1	1479 2011
31	4187	2.6	1	1914 2273
32	3630	2.6	1	1968 1662
33	3946	2.6	1	1878 2068
34	4627	2.6	1	2183 2444
35	2920	2.6	1	1565 1355
36	3873	2.6	1	1780 2093
37	3140	2.6	1	1620 1520
38	2692	2.6	1	1336 1356
39	2957	2.6	1	1395 1562
40	2532	2.6	1	1278 1254
41	3055	2.6	1	1309 1746
42	2132	2.6	1	1033 1099
43	2317	2.6	1	1011 1306
44	2020	2.6	1	915 1105
45	1888	2.6	1	791 1097
46	1743	2.6	1	750 993
47	1472	2.6	1	619 853
48	1330	2.6	1	578 752
49	1442	2.6	1	576 866
50	1193	2.6	1	467 726
51	1078	2.6	1	486 592
52	1040	2.6	1	435 605
53	955	2.6	1	381 574
54	1116	2.6	1	387 729
55	870	2.6	1	334 536
56	778	2.6	1	268 510
57	851	2.6	1	279 572
58	783	2.6	1	261 522
59	512	2.6	1	182 330
60	631	2.6	1	192 439
61	573	2.6	1	177 396
62	478	2.6	1	165 313
63	538	2.6	1	147 391
64	561	2.6	1	124 437
65	354	2.6	1	80 274
66	246	2.6	1	43 203
67	330	2.6	1	36 294
68	387	2.6	1	28 359
69	272	2.6	1	28 244
70	271	2.6	1	23 248
71	201	2.6	1	26 175
72	220	2.6	1	4 216
73	310	2.6	1	11 299
74	220	2.6	1	1 219
75	640	2.6	1	2 638
76	289	2.6	1	2 287
77	144	2.6	1	1 143
78	291	2.6	1	1 290
79	182	2.6	1	2 180
80	370	2.6	1	0 370
81	125	2.6	1	0 125
82	156	2.6	1	0 156
83	333	2.6	1	4 329
84	168	2.6	1	1 167
85	532	2.6	1	0 532
86	151	2.6	1	0 151
87	152	2.6	1	0 152
88	346	2.6	1	0 346
89	105	2.6	1	0 105
90	114	2.6	1	0 114
91	159	2.6	1	0 159
92	296	2.6	1	0 296
93	668	2.6	1	1 667
94	74	2.6	1	0 74
95	94	2.6	1	0 94
96	48	2.6	1	0 48
97	118	2.6	1	3 115
98	307	2.6	1	1 306
99	227	2.6	1	0 227
100	222	2.6	1	1 221
101	51	2.6	1	0 51


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007126_2.fastq
=============================================
44354252 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007126_1_trimmed.fq and SRR11007126_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007126_1_trimmed.fq<<	RENAMING TO:>>Myeloid_DCs_1002_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007126_2_trimmed.fq<<	RENAMING TO:>>Myeloid_DCs_1002_R2_trimmed.fq<<
file_1: Myeloid_DCs_1002_R1_trimmed.fq, file_2: Myeloid_DCs_1002_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Myeloid_DCs_1002_R1_trimmed.fq and Myeloid_DCs_1002_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Myeloid_DCs_1002_val_1.fq
Writing validated paired-end Read 2 reads to Myeloid_DCs_1002_val_2.fq

Total number of sequences analysed: 44354252

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 16788 (0.04%)


  >>> Now running FastQC on the validated data Myeloid_DCs_1002_val_1.fq<<<

Started analysis of Myeloid_DCs_1002_val_1.fq
Approx 5% complete for Myeloid_DCs_1002_val_1.fq
Approx 10% complete for Myeloid_DCs_1002_val_1.fq
Approx 15% complete for Myeloid_DCs_1002_val_1.fq
Approx 20% complete for Myeloid_DCs_1002_val_1.fq
Approx 25% complete for Myeloid_DCs_1002_val_1.fq
Approx 30% complete for Myeloid_DCs_1002_val_1.fq
Approx 35% complete for Myeloid_DCs_1002_val_1.fq
Approx 40% complete for Myeloid_DCs_1002_val_1.fq
Approx 45% complete for Myeloid_DCs_1002_val_1.fq
Approx 50% complete for Myeloid_DCs_1002_val_1.fq
Approx 55% complete for Myeloid_DCs_1002_val_1.fq
Approx 60% complete for Myeloid_DCs_1002_val_1.fq
Approx 65% complete for Myeloid_DCs_1002_val_1.fq
Approx 70% complete for Myeloid_DCs_1002_val_1.fq
Approx 75% complete for Myeloid_DCs_1002_val_1.fq
Approx 80% complete for Myeloid_DCs_1002_val_1.fq
Approx 85% complete for Myeloid_DCs_1002_val_1.fq
Approx 90% complete for Myeloid_DCs_1002_val_1.fq
Approx 95% complete for Myeloid_DCs_1002_val_1.fq
Analysis complete for Myeloid_DCs_1002_val_1.fq

  >>> Now running FastQC on the validated data Myeloid_DCs_1002_val_2.fq<<<

Started analysis of Myeloid_DCs_1002_val_2.fq
Approx 5% complete for Myeloid_DCs_1002_val_2.fq
Approx 10% complete for Myeloid_DCs_1002_val_2.fq
Approx 15% complete for Myeloid_DCs_1002_val_2.fq
Approx 20% complete for Myeloid_DCs_1002_val_2.fq
Approx 25% complete for Myeloid_DCs_1002_val_2.fq
Approx 30% complete for Myeloid_DCs_1002_val_2.fq
Approx 35% complete for Myeloid_DCs_1002_val_2.fq
Approx 40% complete for Myeloid_DCs_1002_val_2.fq
Approx 45% complete for Myeloid_DCs_1002_val_2.fq
Approx 50% complete for Myeloid_DCs_1002_val_2.fq
Approx 55% complete for Myeloid_DCs_1002_val_2.fq
Approx 60% complete for Myeloid_DCs_1002_val_2.fq
Approx 65% complete for Myeloid_DCs_1002_val_2.fq
Approx 70% complete for Myeloid_DCs_1002_val_2.fq
Approx 75% complete for Myeloid_DCs_1002_val_2.fq
Approx 80% complete for Myeloid_DCs_1002_val_2.fq
Approx 85% complete for Myeloid_DCs_1002_val_2.fq
Approx 90% complete for Myeloid_DCs_1002_val_2.fq
Approx 95% complete for Myeloid_DCs_1002_val_2.fq
Analysis complete for Myeloid_DCs_1002_val_2.fq
Deleting both intermediate output files Myeloid_DCs_1002_R1_trimmed.fq and Myeloid_DCs_1002_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>CD8pos_T_1003<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	63	CTGTCTCTTATA	1000000	0.01
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 63). Second best hit was smallRNA (count: 0)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007127_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007127_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_1.fastq <<< 
10000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 47.87 s (4 us/read; 15.99 M reads/minute).

=== Summary ===

Total reads processed:              12,760,134
Reads with adapters:                 4,372,668 (34.3%)
Reads written (passing filters):    12,760,134 (100.0%)

Total basepairs processed: 1,286,700,995 bp
Quality-trimmed:              11,447,395 bp (0.9%)
Total written (filtered):  1,268,632,857 bp (98.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 4372668 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.1%
  C: 24.4%
  G: 25.6%
  T: 28.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3099609	3190033.5	0	3099609
2	851227	797508.4	0	851227
3	339690	199377.1	0	339690
4	64513	49844.3	0	64513
5	4851	12461.1	0	4851
6	1579	3115.3	0	1579
7	821	778.8	0	821
8	336	194.7	0	336
9	148	48.7	0	20 128
10	204	12.2	1	5 199
11	161	3.0	1	8 153
12	127	0.8	1	6 121
13	131	0.8	1	2 129
14	134	0.8	1	6 128
15	207	0.8	1	26 181
16	197	0.8	1	23 174
17	257	0.8	1	34 223
18	236	0.8	1	35 201
19	178	0.8	1	18 160
20	107	0.8	1	6 101
21	127	0.8	1	10 117
22	141	0.8	1	17 124
23	129	0.8	1	19 110
24	152	0.8	1	40 112
25	155	0.8	1	22 133
26	167	0.8	1	21 146
27	140	0.8	1	23 117
28	109	0.8	1	15 94
29	109	0.8	1	20 89
30	126	0.8	1	14 112
31	157	0.8	1	12 145
32	103	0.8	1	15 88
33	149	0.8	1	5 144
34	126	0.8	1	4 122
35	102	0.8	1	8 94
36	113	0.8	1	12 101
37	114	0.8	1	4 110
38	129	0.8	1	12 117
39	64	0.8	1	5 59
40	74	0.8	1	4 70
41	84	0.8	1	2 82
42	83	0.8	1	8 75
43	67	0.8	1	4 63
44	71	0.8	1	6 65
45	74	0.8	1	3 71
46	73	0.8	1	4 69
47	82	0.8	1	2 80
48	74	0.8	1	4 70
49	75	0.8	1	7 68
50	59	0.8	1	1 58
51	80	0.8	1	5 75
52	76	0.8	1	4 72
53	63	0.8	1	0 63
54	74	0.8	1	1 73
55	74	0.8	1	1 73
56	79	0.8	1	4 75
57	80	0.8	1	1 79
58	71	0.8	1	1 70
59	59	0.8	1	3 56
60	58	0.8	1	2 56
61	63	0.8	1	2 61
62	50	0.8	1	2 48
63	99	0.8	1	1 98
64	85	0.8	1	0 85
65	57	0.8	1	0 57
66	62	0.8	1	0 62
67	58	0.8	1	0 58
68	147	0.8	1	1 146
69	72	0.8	1	0 72
70	83	0.8	1	3 80
71	77	0.8	1	0 77
72	111	0.8	1	0 111
73	182	0.8	1	1 181
74	121	0.8	1	0 121
75	323	0.8	1	0 323
76	127	0.8	1	0 127
77	77	0.8	1	1 76
78	135	0.8	1	0 135
79	59	0.8	1	0 59
80	134	0.8	1	0 134
81	67	0.8	1	1 66
82	75	0.8	1	0 75
83	111	0.8	1	0 111
84	99	0.8	1	1 98
85	281	0.8	1	0 281
86	73	0.8	1	0 73
87	87	0.8	1	0 87
88	224	0.8	1	1 223
89	51	0.8	1	0 51
90	59	0.8	1	0 59
91	113	0.8	1	0 113
92	97	0.8	1	0 97
93	132	0.8	1	1 131
94	20	0.8	1	0 20
95	36	0.8	1	2 34
96	25	0.8	1	0 25
97	82	0.8	1	0 82
98	114	0.8	1	0 114
99	71	0.8	1	2 69
100	58	0.8	1	0 58
101	16	0.8	1	0 16


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_1.fastq
=============================================
12760134 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007127_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007127_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_2.fastq <<< 
10000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 43.62 s (3 us/read; 17.55 M reads/minute).

=== Summary ===

Total reads processed:              12,760,134
Reads with adapters:                 4,371,065 (34.3%)
Reads written (passing filters):    12,760,134 (100.0%)

Total basepairs processed: 1,286,516,705 bp
Quality-trimmed:              23,529,344 bp (1.8%)
Total written (filtered):  1,256,368,168 bp (97.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 4371065 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.9%
  C: 24.3%
  G: 23.2%
  T: 29.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3078862	3190033.5	0	3078862
2	922494	797508.4	0	922494
3	291780	199377.1	0	291780
4	62387	49844.3	0	62387
5	3622	12461.1	0	3622
6	1321	3115.3	0	1321
7	447	778.8	0	447
8	177	194.7	0	177
9	135	48.7	0	27 108
10	158	12.2	1	7 151
11	77	3.0	1	8 69
12	69	0.8	1	4 65
13	117	0.8	1	7 110
14	119	0.8	1	5 114
15	136	0.8	1	8 128
16	104	0.8	1	12 92
17	96	0.8	1	7 89
18	141	0.8	1	12 129
19	128	0.8	1	8 120
20	113	0.8	1	7 106
21	115	0.8	1	9 106
22	123	0.8	1	9 114
23	158	0.8	1	13 145
24	83	0.8	1	13 70
25	123	0.8	1	12 111
26	136	0.8	1	18 118
27	110	0.8	1	15 95
28	104	0.8	1	15 89
29	109	0.8	1	16 93
30	130	0.8	1	7 123
31	192	0.8	1	14 178
32	75	0.8	1	14 61
33	167	0.8	1	8 159
34	94	0.8	1	5 89
35	97	0.8	1	7 90
36	115	0.8	1	5 110
37	147	0.8	1	16 131
38	127	0.8	1	9 118
39	83	0.8	1	9 74
40	71	0.8	1	7 64
41	74	0.8	1	3 71
42	115	0.8	1	9 106
43	75	0.8	1	5 70
44	95	0.8	1	4 91
45	81	0.8	1	2 79
46	81	0.8	1	3 78
47	101	0.8	1	5 96
48	72	0.8	1	5 67
49	77	0.8	1	3 74
50	84	0.8	1	3 81
51	86	0.8	1	6 80
52	91	0.8	1	2 89
53	73	0.8	1	4 69
54	87	0.8	1	2 85
55	98	0.8	1	1 97
56	62	0.8	1	1 61
57	69	0.8	1	3 66
58	121	0.8	1	4 117
59	57	0.8	1	2 55
60	74	0.8	1	1 73
61	83	0.8	1	2 81
62	79	0.8	1	1 78
63	100	0.8	1	2 98
64	57	0.8	1	1 56
65	65	0.8	1	2 63
66	96	0.8	1	2 94
67	76	0.8	1	1 75
68	161	0.8	1	0 161
69	83	0.8	1	0 83
70	121	0.8	1	0 121
71	63	0.8	1	1 62
72	103	0.8	1	0 103
73	175	0.8	1	0 175
74	113	0.8	1	0 113
75	418	0.8	1	1 417
76	151	0.8	1	3 148
77	77	0.8	1	0 77
78	163	0.8	1	2 161
79	95	0.8	1	0 95
80	140	0.8	1	0 140
81	67	0.8	1	1 66
82	75	0.8	1	0 75
83	160	0.8	1	1 159
84	127	0.8	1	1 126
85	330	0.8	1	0 330
86	104	0.8	1	2 102
87	73	0.8	1	2 71
88	241	0.8	1	1 240
89	40	0.8	1	0 40
90	43	0.8	1	1 42
91	98	0.8	1	0 98
92	109	0.8	1	1 108
93	208	0.8	1	0 208
94	35	0.8	1	0 35
95	27	0.8	1	0 27
96	31	0.8	1	0 31
97	61	0.8	1	0 61
98	159	0.8	1	2 157
99	57	0.8	1	2 55
100	67	0.8	1	1 66
101	19	0.8	1	0 19


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007127_2.fastq
=============================================
12760134 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007127_1_trimmed.fq and SRR11007127_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007127_1_trimmed.fq<<	RENAMING TO:>>CD8pos_T_1003_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007127_2_trimmed.fq<<	RENAMING TO:>>CD8pos_T_1003_R2_trimmed.fq<<
file_1: CD8pos_T_1003_R1_trimmed.fq, file_2: CD8pos_T_1003_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: CD8pos_T_1003_R1_trimmed.fq and CD8pos_T_1003_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to CD8pos_T_1003_val_1.fq
Writing validated paired-end Read 2 reads to CD8pos_T_1003_val_2.fq

Total number of sequences analysed: 12760134

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 7293 (0.06%)


  >>> Now running FastQC on the validated data CD8pos_T_1003_val_1.fq<<<

Started analysis of CD8pos_T_1003_val_1.fq
Approx 5% complete for CD8pos_T_1003_val_1.fq
Approx 10% complete for CD8pos_T_1003_val_1.fq
Approx 15% complete for CD8pos_T_1003_val_1.fq
Approx 20% complete for CD8pos_T_1003_val_1.fq
Approx 25% complete for CD8pos_T_1003_val_1.fq
Approx 30% complete for CD8pos_T_1003_val_1.fq
Approx 35% complete for CD8pos_T_1003_val_1.fq
Approx 40% complete for CD8pos_T_1003_val_1.fq
Approx 45% complete for CD8pos_T_1003_val_1.fq
Approx 50% complete for CD8pos_T_1003_val_1.fq
Approx 55% complete for CD8pos_T_1003_val_1.fq
Approx 60% complete for CD8pos_T_1003_val_1.fq
Approx 65% complete for CD8pos_T_1003_val_1.fq
Approx 70% complete for CD8pos_T_1003_val_1.fq
Approx 75% complete for CD8pos_T_1003_val_1.fq
Approx 80% complete for CD8pos_T_1003_val_1.fq
Approx 85% complete for CD8pos_T_1003_val_1.fq
Approx 90% complete for CD8pos_T_1003_val_1.fq
Approx 95% complete for CD8pos_T_1003_val_1.fq
Analysis complete for CD8pos_T_1003_val_1.fq

  >>> Now running FastQC on the validated data CD8pos_T_1003_val_2.fq<<<

Started analysis of CD8pos_T_1003_val_2.fq
Approx 5% complete for CD8pos_T_1003_val_2.fq
Approx 10% complete for CD8pos_T_1003_val_2.fq
Approx 15% complete for CD8pos_T_1003_val_2.fq
Approx 20% complete for CD8pos_T_1003_val_2.fq
Approx 25% complete for CD8pos_T_1003_val_2.fq
Approx 30% complete for CD8pos_T_1003_val_2.fq
Approx 35% complete for CD8pos_T_1003_val_2.fq
Approx 40% complete for CD8pos_T_1003_val_2.fq
Approx 45% complete for CD8pos_T_1003_val_2.fq
Approx 50% complete for CD8pos_T_1003_val_2.fq
Approx 55% complete for CD8pos_T_1003_val_2.fq
Approx 60% complete for CD8pos_T_1003_val_2.fq
Approx 65% complete for CD8pos_T_1003_val_2.fq
Approx 70% complete for CD8pos_T_1003_val_2.fq
Approx 75% complete for CD8pos_T_1003_val_2.fq
Approx 80% complete for CD8pos_T_1003_val_2.fq
Approx 85% complete for CD8pos_T_1003_val_2.fq
Approx 90% complete for CD8pos_T_1003_val_2.fq
Approx 95% complete for CD8pos_T_1003_val_2.fq
Analysis complete for CD8pos_T_1003_val_2.fq
Deleting both intermediate output files CD8pos_T_1003_R1_trimmed.fq and CD8pos_T_1003_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Effector_CD4pos_T_1003<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	24	CTGTCTCTTATA	1000000	0.00
smallRNA	1	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 24). Second best hit was smallRNA (count: 1)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007137_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007137_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_1.fastq <<< 
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 5.61 s (4 us/read; 14.16 M reads/minute).

=== Summary ===

Total reads processed:               1,323,863
Reads with adapters:                   437,976 (33.1%)
Reads written (passing filters):     1,323,863 (100.0%)

Total basepairs processed:   133,447,967 bp
Quality-trimmed:               1,421,295 bp (1.1%)
Total written (filtered):    131,358,092 bp (98.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 437976 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.9%
  C: 23.1%
  G: 25.7%
  T: 29.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	307654	330965.8	0	307654
2	87230	82741.4	0	87230
3	34761	20685.4	0	34761
4	6567	5171.3	0	6567
5	561	1292.8	0	561
6	180	323.2	0	180
7	60	80.8	0	60
8	22	20.2	0	22
9	14	5.1	0	3 11
10	18	1.3	1	0 18
11	7	0.3	1	0 7
12	6	0.1	1	0 6
13	10	0.1	1	0 10
14	2	0.1	1	0 2
15	14	0.1	1	0 14
16	18	0.1	1	2 16
17	11	0.1	1	1 10
18	5	0.1	1	0 5
19	8	0.1	1	0 8
20	12	0.1	1	2 10
21	7	0.1	1	0 7
22	12	0.1	1	4 8
23	14	0.1	1	1 13
24	15	0.1	1	3 12
25	11	0.1	1	1 10
26	15	0.1	1	2 13
27	10	0.1	1	1 9
28	17	0.1	1	2 15
29	12	0.1	1	1 11
30	12	0.1	1	1 11
31	16	0.1	1	1 15
32	15	0.1	1	0 15
33	11	0.1	1	0 11
34	8	0.1	1	0 8
35	12	0.1	1	0 12
36	6	0.1	1	0 6
37	10	0.1	1	0 10
38	11	0.1	1	0 11
39	6	0.1	1	1 5
40	5	0.1	1	2 3
41	5	0.1	1	0 5
42	8	0.1	1	1 7
43	7	0.1	1	1 6
44	7	0.1	1	0 7
45	8	0.1	1	0 8
46	14	0.1	1	1 13
47	12	0.1	1	0 12
48	6	0.1	1	1 5
49	2	0.1	1	0 2
50	5	0.1	1	0 5
51	6	0.1	1	0 6
52	11	0.1	1	0 11
53	1	0.1	1	0 1
54	8	0.1	1	1 7
55	6	0.1	1	0 6
56	13	0.1	1	0 13
57	7	0.1	1	0 7
58	14	0.1	1	0 14
59	5	0.1	1	0 5
60	3	0.1	1	0 3
61	2	0.1	1	0 2
62	3	0.1	1	0 3
63	17	0.1	1	0 17
64	7	0.1	1	0 7
65	4	0.1	1	0 4
66	6	0.1	1	0 6
67	4	0.1	1	0 4
68	15	0.1	1	0 15
69	8	0.1	1	0 8
70	9	0.1	1	0 9
71	8	0.1	1	0 8
72	17	0.1	1	0 17
73	17	0.1	1	0 17
74	22	0.1	1	0 22
75	40	0.1	1	0 40
76	14	0.1	1	0 14
77	7	0.1	1	0 7
78	12	0.1	1	0 12
79	9	0.1	1	0 9
80	14	0.1	1	0 14
81	5	0.1	1	0 5
82	9	0.1	1	0 9
83	9	0.1	1	0 9
84	14	0.1	1	0 14
85	36	0.1	1	0 36
86	6	0.1	1	0 6
87	9	0.1	1	0 9
88	39	0.1	1	0 39
89	2	0.1	1	0 2
90	6	0.1	1	0 6
91	12	0.1	1	0 12
92	6	0.1	1	0 6
93	10	0.1	1	0 10
94	4	0.1	1	0 4
95	4	0.1	1	0 4
96	2	0.1	1	0 2
97	9	0.1	1	0 9
98	19	0.1	1	0 19
99	4	0.1	1	0 4
100	3	0.1	1	0 3


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_1.fastq
=============================================
1323863 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007137_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007137_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_2.fastq <<< 
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 5.05 s (4 us/read; 15.72 M reads/minute).

=== Summary ===

Total reads processed:               1,323,863
Reads with adapters:                   442,806 (33.4%)
Reads written (passing filters):     1,323,863 (100.0%)

Total basepairs processed:   133,444,681 bp
Quality-trimmed:               3,481,644 bp (2.6%)
Total written (filtered):    129,289,389 bp (96.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 442806 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 24.0%
  C: 22.9%
  G: 22.8%
  T: 30.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	310900	330965.8	0	310900
2	94213	82741.4	0	94213
3	29764	20685.4	0	29764
4	6185	5171.3	0	6185
5	462	1292.8	0	462
6	179	323.2	0	179
7	49	80.8	0	49
8	16	20.2	0	16
9	20	5.1	0	4 16
10	14	1.3	1	3 11
11	11	0.3	1	1 10
12	10	0.1	1	0 10
13	8	0.1	1	0 8
14	6	0.1	1	0 6
15	4	0.1	1	0 4
16	12	0.1	1	1 11
17	9	0.1	1	0 9
18	4	0.1	1	0 4
19	13	0.1	1	0 13
20	9	0.1	1	2 7
21	17	0.1	1	1 16
22	12	0.1	1	1 11
23	11	0.1	1	3 8
24	19	0.1	1	5 14
25	12	0.1	1	3 9
26	18	0.1	1	2 16
27	15	0.1	1	0 15
28	16	0.1	1	2 14
29	13	0.1	1	5 8
30	13	0.1	1	5 8
31	22	0.1	1	1 21
32	17	0.1	1	1 16
33	14	0.1	1	0 14
34	16	0.1	1	2 14
35	16	0.1	1	3 13
36	12	0.1	1	1 11
37	10	0.1	1	0 10
38	8	0.1	1	0 8
39	6	0.1	1	0 6
40	5	0.1	1	0 5
41	14	0.1	1	1 13
42	5	0.1	1	0 5
43	6	0.1	1	0 6
44	9	0.1	1	1 8
45	14	0.1	1	1 13
46	7	0.1	1	0 7
47	12	0.1	1	2 10
48	7	0.1	1	1 6
49	3	0.1	1	0 3
50	9	0.1	1	0 9
51	8	0.1	1	0 8
52	8	0.1	1	1 7
53	10	0.1	1	0 10
54	8	0.1	1	0 8
55	10	0.1	1	0 10
56	7	0.1	1	0 7
57	8	0.1	1	0 8
58	10	0.1	1	0 10
59	8	0.1	1	0 8
60	6	0.1	1	0 6
61	6	0.1	1	2 4
62	11	0.1	1	0 11
63	8	0.1	1	0 8
64	12	0.1	1	0 12
65	6	0.1	1	0 6
66	6	0.1	1	0 6
67	4	0.1	1	0 4
68	16	0.1	1	0 16
69	4	0.1	1	0 4
70	9	0.1	1	0 9
71	6	0.1	1	0 6
72	17	0.1	1	0 17
73	13	0.1	1	0 13
74	28	0.1	1	0 28
75	55	0.1	1	0 55
76	12	0.1	1	0 12
77	7	0.1	1	0 7
78	13	0.1	1	0 13
79	7	0.1	1	0 7
80	17	0.1	1	0 17
81	8	0.1	1	0 8
82	6	0.1	1	0 6
83	15	0.1	1	0 15
84	14	0.1	1	0 14
85	36	0.1	1	0 36
86	4	0.1	1	0 4
87	13	0.1	1	0 13
88	24	0.1	1	0 24
89	3	0.1	1	0 3
90	6	0.1	1	0 6
91	9	0.1	1	0 9
92	6	0.1	1	0 6
93	25	0.1	1	0 25
94	3	0.1	1	0 3
95	3	0.1	1	0 3
96	3	0.1	1	0 3
97	7	0.1	1	0 7
98	18	0.1	1	0 18
99	5	0.1	1	0 5
100	9	0.1	1	0 9
101	3	0.1	1	0 3


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007137_2.fastq
=============================================
1323863 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007137_1_trimmed.fq and SRR11007137_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007137_1_trimmed.fq<<	RENAMING TO:>>Effector_CD4pos_T_1003_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007137_2_trimmed.fq<<	RENAMING TO:>>Effector_CD4pos_T_1003_R2_trimmed.fq<<
file_1: Effector_CD4pos_T_1003_R1_trimmed.fq, file_2: Effector_CD4pos_T_1003_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Effector_CD4pos_T_1003_R1_trimmed.fq and Effector_CD4pos_T_1003_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Effector_CD4pos_T_1003_val_1.fq
Writing validated paired-end Read 2 reads to Effector_CD4pos_T_1003_val_2.fq

Total number of sequences analysed: 1323863

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1343 (0.10%)


  >>> Now running FastQC on the validated data Effector_CD4pos_T_1003_val_1.fq<<<

Started analysis of Effector_CD4pos_T_1003_val_1.fq
Approx 5% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 10% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 15% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 20% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 25% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 30% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 35% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 40% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 45% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 50% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 55% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 60% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 65% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 70% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 75% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 80% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 85% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 90% complete for Effector_CD4pos_T_1003_val_1.fq
Approx 95% complete for Effector_CD4pos_T_1003_val_1.fq
Analysis complete for Effector_CD4pos_T_1003_val_1.fq

  >>> Now running FastQC on the validated data Effector_CD4pos_T_1003_val_2.fq<<<

Started analysis of Effector_CD4pos_T_1003_val_2.fq
Approx 5% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 10% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 15% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 20% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 25% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 30% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 35% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 40% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 45% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 50% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 55% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 60% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 65% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 70% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 75% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 80% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 85% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 90% complete for Effector_CD4pos_T_1003_val_2.fq
Approx 95% complete for Effector_CD4pos_T_1003_val_2.fq
Analysis complete for Effector_CD4pos_T_1003_val_2.fq
Deleting both intermediate output files Effector_CD4pos_T_1003_R1_trimmed.fq and Effector_CD4pos_T_1003_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Regulatory_T_1003<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	222	CTGTCTCTTATA	1000000	0.02
Illumina	3	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 222). Second best hit was Illumina (count: 3)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007147_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007147_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 178.93 s (3 us/read; 18.81 M reads/minute).

=== Summary ===

Total reads processed:              56,099,235
Reads with adapters:                21,182,651 (37.8%)
Reads written (passing filters):    56,099,235 (100.0%)

Total basepairs processed: 5,232,892,528 bp
Quality-trimmed:               6,408,980 bp (0.1%)
Total written (filtered):  5,194,382,775 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 21182651 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.9%
  C: 24.5%
  G: 21.2%
  T: 25.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	15427819	14024808.8	0	15427819
2	3778687	3506202.2	0	3778687
3	1336437	876550.5	0	1336437
4	541475	219137.6	0	541475
5	11194	54784.4	0	11194
6	9606	13696.1	0	9606
7	2343	3424.0	0	2343
8	493	856.0	0	493
9	326	214.0	0	97 229
10	701	53.5	1	34 667
11	1283	13.4	1	70 1213
12	1285	3.3	1	220 1065
13	704	3.3	1	59 645
14	2166	3.3	1	269 1897
15	1097	3.3	1	81 1016
16	5070	3.3	1	1275 3795
17	1102	3.3	1	216 886
18	2061	3.3	1	423 1638
19	1432	3.3	1	283 1149
20	1200	3.3	1	257 943
21	2041	3.3	1	515 1526
22	677	3.3	1	73 604
23	2505	3.3	1	663 1842
24	679	3.3	1	143 536
25	1671	3.3	1	468 1203
26	2379	3.3	1	625 1754
27	2487	3.3	1	695 1792
28	2209	3.3	1	659 1550
29	2672	3.3	1	733 1939
30	447	3.3	1	73 374
31	2024	3.3	1	460 1564
32	519	3.3	1	70 449
33	2130	3.3	1	522 1608
34	1166	3.3	1	252 914
35	1577	3.3	1	468 1109
36	1124	3.3	1	237 887
37	1753	3.3	1	450 1303
38	1020	3.3	1	184 836
39	1406	3.3	1	389 1017
40	1533	3.3	1	412 1121
41	770	3.3	1	148 622
42	701	3.3	1	127 574
43	1823	3.3	1	471 1352
44	631	3.3	1	147 484
45	785	3.3	1	129 656
46	410	3.3	1	71 339
47	617	3.3	1	95 522
48	524	3.3	1	103 421
49	532	3.3	1	111 421
50	732	3.3	1	118 614
51	731	3.3	1	164 567
52	416	3.3	1	38 378
53	411	3.3	1	77 334
54	484	3.3	1	97 387
55	356	3.3	1	37 319
56	323	3.3	1	36 287
57	321	3.3	1	48 273
58	467	3.3	1	45 422
59	340	3.3	1	39 301
60	309	3.3	1	19 290
61	270	3.3	1	39 231
62	219	3.3	1	13 206
63	301	3.3	1	16 285
64	240	3.3	1	13 227
65	215	3.3	1	15 200
66	207	3.3	1	2 205
67	264	3.3	1	4 260
68	505	3.3	1	3 502
69	161	3.3	1	7 154
70	390	3.3	1	5 385
71	150	3.3	1	2 148
72	194	3.3	1	1 193
73	467	3.3	1	0 467
74	203	3.3	1	0 203
75	1308	3.3	1	0 1308
76	390	3.3	1	0 390
77	163	3.3	1	0 163
78	493	3.3	1	0 493
79	173	3.3	1	1 172
80	577	3.3	1	0 577
81	115	3.3	1	0 115
82	147	3.3	1	0 147
83	418	3.3	1	0 418
84	187	3.3	1	0 187
85	891	3.3	1	0 891
86	201	3.3	1	0 201
87	134	3.3	1	0 134
88	769	3.3	1	0 769
89	125	3.3	1	0 125
90	107	3.3	1	0 107
91	301	3.3	1	0 301
92	191	3.3	1	0 191
93	687	3.3	1	0 687
94	72	3.3	1	0 72
95	112	3.3	1	0 112
96	33	3.3	1	0 33
97	122	3.3	1	0 122
98	547	3.3	1	0 547
99	142	3.3	1	0 142
100	246	3.3	1	0 246
101	31	3.3	1	0 31


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_1.fastq
=============================================
56099235 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007147_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007147_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 189.36 s (3 us/read; 17.78 M reads/minute).

=== Summary ===

Total reads processed:              56,099,235
Reads with adapters:                21,134,588 (37.7%)
Reads written (passing filters):    56,099,235 (100.0%)

Total basepairs processed: 5,240,085,317 bp
Quality-trimmed:              22,734,592 bp (0.4%)
Total written (filtered):  5,183,053,646 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 21134588 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 29.0%
  C: 24.3%
  G: 20.9%
  T: 25.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	15289721	14024808.8	0	15289721
2	3788218	3506202.2	0	3788218
3	1341518	876550.5	0	1341518
4	527506	219137.6	0	527506
5	13975	54784.4	0	13975
6	10752	13696.1	0	10752
7	3807	3424.0	0	3807
8	1980	856.0	0	1980
9	1708	214.0	0	1321 387
10	2072	53.5	1	742 1330
11	2983	13.4	1	1116 1867
12	2971	3.3	1	1087 1884
13	2853	3.3	1	952 1901
14	3545	3.3	1	611 2934
15	3198	3.3	1	543 2655
16	6913	3.3	1	1503 5410
17	5464	3.3	1	1486 3978
18	4440	3.3	1	1118 3322
19	4761	3.3	1	1244 3517
20	2397	3.3	1	607 1790
21	3522	3.3	1	857 2665
22	3994	3.3	1	1108 2886
23	3632	3.3	1	1303 2329
24	3786	3.3	1	1270 2516
25	4296	3.3	1	1622 2674
26	4436	3.3	1	1888 2548
27	4305	3.3	1	1771 2534
28	6177	3.3	1	2866 3311
29	5315	3.3	1	2971 2344
30	4067	3.3	1	1713 2354
31	4539	3.3	1	2047 2492
32	4071	3.3	1	2255 1816
33	4197	3.3	1	1968 2229
34	4904	3.3	1	2259 2645
35	3134	3.3	1	1769 1365
36	3092	3.3	1	1486 1606
37	3435	3.3	1	1728 1707
38	3176	3.3	1	1528 1648
39	2223	3.3	1	1183 1040
40	1953	3.3	1	1004 949
41	2435	3.3	1	1062 1373
42	1766	3.3	1	879 887
43	1749	3.3	1	786 963
44	1419	3.3	1	684 735
45	1672	3.3	1	631 1041
46	1562	3.3	1	595 967
47	1131	3.3	1	468 663
48	1224	3.3	1	479 745
49	1139	3.3	1	450 689
50	1062	3.3	1	375 687
51	1004	3.3	1	413 591
52	867	3.3	1	286 581
53	760	3.3	1	305 455
54	696	3.3	1	273 423
55	708	3.3	1	248 460
56	595	3.3	1	190 405
57	576	3.3	1	169 407
58	669	3.3	1	160 509
59	500	3.3	1	143 357
60	506	3.3	1	122 384
61	398	3.3	1	92 306
62	410	3.3	1	108 302
63	396	3.3	1	86 310
64	308	3.3	1	58 250
65	292	3.3	1	47 245
66	247	3.3	1	25 222
67	346	3.3	1	15 331
68	507	3.3	1	17 490
69	206	3.3	1	16 190
70	340	3.3	1	14 326
71	175	3.3	1	6 169
72	205	3.3	1	2 203
73	492	3.3	1	3 489
74	238	3.3	1	0 238
75	1362	3.3	1	0 1362
76	430	3.3	1	0 430
77	170	3.3	1	0 170
78	524	3.3	1	0 524
79	170	3.3	1	0 170
80	590	3.3	1	0 590
81	142	3.3	1	0 142
82	181	3.3	1	0 181
83	477	3.3	1	1 476
84	217	3.3	1	0 217
85	951	3.3	1	2 949
86	186	3.3	1	0 186
87	150	3.3	1	0 150
88	759	3.3	1	0 759
89	145	3.3	1	0 145
90	138	3.3	1	0 138
91	252	3.3	1	1 251
92	184	3.3	1	0 184
93	617	3.3	1	0 617
94	92	3.3	1	0 92
95	95	3.3	1	0 95
96	40	3.3	1	0 40
97	118	3.3	1	0 118
98	537	3.3	1	0 537
99	158	3.3	1	0 158
100	226	3.3	1	0 226
101	41	3.3	1	0 41


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007147_2.fastq
=============================================
56099235 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007147_1_trimmed.fq and SRR11007147_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007147_1_trimmed.fq<<	RENAMING TO:>>Regulatory_T_1003_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007147_2_trimmed.fq<<	RENAMING TO:>>Regulatory_T_1003_R2_trimmed.fq<<
file_1: Regulatory_T_1003_R1_trimmed.fq, file_2: Regulatory_T_1003_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Regulatory_T_1003_R1_trimmed.fq and Regulatory_T_1003_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Regulatory_T_1003_val_1.fq
Writing validated paired-end Read 2 reads to Regulatory_T_1003_val_2.fq

Total number of sequences analysed: 56099235

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 18390 (0.03%)


  >>> Now running FastQC on the validated data Regulatory_T_1003_val_1.fq<<<

Started analysis of Regulatory_T_1003_val_1.fq
Approx 5% complete for Regulatory_T_1003_val_1.fq
Approx 10% complete for Regulatory_T_1003_val_1.fq
Approx 15% complete for Regulatory_T_1003_val_1.fq
Approx 20% complete for Regulatory_T_1003_val_1.fq
Approx 25% complete for Regulatory_T_1003_val_1.fq
Approx 30% complete for Regulatory_T_1003_val_1.fq
Approx 35% complete for Regulatory_T_1003_val_1.fq
Approx 40% complete for Regulatory_T_1003_val_1.fq
Approx 45% complete for Regulatory_T_1003_val_1.fq
Approx 50% complete for Regulatory_T_1003_val_1.fq
Approx 55% complete for Regulatory_T_1003_val_1.fq
Approx 60% complete for Regulatory_T_1003_val_1.fq
Approx 65% complete for Regulatory_T_1003_val_1.fq
Approx 70% complete for Regulatory_T_1003_val_1.fq
Approx 75% complete for Regulatory_T_1003_val_1.fq
Approx 80% complete for Regulatory_T_1003_val_1.fq
Approx 85% complete for Regulatory_T_1003_val_1.fq
Approx 90% complete for Regulatory_T_1003_val_1.fq
Approx 95% complete for Regulatory_T_1003_val_1.fq
Analysis complete for Regulatory_T_1003_val_1.fq

  >>> Now running FastQC on the validated data Regulatory_T_1003_val_2.fq<<<

Started analysis of Regulatory_T_1003_val_2.fq
Approx 5% complete for Regulatory_T_1003_val_2.fq
Approx 10% complete for Regulatory_T_1003_val_2.fq
Approx 15% complete for Regulatory_T_1003_val_2.fq
Approx 20% complete for Regulatory_T_1003_val_2.fq
Approx 25% complete for Regulatory_T_1003_val_2.fq
Approx 30% complete for Regulatory_T_1003_val_2.fq
Approx 35% complete for Regulatory_T_1003_val_2.fq
Approx 40% complete for Regulatory_T_1003_val_2.fq
Approx 45% complete for Regulatory_T_1003_val_2.fq
Approx 50% complete for Regulatory_T_1003_val_2.fq
Approx 55% complete for Regulatory_T_1003_val_2.fq
Approx 60% complete for Regulatory_T_1003_val_2.fq
Approx 65% complete for Regulatory_T_1003_val_2.fq
Approx 70% complete for Regulatory_T_1003_val_2.fq
Approx 75% complete for Regulatory_T_1003_val_2.fq
Approx 80% complete for Regulatory_T_1003_val_2.fq
Approx 85% complete for Regulatory_T_1003_val_2.fq
Approx 90% complete for Regulatory_T_1003_val_2.fq
Approx 95% complete for Regulatory_T_1003_val_2.fq
Analysis complete for Regulatory_T_1003_val_2.fq
Deleting both intermediate output files Regulatory_T_1003_R1_trimmed.fq and Regulatory_T_1003_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mature_NK_1003<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	372	CTGTCTCTTATA	1000000	0.04
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 372). Second best hit was smallRNA (count: 0)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007156_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007156_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 135.38 s (4 us/read; 17.05 M reads/minute).

=== Summary ===

Total reads processed:              38,479,188
Reads with adapters:                14,122,672 (36.7%)
Reads written (passing filters):    38,479,188 (100.0%)

Total basepairs processed: 3,691,236,862 bp
Quality-trimmed:              11,785,756 bp (0.3%)
Total written (filtered):  3,656,895,402 bp (99.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 14122672 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 25.9%
  C: 25.0%
  G: 21.4%
  T: 27.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	10170771	9619797.0	0	10170771
2	2551841	2404949.2	0	2551841
3	980479	601237.3	0	980479
4	302276	150309.3	0	302276
5	15472	37577.3	0	15472
6	8313	9394.3	0	8313
7	6226	2348.6	0	6226
8	3761	587.1	0	3761
9	495	146.8	0	185 310
10	1515	36.7	1	90 1425
11	1605	9.2	1	112 1493
12	1384	2.3	1	140 1244
13	1589	2.3	1	88 1501
14	2139	2.3	1	199 1940
15	3523	2.3	1	298 3225
16	3748	2.3	1	546 3202
17	4198	2.3	1	597 3601
18	4119	2.3	1	578 3541
19	3572	2.3	1	631 2941
20	1289	2.3	1	190 1099
21	1566	2.3	1	262 1304
22	1559	2.3	1	225 1334
23	1751	2.3	1	368 1383
24	1293	2.3	1	231 1062
25	1906	2.3	1	419 1487
26	2440	2.3	1	616 1824
27	2238	2.3	1	521 1717
28	2145	2.3	1	585 1560
29	2256	2.3	1	582 1674
30	924	2.3	1	181 743
31	1369	2.3	1	289 1080
32	965	2.3	1	185 780
33	1233	2.3	1	279 954
34	1307	2.3	1	300 1007
35	1144	2.3	1	292 852
36	1475	2.3	1	343 1132
37	1099	2.3	1	217 882
38	1219	2.3	1	253 966
39	766	2.3	1	180 586
40	946	2.3	1	224 722
41	808	2.3	1	161 647
42	930	2.3	1	195 735
43	948	2.3	1	215 733
44	860	2.3	1	203 657
45	735	2.3	1	125 610
46	514	2.3	1	95 419
47	458	2.3	1	44 414
48	726	2.3	1	137 589
49	500	2.3	1	94 406
50	500	2.3	1	78 422
51	584	2.3	1	114 470
52	657	2.3	1	124 533
53	503	2.3	1	95 408
54	401	2.3	1	47 354
55	546	2.3	1	88 458
56	432	2.3	1	69 363
57	406	2.3	1	52 354
58	572	2.3	1	74 498
59	395	2.3	1	54 341
60	392	2.3	1	29 363
61	343	2.3	1	50 293
62	376	2.3	1	61 315
63	329	2.3	1	32 297
64	248	2.3	1	30 218
65	225	2.3	1	23 202
66	276	2.3	1	23 253
67	272	2.3	1	10 262
68	490	2.3	1	10 480
69	179	2.3	1	10 169
70	294	2.3	1	4 290
71	178	2.3	1	3 175
72	280	2.3	1	0 280
73	478	2.3	1	4 474
74	385	2.3	1	2 383
75	1196	2.3	1	2 1194
76	406	2.3	1	1 405
77	185	2.3	1	1 184
78	441	2.3	1	8 433
79	186	2.3	1	6 180
80	507	2.3	1	3 504
81	161	2.3	1	0 161
82	219	2.3	1	6 213
83	359	2.3	1	4 355
84	265	2.3	1	3 262
85	920	2.3	1	2 918
86	231	2.3	1	0 231
87	179	2.3	1	0 179
88	703	2.3	1	1 702
89	120	2.3	1	1 119
90	163	2.3	1	1 162
91	326	2.3	1	6 320
92	257	2.3	1	7 250
93	545	2.3	1	9 536
94	79	2.3	1	9 70
95	69	2.3	1	1 68
96	66	2.3	1	1 65
97	161	2.3	1	1 160
98	426	2.3	1	2 424
99	144	2.3	1	0 144
100	192	2.3	1	3 189
101	30	2.3	1	0 30


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_1.fastq
=============================================
38479188 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007156_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007156_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 148.66 s (4 us/read; 15.53 M reads/minute).

=== Summary ===

Total reads processed:              38,479,188
Reads with adapters:                13,990,798 (36.4%)
Reads written (passing filters):    38,479,188 (100.0%)

Total basepairs processed: 3,687,641,964 bp
Quality-trimmed:              19,921,939 bp (0.5%)
Total written (filtered):  3,646,055,507 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 13990798 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.5%
  C: 24.5%
  G: 21.4%
  T: 27.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	10006328	9619797.0	0	10006328
2	2629397	2404949.2	0	2629397
3	943666	601237.3	0	943666
4	341100	150309.3	0	341100
5	9311	37577.3	0	9311
6	6682	9394.3	0	6682
7	2178	2348.6	0	2178
8	912	587.1	0	912
9	563	146.8	0	341 222
10	677	36.7	1	188 489
11	975	9.2	1	212 763
12	722	2.3	1	196 526
13	836	2.3	1	200 636
14	1191	2.3	1	118 1073
15	1151	2.3	1	126 1025
16	2079	2.3	1	360 1719
17	1442	2.3	1	314 1128
18	1130	2.3	1	228 902
19	1311	2.3	1	265 1046
20	713	2.3	1	148 565
21	1063	2.3	1	229 834
22	1074	2.3	1	196 878
23	923	2.3	1	238 685
24	999	2.3	1	279 720
25	964	2.3	1	317 647
26	1156	2.3	1	333 823
27	1182	2.3	1	394 788
28	1381	2.3	1	526 855
29	1198	2.3	1	525 673
30	833	2.3	1	298 535
31	1233	2.3	1	366 867
32	882	2.3	1	380 502
33	1029	2.3	1	273 756
34	896	2.3	1	292 604
35	695	2.3	1	263 432
36	962	2.3	1	280 682
37	771	2.3	1	231 540
38	707	2.3	1	188 519
39	598	2.3	1	180 418
40	444	2.3	1	153 291
41	439	2.3	1	128 311
42	560	2.3	1	149 411
43	448	2.3	1	81 367
44	383	2.3	1	88 295
45	482	2.3	1	102 380
46	430	2.3	1	85 345
47	420	2.3	1	54 366
48	369	2.3	1	56 313
49	298	2.3	1	62 236
50	393	2.3	1	44 349
51	275	2.3	1	37 238
52	318	2.3	1	28 290
53	288	2.3	1	26 262
54	289	2.3	1	37 252
55	273	2.3	1	24 249
56	224	2.3	1	25 199
57	244	2.3	1	23 221
58	383	2.3	1	15 368
59	244	2.3	1	26 218
60	266	2.3	1	10 256
61	251	2.3	1	28 223
62	178	2.3	1	10 168
63	247	2.3	1	8 239
64	185	2.3	1	6 179
65	226	2.3	1	5 221
66	194	2.3	1	10 184
67	262	2.3	1	6 256
68	445	2.3	1	4 441
69	195	2.3	1	9 186
70	321	2.3	1	1 320
71	161	2.3	1	2 159
72	261	2.3	1	6 255
73	485	2.3	1	0 485
74	236	2.3	1	0 236
75	1284	2.3	1	3 1281
76	428	2.3	1	5 423
77	194	2.3	1	6 188
78	505	2.3	1	4 501
79	181	2.3	1	3 178
80	560	2.3	1	3 557
81	179	2.3	1	1 178
82	179	2.3	1	3 176
83	399	2.3	1	2 397
84	216	2.3	1	5 211
85	931	2.3	1	3 928
86	242	2.3	1	1 241
87	166	2.3	1	6 160
88	741	2.3	1	0 741
89	100	2.3	1	2 98
90	138	2.3	1	0 138
91	318	2.3	1	4 314
92	189	2.3	1	5 184
93	596	2.3	1	11 585
94	106	2.3	1	13 93
95	67	2.3	1	2 65
96	60	2.3	1	1 59
97	125	2.3	1	0 125
98	479	2.3	1	3 476
99	155	2.3	1	0 155
100	185	2.3	1	0 185
101	48	2.3	1	0 48


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007156_2.fastq
=============================================
38479188 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007156_1_trimmed.fq and SRR11007156_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007156_1_trimmed.fq<<	RENAMING TO:>>Mature_NK_1003_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007156_2_trimmed.fq<<	RENAMING TO:>>Mature_NK_1003_R2_trimmed.fq<<
file_1: Mature_NK_1003_R1_trimmed.fq, file_2: Mature_NK_1003_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Mature_NK_1003_R1_trimmed.fq and Mature_NK_1003_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Mature_NK_1003_val_1.fq
Writing validated paired-end Read 2 reads to Mature_NK_1003_val_2.fq

Total number of sequences analysed: 38479188

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 14736 (0.04%)


  >>> Now running FastQC on the validated data Mature_NK_1003_val_1.fq<<<

Started analysis of Mature_NK_1003_val_1.fq
Approx 5% complete for Mature_NK_1003_val_1.fq
Approx 10% complete for Mature_NK_1003_val_1.fq
Approx 15% complete for Mature_NK_1003_val_1.fq
Approx 20% complete for Mature_NK_1003_val_1.fq
Approx 25% complete for Mature_NK_1003_val_1.fq
Approx 30% complete for Mature_NK_1003_val_1.fq
Approx 35% complete for Mature_NK_1003_val_1.fq
Approx 40% complete for Mature_NK_1003_val_1.fq
Approx 45% complete for Mature_NK_1003_val_1.fq
Approx 50% complete for Mature_NK_1003_val_1.fq
Approx 55% complete for Mature_NK_1003_val_1.fq
Approx 60% complete for Mature_NK_1003_val_1.fq
Approx 65% complete for Mature_NK_1003_val_1.fq
Approx 70% complete for Mature_NK_1003_val_1.fq
Approx 75% complete for Mature_NK_1003_val_1.fq
Approx 80% complete for Mature_NK_1003_val_1.fq
Approx 85% complete for Mature_NK_1003_val_1.fq
Approx 90% complete for Mature_NK_1003_val_1.fq
Approx 95% complete for Mature_NK_1003_val_1.fq
Analysis complete for Mature_NK_1003_val_1.fq

  >>> Now running FastQC on the validated data Mature_NK_1003_val_2.fq<<<

Started analysis of Mature_NK_1003_val_2.fq
Approx 5% complete for Mature_NK_1003_val_2.fq
Approx 10% complete for Mature_NK_1003_val_2.fq
Approx 15% complete for Mature_NK_1003_val_2.fq
Approx 20% complete for Mature_NK_1003_val_2.fq
Approx 25% complete for Mature_NK_1003_val_2.fq
Approx 30% complete for Mature_NK_1003_val_2.fq
Approx 35% complete for Mature_NK_1003_val_2.fq
Approx 40% complete for Mature_NK_1003_val_2.fq
Approx 45% complete for Mature_NK_1003_val_2.fq
Approx 50% complete for Mature_NK_1003_val_2.fq
Approx 55% complete for Mature_NK_1003_val_2.fq
Approx 60% complete for Mature_NK_1003_val_2.fq
Approx 65% complete for Mature_NK_1003_val_2.fq
Approx 70% complete for Mature_NK_1003_val_2.fq
Approx 75% complete for Mature_NK_1003_val_2.fq
Approx 80% complete for Mature_NK_1003_val_2.fq
Approx 85% complete for Mature_NK_1003_val_2.fq
Approx 90% complete for Mature_NK_1003_val_2.fq
Approx 95% complete for Mature_NK_1003_val_2.fq
Analysis complete for Mature_NK_1003_val_2.fq
Deleting both intermediate output files Mature_NK_1003_R1_trimmed.fq and Mature_NK_1003_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Monocytes_1003<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	491	CTGTCTCTTATA	1000000	0.05
smallRNA	4	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 491). Second best hit was smallRNA (count: 4)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007158_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007158_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_1.fastq <<< 
10000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 50.99 s (4 us/read; 16.75 M reads/minute).

=== Summary ===

Total reads processed:              14,234,437
Reads with adapters:                 5,013,643 (35.2%)
Reads written (passing filters):    14,234,437 (100.0%)

Total basepairs processed: 1,414,243,695 bp
Quality-trimmed:              10,105,409 bp (0.7%)
Total written (filtered):  1,395,840,070 bp (98.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5013643 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.7%
  C: 26.8%
  G: 24.7%
  T: 26.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3546230	3558609.2	0	3546230
2	928415	889652.3	0	928415
3	398758	222413.1	0	398758
4	84067	55603.3	0	84067
5	7433	13900.8	0	7433
6	3990	3475.2	0	3990
7	3673	868.8	0	3673
8	2066	217.2	0	2066
9	537	54.3	0	147 390
10	842	13.6	1	57 785
11	1040	3.4	1	90 950
12	828	0.8	1	60 768
13	1057	0.8	1	60 997
14	1022	0.8	1	80 942
15	2052	0.8	1	208 1844
16	1253	0.8	1	153 1100
17	2600	0.8	1	326 2274
18	2054	0.8	1	274 1780
19	1731	0.8	1	277 1454
20	685	0.8	1	89 596
21	654	0.8	1	102 552
22	1041	0.8	1	143 898
23	648	0.8	1	113 535
24	986	0.8	1	184 802
25	936	0.8	1	213 723
26	999	0.8	1	217 782
27	1108	0.8	1	199 909
28	817	0.8	1	181 636
29	833	0.8	1	170 663
30	617	0.8	1	115 502
31	438	0.8	1	100 338
32	631	0.8	1	131 500
33	510	0.8	1	111 399
34	411	0.8	1	89 322
35	647	0.8	1	151 496
36	609	0.8	1	129 480
37	535	0.8	1	89 446
38	426	0.8	1	92 334
39	344	0.8	1	75 269
40	324	0.8	1	72 252
41	413	0.8	1	87 326
42	432	0.8	1	79 353
43	294	0.8	1	60 234
44	328	0.8	1	74 254
45	221	0.8	1	36 185
46	218	0.8	1	37 181
47	178	0.8	1	16 162
48	343	0.8	1	62 281
49	263	0.8	1	42 221
50	165	0.8	1	18 147
51	206	0.8	1	36 170
52	394	0.8	1	59 335
53	214	0.8	1	30 184
54	131	0.8	1	12 119
55	296	0.8	1	62 234
56	152	0.8	1	24 128
57	162	0.8	1	18 144
58	182	0.8	1	21 161
59	164	0.8	1	23 141
60	175	0.8	1	16 159
61	152	0.8	1	18 134
62	179	0.8	1	32 147
63	142	0.8	1	11 131
64	127	0.8	1	13 114
65	85	0.8	1	5 80
66	129	0.8	1	9 120
67	82	0.8	1	2 80
68	224	0.8	1	3 221
69	96	0.8	1	2 94
70	107	0.8	1	2 105
71	56	0.8	1	1 55
72	112	0.8	1	2 110
73	191	0.8	1	0 191
74	104	0.8	1	1 103
75	245	0.8	1	0 245
76	113	0.8	1	0 113
77	94	0.8	1	2 92
78	298	0.8	1	0 298
79	69	0.8	1	0 69
80	110	0.8	1	1 109
81	75	0.8	1	0 75
82	87	0.8	1	2 85
83	204	0.8	1	0 204
84	84	0.8	1	1 83
85	268	0.8	1	0 268
86	74	0.8	1	0 74
87	65	0.8	1	1 64
88	203	0.8	1	0 203
89	56	0.8	1	0 56
90	55	0.8	1	0 55
91	158	0.8	1	1 157
92	118	0.8	1	1 117
93	238	0.8	1	2 236
94	31	0.8	1	0 31
95	49	0.8	1	1 48
96	30	0.8	1	0 30
97	77	0.8	1	1 76
98	159	0.8	1	1 158
99	66	0.8	1	0 66
100	42	0.8	1	0 42
101	11	0.8	1	0 11


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_1.fastq
=============================================
14234437 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007158_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007158_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_2.fastq <<< 
10000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 51.27 s (4 us/read; 16.66 M reads/minute).

=== Summary ===

Total reads processed:              14,234,437
Reads with adapters:                 4,901,624 (34.4%)
Reads written (passing filters):    14,234,437 (100.0%)

Total basepairs processed: 1,411,441,827 bp
Quality-trimmed:              14,482,757 bp (1.0%)
Total written (filtered):  1,389,465,646 bp (98.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 4901624 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.9%
  C: 26.8%
  G: 23.4%
  T: 26.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3424192	3558609.2	0	3424192
2	1001992	889652.3	0	1001992
3	360596	222413.1	0	360596
4	95707	55603.3	0	95707
5	2868	13900.8	0	2868
6	2802	3475.2	0	2802
7	1013	868.8	0	1013
8	515	217.2	0	515
9	242	54.3	0	66 176
10	160	13.6	1	24 136
11	182	3.4	1	29 153
12	153	0.8	1	25 128
13	199	0.8	1	28 171
14	226	0.8	1	18 208
15	269	0.8	1	17 252
16	356	0.8	1	50 306
17	232	0.8	1	41 191
18	215	0.8	1	23 192
19	237	0.8	1	38 199
20	150	0.8	1	24 126
21	223	0.8	1	24 199
22	209	0.8	1	26 183
23	190	0.8	1	26 164
24	185	0.8	1	38 147
25	144	0.8	1	34 110
26	216	0.8	1	34 182
27	179	0.8	1	52 127
28	255	0.8	1	78 177
29	188	0.8	1	61 127
30	138	0.8	1	22 116
31	217	0.8	1	29 188
32	145	0.8	1	40 105
33	205	0.8	1	38 167
34	170	0.8	1	23 147
35	110	0.8	1	22 88
36	169	0.8	1	24 145
37	157	0.8	1	17 140
38	137	0.8	1	10 127
39	86	0.8	1	8 78
40	78	0.8	1	9 69
41	105	0.8	1	7 98
42	113	0.8	1	6 107
43	80	0.8	1	8 72
44	90	0.8	1	5 85
45	88	0.8	1	11 77
46	99	0.8	1	10 89
47	111	0.8	1	3 108
48	89	0.8	1	11 78
49	90	0.8	1	10 80
50	91	0.8	1	3 88
51	82	0.8	1	3 79
52	93	0.8	1	3 90
53	100	0.8	1	13 87
54	107	0.8	1	3 104
55	76	0.8	1	1 75
56	65	0.8	1	2 63
57	85	0.8	1	2 83
58	110	0.8	1	1 109
59	69	0.8	1	3 66
60	100	0.8	1	2 98
61	79	0.8	1	3 76
62	60	0.8	1	1 59
63	102	0.8	1	3 99
64	73	0.8	1	2 71
65	63	0.8	1	0 63
66	63	0.8	1	0 63
67	72	0.8	1	1 71
68	163	0.8	1	1 162
69	86	0.8	1	0 86
70	115	0.8	1	2 113
71	72	0.8	1	1 71
72	79	0.8	1	0 79
73	168	0.8	1	0 168
74	98	0.8	1	0 98
75	285	0.8	1	0 285
76	130	0.8	1	0 130
77	83	0.8	1	0 83
78	164	0.8	1	1 163
79	46	0.8	1	0 46
80	118	0.8	1	1 117
81	61	0.8	1	1 60
82	77	0.8	1	0 77
83	159	0.8	1	0 159
84	71	0.8	1	0 71
85	245	0.8	1	0 245
86	77	0.8	1	0 77
87	67	0.8	1	0 67
88	200	0.8	1	0 200
89	48	0.8	1	0 48
90	66	0.8	1	0 66
91	125	0.8	1	0 125
92	107	0.8	1	1 106
93	228	0.8	1	0 228
94	22	0.8	1	0 22
95	40	0.8	1	0 40
96	26	0.8	1	1 25
97	52	0.8	1	1 51
98	159	0.8	1	4 155
99	39	0.8	1	0 39
100	53	0.8	1	0 53
101	33	0.8	1	0 33


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007158_2.fastq
=============================================
14234437 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007158_1_trimmed.fq and SRR11007158_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007158_1_trimmed.fq<<	RENAMING TO:>>Monocytes_1003_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007158_2_trimmed.fq<<	RENAMING TO:>>Monocytes_1003_R2_trimmed.fq<<
file_1: Monocytes_1003_R1_trimmed.fq, file_2: Monocytes_1003_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Monocytes_1003_R1_trimmed.fq and Monocytes_1003_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Monocytes_1003_val_1.fq
Writing validated paired-end Read 2 reads to Monocytes_1003_val_2.fq

Total number of sequences analysed: 14234437

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 5118 (0.04%)


  >>> Now running FastQC on the validated data Monocytes_1003_val_1.fq<<<

Started analysis of Monocytes_1003_val_1.fq
Approx 5% complete for Monocytes_1003_val_1.fq
Approx 10% complete for Monocytes_1003_val_1.fq
Approx 15% complete for Monocytes_1003_val_1.fq
Approx 20% complete for Monocytes_1003_val_1.fq
Approx 25% complete for Monocytes_1003_val_1.fq
Approx 30% complete for Monocytes_1003_val_1.fq
Approx 35% complete for Monocytes_1003_val_1.fq
Approx 40% complete for Monocytes_1003_val_1.fq
Approx 45% complete for Monocytes_1003_val_1.fq
Approx 50% complete for Monocytes_1003_val_1.fq
Approx 55% complete for Monocytes_1003_val_1.fq
Approx 60% complete for Monocytes_1003_val_1.fq
Approx 65% complete for Monocytes_1003_val_1.fq
Approx 70% complete for Monocytes_1003_val_1.fq
Approx 75% complete for Monocytes_1003_val_1.fq
Approx 80% complete for Monocytes_1003_val_1.fq
Approx 85% complete for Monocytes_1003_val_1.fq
Approx 90% complete for Monocytes_1003_val_1.fq
Approx 95% complete for Monocytes_1003_val_1.fq
Analysis complete for Monocytes_1003_val_1.fq

  >>> Now running FastQC on the validated data Monocytes_1003_val_2.fq<<<

Started analysis of Monocytes_1003_val_2.fq
Approx 5% complete for Monocytes_1003_val_2.fq
Approx 10% complete for Monocytes_1003_val_2.fq
Approx 15% complete for Monocytes_1003_val_2.fq
Approx 20% complete for Monocytes_1003_val_2.fq
Approx 25% complete for Monocytes_1003_val_2.fq
Approx 30% complete for Monocytes_1003_val_2.fq
Approx 35% complete for Monocytes_1003_val_2.fq
Approx 40% complete for Monocytes_1003_val_2.fq
Approx 45% complete for Monocytes_1003_val_2.fq
Approx 50% complete for Monocytes_1003_val_2.fq
Approx 55% complete for Monocytes_1003_val_2.fq
Approx 60% complete for Monocytes_1003_val_2.fq
Approx 65% complete for Monocytes_1003_val_2.fq
Approx 70% complete for Monocytes_1003_val_2.fq
Approx 75% complete for Monocytes_1003_val_2.fq
Approx 80% complete for Monocytes_1003_val_2.fq
Approx 85% complete for Monocytes_1003_val_2.fq
Approx 90% complete for Monocytes_1003_val_2.fq
Approx 95% complete for Monocytes_1003_val_2.fq
Analysis complete for Monocytes_1003_val_2.fq
Deleting both intermediate output files Monocytes_1003_R1_trimmed.fq and Monocytes_1003_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>CD8pos_T_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	171	CTGTCTCTTATA	1000000	0.02
Illumina	4	AGATCGGAAGAGC	1000000	0.00
smallRNA	1	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 171). Second best hit was Illumina (count: 4)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007160_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007160_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 148.53 s (3 us/read; 19.14 M reads/minute).

=== Summary ===

Total reads processed:              47,370,692
Reads with adapters:                18,689,244 (39.5%)
Reads written (passing filters):    47,370,692 (100.0%)

Total basepairs processed: 4,397,503,741 bp
Quality-trimmed:               4,325,470 bp (0.1%)
Total written (filtered):  4,365,414,243 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18689244 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.1%
  C: 25.9%
  G: 22.2%
  T: 23.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13744554	11842673.0	0	13744554
2	3205706	2960668.2	0	3205706
3	1191320	740167.1	0	1191320
4	474975	185041.8	0	474975
5	10630	46260.4	0	10630
6	8618	11565.1	0	8618
7	2283	2891.3	0	2283
8	519	722.8	0	519
9	315	180.7	0	52 263
10	609	45.2	1	31 578
11	1016	11.3	1	44 972
12	912	2.8	1	157 755
13	552	2.8	1	54 498
14	1579	2.8	1	148 1431
15	1108	2.8	1	69 1039
16	2717	2.8	1	532 2185
17	1205	2.8	1	209 996
18	1470	2.8	1	273 1197
19	1194	2.8	1	230 964
20	823	2.8	1	169 654
21	886	2.8	1	157 729
22	682	2.8	1	70 612
23	1500	2.8	1	345 1155
24	588	2.8	1	112 476
25	862	2.8	1	226 636
26	1248	2.8	1	262 986
27	966	2.8	1	227 739
28	1382	2.8	1	421 961
29	1365	2.8	1	353 1012
30	332	2.8	1	47 285
31	1410	2.8	1	268 1142
32	354	2.8	1	51 303
33	1228	2.8	1	293 935
34	1006	2.8	1	203 803
35	659	2.8	1	147 512
36	639	2.8	1	88 551
37	543	2.8	1	65 478
38	859	2.8	1	146 713
39	619	2.8	1	160 459
40	517	2.8	1	120 397
41	673	2.8	1	127 546
42	600	2.8	1	93 507
43	822	2.8	1	181 641
44	615	2.8	1	115 500
45	500	2.8	1	67 433
46	348	2.8	1	58 290
47	574	2.8	1	85 489
48	342	2.8	1	62 280
49	386	2.8	1	43 343
50	697	2.8	1	85 612
51	409	2.8	1	84 325
52	346	2.8	1	34 312
53	304	2.8	1	40 264
54	384	2.8	1	51 333
55	358	2.8	1	22 336
56	301	2.8	1	24 277
57	283	2.8	1	28 255
58	353	2.8	1	29 324
59	290	2.8	1	33 257
60	286	2.8	1	19 267
61	215	2.8	1	19 196
62	222	2.8	1	17 205
63	335	2.8	1	23 312
64	213	2.8	1	16 197
65	206	2.8	1	12 194
66	184	2.8	1	5 179
67	271	2.8	1	4 267
68	408	2.8	1	4 404
69	194	2.8	1	5 189
70	292	2.8	1	3 289
71	126	2.8	1	0 126
72	197	2.8	1	1 196
73	362	2.8	1	1 361
74	213	2.8	1	1 212
75	917	2.8	1	0 917
76	135	2.8	1	2 133
77	134	2.8	1	1 133
78	511	2.8	1	0 511
79	149	2.8	1	0 149
80	671	2.8	1	1 670
81	141	2.8	1	1 140
82	153	2.8	1	0 153
83	372	2.8	1	0 372
84	154	2.8	1	1 153
85	858	2.8	1	0 858
86	177	2.8	1	1 176
87	144	2.8	1	0 144
88	575	2.8	1	1 574
89	111	2.8	1	0 111
90	108	2.8	1	0 108
91	188	2.8	1	0 188
92	159	2.8	1	1 158
93	416	2.8	1	0 416
94	71	2.8	1	0 71
95	73	2.8	1	0 73
96	44	2.8	1	0 44
97	140	2.8	1	2 138
98	451	2.8	1	4 447
99	109	2.8	1	0 109
100	181	2.8	1	0 181
101	43	2.8	1	1 42


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_1.fastq
=============================================
47370692 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007160_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007160_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 144.75 s (3 us/read; 19.64 M reads/minute).

=== Summary ===

Total reads processed:              47,370,692
Reads with adapters:                18,691,910 (39.5%)
Reads written (passing filters):    47,370,692 (100.0%)

Total basepairs processed: 4,405,726,436 bp
Quality-trimmed:              26,531,216 bp (0.6%)
Total written (filtered):  4,348,653,455 bp (98.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18691910 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.0%
  C: 25.5%
  G: 22.0%
  T: 24.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13622751	11842673.0	0	13622751
2	3225449	2960668.2	0	3225449
3	1200593	740167.1	0	1200593
4	457620	185041.8	0	457620
5	14277	46260.4	0	14277
6	10391	11565.1	0	10391
7	4147	2891.3	0	4147
8	2385	722.8	0	2385
9	1901	180.7	0	1490 411
10	2205	45.2	1	812 1393
11	2798	11.3	1	1091 1707
12	2899	2.8	1	1143 1756
13	2846	2.8	1	943 1903
14	3645	2.8	1	682 2963
15	3728	2.8	1	674 3054
16	6181	2.8	1	1385 4796
17	5950	2.8	1	1724 4226
18	5317	2.8	1	1409 3908
19	5120	2.8	1	1404 3716
20	2675	2.8	1	802 1873
21	3213	2.8	1	849 2364
22	3970	2.8	1	1071 2899
23	3612	2.8	1	1198 2414
24	3873	2.8	1	1356 2517
25	4452	2.8	1	1649 2803
26	4315	2.8	1	1762 2553
27	4182	2.8	1	1744 2438
28	5828	2.8	1	2630 3198
29	5107	2.8	1	2693 2414
30	3855	2.8	1	1664 2191
31	4684	2.8	1	1992 2692
32	3873	2.8	1	2099 1774
33	3891	2.8	1	1859 2032
34	4203	2.8	1	2020 2183
35	3001	2.8	1	1535 1466
36	3582	2.8	1	1590 1992
37	2922	2.8	1	1465 1457
38	3043	2.8	1	1410 1633
39	3147	2.8	1	1468 1679
40	2007	2.8	1	952 1055
41	1921	2.8	1	812 1109
42	1819	2.8	1	808 1011
43	1762	2.8	1	792 970
44	1517	2.8	1	631 886
45	1556	2.8	1	640 916
46	1573	2.8	1	617 956
47	1193	2.8	1	467 726
48	1204	2.8	1	463 741
49	1225	2.8	1	494 731
50	1104	2.8	1	350 754
51	952	2.8	1	375 577
52	977	2.8	1	347 630
53	769	2.8	1	302 467
54	758	2.8	1	257 501
55	809	2.8	1	240 569
56	588	2.8	1	180 408
57	542	2.8	1	159 383
58	621	2.8	1	161 460
59	503	2.8	1	148 355
60	494	2.8	1	124 370
61	383	2.8	1	108 275
62	418	2.8	1	103 315
63	439	2.8	1	93 346
64	299	2.8	1	58 241
65	259	2.8	1	51 208
66	237	2.8	1	16 221
67	272	2.8	1	10 262
68	407	2.8	1	19 388
69	194	2.8	1	8 186
70	279	2.8	1	8 271
71	141	2.8	1	4 137
72	196	2.8	1	2 194
73	352	2.8	1	0 352
74	189	2.8	1	0 189
75	816	2.8	1	0 816
76	138	2.8	1	2 136
77	150	2.8	1	1 149
78	463	2.8	1	4 459
79	163	2.8	1	4 159
80	526	2.8	1	0 526
81	137	2.8	1	0 137
82	132	2.8	1	0 132
83	309	2.8	1	1 308
84	174	2.8	1	1 173
85	633	2.8	1	1 632
86	164	2.8	1	1 163
87	145	2.8	1	0 145
88	466	2.8	1	1 465
89	97	2.8	1	1 96
90	110	2.8	1	0 110
91	188	2.8	1	1 187
92	163	2.8	1	0 163
93	373	2.8	1	4 369
94	75	2.8	1	0 75
95	78	2.8	1	1 77
96	55	2.8	1	0 55
97	137	2.8	1	1 136
98	333	2.8	1	2 331
99	118	2.8	1	1 117
100	142	2.8	1	0 142
101	35	2.8	1	0 35


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007160_2.fastq
=============================================
47370692 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007160_1_trimmed.fq and SRR11007160_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007160_1_trimmed.fq<<	RENAMING TO:>>CD8pos_T_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007160_2_trimmed.fq<<	RENAMING TO:>>CD8pos_T_1004_R2_trimmed.fq<<
file_1: CD8pos_T_1004_R1_trimmed.fq, file_2: CD8pos_T_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: CD8pos_T_1004_R1_trimmed.fq and CD8pos_T_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to CD8pos_T_1004_val_1.fq
Writing validated paired-end Read 2 reads to CD8pos_T_1004_val_2.fq

Total number of sequences analysed: 47370692

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 17046 (0.04%)


  >>> Now running FastQC on the validated data CD8pos_T_1004_val_1.fq<<<

Started analysis of CD8pos_T_1004_val_1.fq
Approx 5% complete for CD8pos_T_1004_val_1.fq
Approx 10% complete for CD8pos_T_1004_val_1.fq
Approx 15% complete for CD8pos_T_1004_val_1.fq
Approx 20% complete for CD8pos_T_1004_val_1.fq
Approx 25% complete for CD8pos_T_1004_val_1.fq
Approx 30% complete for CD8pos_T_1004_val_1.fq
Approx 35% complete for CD8pos_T_1004_val_1.fq
Approx 40% complete for CD8pos_T_1004_val_1.fq
Approx 45% complete for CD8pos_T_1004_val_1.fq
Approx 50% complete for CD8pos_T_1004_val_1.fq
Approx 55% complete for CD8pos_T_1004_val_1.fq
Approx 60% complete for CD8pos_T_1004_val_1.fq
Approx 65% complete for CD8pos_T_1004_val_1.fq
Approx 70% complete for CD8pos_T_1004_val_1.fq
Approx 75% complete for CD8pos_T_1004_val_1.fq
Approx 80% complete for CD8pos_T_1004_val_1.fq
Approx 85% complete for CD8pos_T_1004_val_1.fq
Approx 90% complete for CD8pos_T_1004_val_1.fq
Approx 95% complete for CD8pos_T_1004_val_1.fq
Analysis complete for CD8pos_T_1004_val_1.fq

  >>> Now running FastQC on the validated data CD8pos_T_1004_val_2.fq<<<

Started analysis of CD8pos_T_1004_val_2.fq
Approx 5% complete for CD8pos_T_1004_val_2.fq
Approx 10% complete for CD8pos_T_1004_val_2.fq
Approx 15% complete for CD8pos_T_1004_val_2.fq
Approx 20% complete for CD8pos_T_1004_val_2.fq
Approx 25% complete for CD8pos_T_1004_val_2.fq
Approx 30% complete for CD8pos_T_1004_val_2.fq
Approx 35% complete for CD8pos_T_1004_val_2.fq
Approx 40% complete for CD8pos_T_1004_val_2.fq
Approx 45% complete for CD8pos_T_1004_val_2.fq
Approx 50% complete for CD8pos_T_1004_val_2.fq
Approx 55% complete for CD8pos_T_1004_val_2.fq
Approx 60% complete for CD8pos_T_1004_val_2.fq
Approx 65% complete for CD8pos_T_1004_val_2.fq
Approx 70% complete for CD8pos_T_1004_val_2.fq
Approx 75% complete for CD8pos_T_1004_val_2.fq
Approx 80% complete for CD8pos_T_1004_val_2.fq
Approx 85% complete for CD8pos_T_1004_val_2.fq
Approx 90% complete for CD8pos_T_1004_val_2.fq
Approx 95% complete for CD8pos_T_1004_val_2.fq
Analysis complete for CD8pos_T_1004_val_2.fq
Deleting both intermediate output files CD8pos_T_1004_R1_trimmed.fq and CD8pos_T_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Effector_CD4pos_T_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	254	CTGTCTCTTATA	1000000	0.03
Illumina	9	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 254). Second best hit was Illumina (count: 9)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007170_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007170_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 134.36 s (3 us/read; 20.66 M reads/minute).

=== Summary ===

Total reads processed:              46,274,555
Reads with adapters:                18,861,216 (40.8%)
Reads written (passing filters):    46,274,555 (100.0%)

Total basepairs processed: 4,180,479,437 bp
Quality-trimmed:               3,654,825 bp (0.1%)
Total written (filtered):  4,149,405,647 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18861216 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 29.3%
  C: 25.7%
  G: 22.1%
  T: 22.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	14132021	11568638.8	0	14132021
2	3012221	2892159.7	0	3012221
3	1163479	723039.9	0	1163479
4	481234	180760.0	0	481234
5	12039	45190.0	0	12039
6	10664	11297.5	0	10664
7	2865	2824.4	0	2865
8	505	706.1	0	505
9	321	176.5	0	87 234
10	631	44.1	1	42 589
11	1092	11.0	1	38 1054
12	817	2.8	1	140 677
13	615	2.8	1	58 557
14	1532	2.8	1	173 1359
15	1000	2.8	1	78 922
16	2776	2.8	1	586 2190
17	914	2.8	1	180 734
18	1350	2.8	1	242 1108
19	1065	2.8	1	199 866
20	754	2.8	1	132 622
21	932	2.8	1	188 744
22	494	2.8	1	56 438
23	1457	2.8	1	366 1091
24	555	2.8	1	123 432
25	950	2.8	1	252 698
26	1342	2.8	1	309 1033
27	1029	2.8	1	298 731
28	1475	2.8	1	445 1030
29	1403	2.8	1	399 1004
30	317	2.8	1	67 250
31	1184	2.8	1	281 903
32	289	2.8	1	45 244
33	1074	2.8	1	252 822
34	706	2.8	1	165 541
35	661	2.8	1	171 490
36	874	2.8	1	223 651
37	1203	2.8	1	360 843
38	843	2.8	1	201 642
39	408	2.8	1	96 312
40	531	2.8	1	97 434
41	555	2.8	1	116 439
42	602	2.8	1	129 473
43	1164	2.8	1	321 843
44	515	2.8	1	105 410
45	511	2.8	1	92 419
46	374	2.8	1	81 293
47	478	2.8	1	99 379
48	359	2.8	1	67 292
49	365	2.8	1	62 303
50	583	2.8	1	112 471
51	418	2.8	1	80 338
52	306	2.8	1	46 260
53	274	2.8	1	44 230
54	460	2.8	1	63 397
55	284	2.8	1	32 252
56	230	2.8	1	33 197
57	250	2.8	1	35 215
58	293	2.8	1	40 253
59	273	2.8	1	37 236
60	251	2.8	1	28 223
61	212	2.8	1	33 179
62	177	2.8	1	17 160
63	245	2.8	1	31 214
64	168	2.8	1	20 148
65	178	2.8	1	23 155
66	142	2.8	1	7 135
67	189	2.8	1	3 186
68	284	2.8	1	9 275
69	112	2.8	1	6 106
70	148	2.8	1	2 146
71	72	2.8	1	1 71
72	110	2.8	1	1 109
73	191	2.8	1	1 190
74	134	2.8	1	1 133
75	561	2.8	1	0 561
76	108	2.8	1	1 107
77	81	2.8	1	1 80
78	328	2.8	1	1 327
79	124	2.8	1	1 123
80	400	2.8	1	0 400
81	86	2.8	1	1 85
82	82	2.8	1	0 82
83	211	2.8	1	0 211
84	72	2.8	1	0 72
85	454	2.8	1	0 454
86	144	2.8	1	0 144
87	79	2.8	1	0 79
88	381	2.8	1	0 381
89	83	2.8	1	0 83
90	77	2.8	1	0 77
91	174	2.8	1	0 174
92	139	2.8	1	0 139
93	358	2.8	1	0 358
94	51	2.8	1	0 51
95	30	2.8	1	0 30
96	41	2.8	1	0 41
97	75	2.8	1	0 75
98	280	2.8	1	1 279
99	117	2.8	1	0 117
100	122	2.8	1	0 122
101	29	2.8	1	0 29


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_1.fastq
=============================================
46274555 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007170_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007170_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 145.94 s (3 us/read; 19.02 M reads/minute).

=== Summary ===

Total reads processed:              46,274,555
Reads with adapters:                18,978,443 (41.0%)
Reads written (passing filters):    46,274,555 (100.0%)

Total basepairs processed: 4,189,007,758 bp
Quality-trimmed:              17,490,600 bp (0.4%)
Total written (filtered):  4,141,071,981 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18978443 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 29.1%
  C: 25.6%
  G: 22.0%
  T: 23.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	14140552	11568638.8	0	14140552
2	3019667	2892159.7	0	3019667
3	1173180	723039.9	0	1173180
4	461437	180760.0	0	461437
5	15084	45190.0	0	15084
6	11822	11297.5	0	11822
7	4432	2824.4	0	4432
8	2334	706.1	0	2334
9	1897	176.5	0	1524 373
10	2191	44.1	1	899 1292
11	2399	11.0	1	838 1561
12	2264	2.8	1	840 1424
13	2500	2.8	1	769 1731
14	3135	2.8	1	552 2583
15	3230	2.8	1	555 2675
16	5878	2.8	1	1300 4578
17	5405	2.8	1	1509 3896
18	4779	2.8	1	1244 3535
19	4871	2.8	1	1255 3616
20	2400	2.8	1	651 1749
21	3216	2.8	1	879 2337
22	3824	2.8	1	1102 2722
23	3537	2.8	1	1185 2352
24	3942	2.8	1	1342 2600
25	4395	2.8	1	1669 2726
26	4537	2.8	1	1867 2670
27	4293	2.8	1	1862 2431
28	5963	2.8	1	2767 3196
29	5393	2.8	1	2929 2464
30	3708	2.8	1	1686 2022
31	4576	2.8	1	2077 2499
32	4058	2.8	1	2202 1856
33	4345	2.8	1	2045 2300
34	4708	2.8	1	2335 2373
35	3282	2.8	1	1770 1512
36	3063	2.8	1	1452 1611
37	3388	2.8	1	1760 1628
38	2650	2.8	1	1299 1351
39	2325	2.8	1	1147 1178
40	2390	2.8	1	1207 1183
41	2002	2.8	1	951 1051
42	1886	2.8	1	863 1023
43	1829	2.8	1	834 995
44	1606	2.8	1	756 850
45	1559	2.8	1	685 874
46	1771	2.8	1	748 1023
47	1258	2.8	1	555 703
48	1267	2.8	1	512 755
49	1237	2.8	1	515 722
50	1161	2.8	1	439 722
51	1086	2.8	1	460 626
52	1021	2.8	1	370 651
53	853	2.8	1	355 498
54	847	2.8	1	297 550
55	737	2.8	1	251 486
56	617	2.8	1	203 414
57	574	2.8	1	194 380
58	611	2.8	1	187 424
59	562	2.8	1	170 392
60	549	2.8	1	162 387
61	398	2.8	1	112 286
62	446	2.8	1	137 309
63	428	2.8	1	108 320
64	336	2.8	1	90 246
65	275	2.8	1	70 205
66	159	2.8	1	25 134
67	231	2.8	1	19 212
68	321	2.8	1	20 301
69	155	2.8	1	19 136
70	153	2.8	1	7 146
71	87	2.8	1	7 80
72	133	2.8	1	2 131
73	232	2.8	1	1 231
74	108	2.8	1	1 107
75	652	2.8	1	0 652
76	119	2.8	1	1 118
77	83	2.8	1	1 82
78	343	2.8	1	0 343
79	131	2.8	1	0 131
80	410	2.8	1	1 409
81	113	2.8	1	1 112
82	85	2.8	1	1 84
83	231	2.8	1	0 231
84	110	2.8	1	1 109
85	489	2.8	1	0 489
86	144	2.8	1	0 144
87	84	2.8	1	0 84
88	410	2.8	1	0 410
89	106	2.8	1	0 106
90	63	2.8	1	1 62
91	161	2.8	1	0 161
92	134	2.8	1	1 133
93	299	2.8	1	2 297
94	38	2.8	1	0 38
95	23	2.8	1	0 23
96	41	2.8	1	0 41
97	91	2.8	1	0 91
98	257	2.8	1	0 257
99	130	2.8	1	0 130
100	122	2.8	1	0 122
101	29	2.8	1	0 29


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007170_2.fastq
=============================================
46274555 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007170_1_trimmed.fq and SRR11007170_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007170_1_trimmed.fq<<	RENAMING TO:>>Effector_CD4pos_T_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007170_2_trimmed.fq<<	RENAMING TO:>>Effector_CD4pos_T_1004_R2_trimmed.fq<<
file_1: Effector_CD4pos_T_1004_R1_trimmed.fq, file_2: Effector_CD4pos_T_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Effector_CD4pos_T_1004_R1_trimmed.fq and Effector_CD4pos_T_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Effector_CD4pos_T_1004_val_1.fq
Writing validated paired-end Read 2 reads to Effector_CD4pos_T_1004_val_2.fq

Total number of sequences analysed: 46274555

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 13131 (0.03%)


  >>> Now running FastQC on the validated data Effector_CD4pos_T_1004_val_1.fq<<<

Started analysis of Effector_CD4pos_T_1004_val_1.fq
Approx 5% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 10% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 15% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 20% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 25% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 30% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 35% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 40% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 45% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 50% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 55% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 60% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 65% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 70% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 75% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 80% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 85% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 90% complete for Effector_CD4pos_T_1004_val_1.fq
Approx 95% complete for Effector_CD4pos_T_1004_val_1.fq
Analysis complete for Effector_CD4pos_T_1004_val_1.fq

  >>> Now running FastQC on the validated data Effector_CD4pos_T_1004_val_2.fq<<<

Started analysis of Effector_CD4pos_T_1004_val_2.fq
Approx 5% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 10% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 15% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 20% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 25% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 30% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 35% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 40% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 45% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 50% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 55% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 60% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 65% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 70% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 75% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 80% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 85% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 90% complete for Effector_CD4pos_T_1004_val_2.fq
Approx 95% complete for Effector_CD4pos_T_1004_val_2.fq
Analysis complete for Effector_CD4pos_T_1004_val_2.fq
Deleting both intermediate output files Effector_CD4pos_T_1004_R1_trimmed.fq and Effector_CD4pos_T_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Regulatory_T_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	124	CTGTCTCTTATA	1000000	0.01
Illumina	3	AGATCGGAAGAGC	1000000	0.00
smallRNA	1	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 124). Second best hit was Illumina (count: 3)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007182_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007182_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 84.59 s (3 us/read; 20.83 M reads/minute).

=== Summary ===

Total reads processed:              29,365,374
Reads with adapters:                11,774,389 (40.1%)
Reads written (passing filters):    29,365,374 (100.0%)

Total basepairs processed: 2,756,812,656 bp
Quality-trimmed:               2,256,775 bp (0.1%)
Total written (filtered):  2,737,446,372 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 11774389 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.0%
  C: 26.7%
  G: 23.6%
  T: 23.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8676590	7341343.5	0	8676590
2	2027190	1835335.9	0	2027190
3	764065	458834.0	0	764065
4	271552	114708.5	0	271552
5	6316	28677.1	0	6316
6	4379	7169.3	0	4379
7	1167	1792.3	0	1167
8	182	448.1	0	182
9	129	112.0	0	28 101
10	291	28.0	1	19 272
11	488	7.0	1	17 471
12	364	1.8	1	57 307
13	279	1.8	1	23 256
14	697	1.8	1	68 629
15	507	1.8	1	27 480
16	1211	1.8	1	235 976
17	477	1.8	1	88 389
18	677	1.8	1	103 574
19	476	1.8	1	79 397
20	343	1.8	1	65 278
21	438	1.8	1	75 363
22	243	1.8	1	23 220
23	701	1.8	1	155 546
24	276	1.8	1	55 221
25	403	1.8	1	100 303
26	623	1.8	1	138 485
27	457	1.8	1	101 356
28	579	1.8	1	173 406
29	640	1.8	1	191 449
30	168	1.8	1	29 139
31	531	1.8	1	113 418
32	169	1.8	1	24 145
33	571	1.8	1	115 456
34	425	1.8	1	98 327
35	164	1.8	1	23 141
36	276	1.8	1	48 228
37	479	1.8	1	115 364
38	341	1.8	1	52 289
39	242	1.8	1	58 184
40	210	1.8	1	45 165
41	268	1.8	1	39 229
42	212	1.8	1	26 186
43	364	1.8	1	85 279
44	235	1.8	1	33 202
45	238	1.8	1	39 199
46	160	1.8	1	18 142
47	235	1.8	1	31 204
48	178	1.8	1	25 153
49	193	1.8	1	23 170
50	291	1.8	1	27 264
51	193	1.8	1	27 166
52	135	1.8	1	21 114
53	122	1.8	1	11 111
54	198	1.8	1	24 174
55	146	1.8	1	11 135
56	119	1.8	1	12 107
57	140	1.8	1	16 124
58	153	1.8	1	24 129
59	114	1.8	1	9 105
60	150	1.8	1	11 139
61	96	1.8	1	17 79
62	83	1.8	1	3 80
63	153	1.8	1	4 149
64	107	1.8	1	6 101
65	98	1.8	1	4 94
66	82	1.8	1	1 81
67	130	1.8	1	2 128
68	159	1.8	1	2 157
69	88	1.8	1	3 85
70	123	1.8	1	4 119
71	54	1.8	1	0 54
72	71	1.8	1	0 71
73	214	1.8	1	2 212
74	127	1.8	1	1 126
75	496	1.8	1	0 496
76	84	1.8	1	0 84
77	47	1.8	1	0 47
78	260	1.8	1	0 260
79	70	1.8	1	0 70
80	313	1.8	1	0 313
81	80	1.8	1	2 78
82	72	1.8	1	0 72
83	180	1.8	1	0 180
84	94	1.8	1	0 94
85	425	1.8	1	0 425
86	88	1.8	1	0 88
87	57	1.8	1	1 56
88	271	1.8	1	1 270
89	40	1.8	1	0 40
90	69	1.8	1	0 69
91	78	1.8	1	0 78
92	92	1.8	1	0 92
93	260	1.8	1	1 259
94	45	1.8	1	0 45
95	36	1.8	1	0 36
96	17	1.8	1	0 17
97	56	1.8	1	0 56
98	220	1.8	1	0 220
99	59	1.8	1	0 59
100	108	1.8	1	0 108
101	27	1.8	1	0 27


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_1.fastq
=============================================
29365374 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007182_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007182_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 87.76 s (3 us/read; 20.08 M reads/minute).

=== Summary ===

Total reads processed:              29,365,374
Reads with adapters:                11,860,383 (40.4%)
Reads written (passing filters):    29,365,374 (100.0%)

Total basepairs processed: 2,759,986,014 bp
Quality-trimmed:               9,991,344 bp (0.4%)
Total written (filtered):  2,731,646,528 bp (99.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 11860383 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.0%
  C: 26.6%
  G: 23.4%
  T: 24.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8722235	7341343.5	0	8722235
2	2023854	1835335.9	0	2023854
3	770609	458834.0	0	770609
4	261942	114708.5	0	261942
5	8455	28677.1	0	8455
6	5495	7169.3	0	5495
7	1975	1792.3	0	1975
8	1063	448.1	0	1063
9	783	112.0	0	637 146
10	899	28.0	1	339 560
11	1117	7.0	1	386 731
12	898	1.8	1	320 578
13	1060	1.8	1	296 764
14	1366	1.8	1	226 1140
15	1438	1.8	1	244 1194
16	2338	1.8	1	526 1812
17	2299	1.8	1	628 1671
18	2072	1.8	1	548 1524
19	2104	1.8	1	527 1577
20	1162	1.8	1	314 848
21	1367	1.8	1	362 1005
22	1554	1.8	1	456 1098
23	1626	1.8	1	553 1073
24	1687	1.8	1	592 1095
25	1875	1.8	1	729 1146
26	2026	1.8	1	827 1199
27	1775	1.8	1	753 1022
28	2514	1.8	1	1198 1316
29	2249	1.8	1	1215 1034
30	1609	1.8	1	689 920
31	1902	1.8	1	840 1062
32	1657	1.8	1	971 686
33	1829	1.8	1	843 986
34	1916	1.8	1	978 938
35	1308	1.8	1	681 627
36	1213	1.8	1	571 642
37	1367	1.8	1	725 642
38	1077	1.8	1	502 575
39	887	1.8	1	451 436
40	1017	1.8	1	512 505
41	789	1.8	1	388 401
42	720	1.8	1	344 376
43	753	1.8	1	312 441
44	631	1.8	1	283 348
45	586	1.8	1	247 339
46	696	1.8	1	261 435
47	508	1.8	1	203 305
48	527	1.8	1	207 320
49	527	1.8	1	197 330
50	451	1.8	1	141 310
51	398	1.8	1	154 244
52	369	1.8	1	115 254
53	292	1.8	1	107 185
54	296	1.8	1	83 213
55	320	1.8	1	111 209
56	268	1.8	1	88 180
57	245	1.8	1	69 176
58	255	1.8	1	69 186
59	192	1.8	1	49 143
60	246	1.8	1	53 193
61	170	1.8	1	40 130
62	184	1.8	1	39 145
63	217	1.8	1	41 176
64	151	1.8	1	16 135
65	157	1.8	1	16 141
66	99	1.8	1	5 94
67	128	1.8	1	7 121
68	175	1.8	1	7 168
69	108	1.8	1	6 102
70	148	1.8	1	3 145
71	80	1.8	1	4 76
72	105	1.8	1	2 103
73	206	1.8	1	0 206
74	128	1.8	1	0 128
75	495	1.8	1	0 495
76	104	1.8	1	0 104
77	81	1.8	1	2 79
78	256	1.8	1	0 256
79	83	1.8	1	0 83
80	288	1.8	1	1 287
81	87	1.8	1	0 87
82	57	1.8	1	0 57
83	147	1.8	1	0 147
84	74	1.8	1	1 73
85	445	1.8	1	0 445
86	104	1.8	1	0 104
87	75	1.8	1	0 75
88	287	1.8	1	0 287
89	40	1.8	1	0 40
90	59	1.8	1	0 59
91	97	1.8	1	0 97
92	96	1.8	1	0 96
93	228	1.8	1	0 228
94	46	1.8	1	0 46
95	41	1.8	1	0 41
96	26	1.8	1	0 26
97	60	1.8	1	0 60
98	192	1.8	1	1 191
99	66	1.8	1	1 65
100	92	1.8	1	0 92
101	13	1.8	1	0 13


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007182_2.fastq
=============================================
29365374 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007182_1_trimmed.fq and SRR11007182_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007182_1_trimmed.fq<<	RENAMING TO:>>Regulatory_T_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007182_2_trimmed.fq<<	RENAMING TO:>>Regulatory_T_1004_R2_trimmed.fq<<
file_1: Regulatory_T_1004_R1_trimmed.fq, file_2: Regulatory_T_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Regulatory_T_1004_R1_trimmed.fq and Regulatory_T_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Regulatory_T_1004_val_1.fq
Writing validated paired-end Read 2 reads to Regulatory_T_1004_val_2.fq

Total number of sequences analysed: 29365374

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 8151 (0.03%)


  >>> Now running FastQC on the validated data Regulatory_T_1004_val_1.fq<<<

Started analysis of Regulatory_T_1004_val_1.fq
Approx 5% complete for Regulatory_T_1004_val_1.fq
Approx 10% complete for Regulatory_T_1004_val_1.fq
Approx 15% complete for Regulatory_T_1004_val_1.fq
Approx 20% complete for Regulatory_T_1004_val_1.fq
Approx 25% complete for Regulatory_T_1004_val_1.fq
Approx 30% complete for Regulatory_T_1004_val_1.fq
Approx 35% complete for Regulatory_T_1004_val_1.fq
Approx 40% complete for Regulatory_T_1004_val_1.fq
Approx 45% complete for Regulatory_T_1004_val_1.fq
Approx 50% complete for Regulatory_T_1004_val_1.fq
Approx 55% complete for Regulatory_T_1004_val_1.fq
Approx 60% complete for Regulatory_T_1004_val_1.fq
Approx 65% complete for Regulatory_T_1004_val_1.fq
Approx 70% complete for Regulatory_T_1004_val_1.fq
Approx 75% complete for Regulatory_T_1004_val_1.fq
Approx 80% complete for Regulatory_T_1004_val_1.fq
Approx 85% complete for Regulatory_T_1004_val_1.fq
Approx 90% complete for Regulatory_T_1004_val_1.fq
Approx 95% complete for Regulatory_T_1004_val_1.fq
Analysis complete for Regulatory_T_1004_val_1.fq

  >>> Now running FastQC on the validated data Regulatory_T_1004_val_2.fq<<<

Started analysis of Regulatory_T_1004_val_2.fq
Approx 5% complete for Regulatory_T_1004_val_2.fq
Approx 10% complete for Regulatory_T_1004_val_2.fq
Approx 15% complete for Regulatory_T_1004_val_2.fq
Approx 20% complete for Regulatory_T_1004_val_2.fq
Approx 25% complete for Regulatory_T_1004_val_2.fq
Approx 30% complete for Regulatory_T_1004_val_2.fq
Approx 35% complete for Regulatory_T_1004_val_2.fq
Approx 40% complete for Regulatory_T_1004_val_2.fq
Approx 45% complete for Regulatory_T_1004_val_2.fq
Approx 50% complete for Regulatory_T_1004_val_2.fq
Approx 55% complete for Regulatory_T_1004_val_2.fq
Approx 60% complete for Regulatory_T_1004_val_2.fq
Approx 65% complete for Regulatory_T_1004_val_2.fq
Approx 70% complete for Regulatory_T_1004_val_2.fq
Approx 75% complete for Regulatory_T_1004_val_2.fq
Approx 80% complete for Regulatory_T_1004_val_2.fq
Approx 85% complete for Regulatory_T_1004_val_2.fq
Approx 90% complete for Regulatory_T_1004_val_2.fq
Approx 95% complete for Regulatory_T_1004_val_2.fq
Analysis complete for Regulatory_T_1004_val_2.fq
Deleting both intermediate output files Regulatory_T_1004_R1_trimmed.fq and Regulatory_T_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mature_NK_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	193	CTGTCTCTTATA	1000000	0.02
Illumina	3	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 193). Second best hit was Illumina (count: 3)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007186_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007186_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 136.72 s (3 us/read; 19.86 M reads/minute).

=== Summary ===

Total reads processed:              45,263,682
Reads with adapters:                17,975,644 (39.7%)
Reads written (passing filters):    45,263,682 (100.0%)

Total basepairs processed: 4,227,318,200 bp
Quality-trimmed:               4,191,116 bp (0.1%)
Total written (filtered):  4,196,311,479 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17975644 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.9%
  C: 26.5%
  G: 22.6%
  T: 24.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13071986	11315920.5	0	13071986
2	3198929	2828980.1	0	3198929
3	1200257	707245.0	0	1200257
4	435575	176811.3	0	435575
5	10790	44202.8	0	10790
6	8702	11050.7	0	8702
7	2356	2762.7	0	2356
8	501	690.7	0	501
9	285	172.7	0	59 226
10	490	43.2	1	30 460
11	847	10.8	1	54 793
12	862	2.7	1	133 729
13	564	2.7	1	44 520
14	1490	2.7	1	115 1375
15	929	2.7	1	65 864
16	2406	2.7	1	491 1915
17	872	2.7	1	145 727
18	1159	2.7	1	189 970
19	931	2.7	1	183 748
20	757	2.7	1	147 610
21	852	2.7	1	152 700
22	579	2.7	1	55 524
23	1296	2.7	1	306 990
24	601	2.7	1	101 500
25	830	2.7	1	196 634
26	1148	2.7	1	246 902
27	1003	2.7	1	263 740
28	1252	2.7	1	385 867
29	1189	2.7	1	311 878
30	373	2.7	1	72 301
31	1270	2.7	1	243 1027
32	319	2.7	1	55 264
33	1053	2.7	1	239 814
34	954	2.7	1	187 767
35	386	2.7	1	88 298
36	649	2.7	1	93 556
37	679	2.7	1	143 536
38	664	2.7	1	107 557
39	590	2.7	1	149 441
40	695	2.7	1	189 506
41	677	2.7	1	105 572
42	659	2.7	1	130 529
43	871	2.7	1	220 651
44	527	2.7	1	86 441
45	540	2.7	1	93 447
46	369	2.7	1	50 319
47	489	2.7	1	71 418
48	336	2.7	1	44 292
49	345	2.7	1	46 299
50	625	2.7	1	96 529
51	422	2.7	1	74 348
52	341	2.7	1	34 307
53	283	2.7	1	41 242
54	364	2.7	1	37 327
55	346	2.7	1	23 323
56	245	2.7	1	31 214
57	294	2.7	1	23 271
58	365	2.7	1	36 329
59	258	2.7	1	34 224
60	312	2.7	1	22 290
61	244	2.7	1	29 215
62	214	2.7	1	10 204
63	304	2.7	1	19 285
64	183	2.7	1	9 174
65	217	2.7	1	14 203
66	182	2.7	1	6 176
67	234	2.7	1	5 229
68	370	2.7	1	5 365
69	207	2.7	1	3 204
70	227	2.7	1	1 226
71	116	2.7	1	1 115
72	171	2.7	1	1 170
73	413	2.7	1	2 411
74	168	2.7	1	0 168
75	818	2.7	1	0 818
76	152	2.7	1	0 152
77	157	2.7	1	0 157
78	436	2.7	1	0 436
79	157	2.7	1	1 156
80	532	2.7	1	1 531
81	143	2.7	1	0 143
82	117	2.7	1	0 117
83	330	2.7	1	2 328
84	130	2.7	1	1 129
85	745	2.7	1	1 744
86	161	2.7	1	1 160
87	131	2.7	1	1 130
88	502	2.7	1	1 501
89	114	2.7	1	1 113
90	118	2.7	1	0 118
91	270	2.7	1	0 270
92	152	2.7	1	0 152
93	427	2.7	1	0 427
94	61	2.7	1	0 61
95	100	2.7	1	0 100
96	43	2.7	1	0 43
97	133	2.7	1	1 132
98	422	2.7	1	0 422
99	106	2.7	1	0 106
100	160	2.7	1	0 160
101	39	2.7	1	0 39


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_1.fastq
=============================================
45263682 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007186_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007186_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 131.17 s (3 us/read; 20.70 M reads/minute).

=== Summary ===

Total reads processed:              45,263,682
Reads with adapters:                18,088,524 (40.0%)
Reads written (passing filters):    45,263,682 (100.0%)

Total basepairs processed: 4,233,927,633 bp
Quality-trimmed:              20,064,316 bp (0.5%)
Total written (filtered):  4,184,625,083 bp (98.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18088524 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.8%
  C: 26.3%
  G: 22.5%
  T: 24.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13085802	11315920.5	0	13085802
2	3207994	2828980.1	0	3207994
3	1215950	707245.0	0	1215950
4	418255	176811.3	0	418255
5	14027	44202.8	0	14027
6	10305	11050.7	0	10305
7	4038	2762.7	0	4038
8	2053	690.7	0	2053
9	1534	172.7	0	1197 337
10	1725	43.2	1	623 1102
11	2364	10.8	1	944 1420
12	2164	2.7	1	867 1297
13	2393	2.7	1	813 1580
14	2701	2.7	1	507 2194
15	2718	2.7	1	515 2203
16	4469	2.7	1	936 3533
17	4385	2.7	1	1150 3235
18	3908	2.7	1	996 2912
19	3975	2.7	1	966 3009
20	2163	2.7	1	584 1579
21	2753	2.7	1	677 2076
22	3203	2.7	1	841 2362
23	3108	2.7	1	1017 2091
24	3308	2.7	1	1087 2221
25	3688	2.7	1	1379 2309
26	3876	2.7	1	1506 2370
27	3693	2.7	1	1517 2176
28	4759	2.7	1	2181 2578
29	4617	2.7	1	2355 2262
30	3327	2.7	1	1413 1914
31	3894	2.7	1	1681 2213
32	3287	2.7	1	1750 1537
33	3492	2.7	1	1635 1857
34	3761	2.7	1	1763 1998
35	2997	2.7	1	1538 1459
36	2806	2.7	1	1238 1568
37	2350	2.7	1	1185 1165
38	2578	2.7	1	1127 1451
39	2501	2.7	1	1184 1317
40	2043	2.7	1	995 1048
41	2017	2.7	1	864 1153
42	1731	2.7	1	716 1015
43	1608	2.7	1	732 876
44	1539	2.7	1	553 986
45	1316	2.7	1	549 767
46	1144	2.7	1	463 681
47	1087	2.7	1	436 651
48	970	2.7	1	357 613
49	947	2.7	1	361 586
50	928	2.7	1	285 643
51	818	2.7	1	305 513
52	829	2.7	1	259 570
53	649	2.7	1	243 406
54	586	2.7	1	197 389
55	676	2.7	1	172 504
56	472	2.7	1	150 322
57	497	2.7	1	130 367
58	536	2.7	1	125 411
59	418	2.7	1	93 325
60	492	2.7	1	80 412
61	309	2.7	1	69 240
62	350	2.7	1	65 285
63	399	2.7	1	56 343
64	275	2.7	1	54 221
65	287	2.7	1	37 250
66	252	2.7	1	24 228
67	249	2.7	1	7 242
68	347	2.7	1	11 336
69	220	2.7	1	8 212
70	251	2.7	1	12 239
71	134	2.7	1	8 126
72	173	2.7	1	0 173
73	331	2.7	1	1 330
74	188	2.7	1	1 187
75	783	2.7	1	3 780
76	159	2.7	1	2 157
77	148	2.7	1	0 148
78	480	2.7	1	0 480
79	144	2.7	1	0 144
80	455	2.7	1	0 455
81	146	2.7	1	0 146
82	145	2.7	1	0 145
83	345	2.7	1	0 345
84	160	2.7	1	1 159
85	666	2.7	1	0 666
86	165	2.7	1	1 164
87	133	2.7	1	0 133
88	474	2.7	1	4 470
89	122	2.7	1	1 121
90	107	2.7	1	0 107
91	265	2.7	1	0 265
92	180	2.7	1	0 180
93	440	2.7	1	1 439
94	64	2.7	1	1 63
95	91	2.7	1	0 91
96	45	2.7	1	0 45
97	144	2.7	1	0 144
98	392	2.7	1	1 391
99	123	2.7	1	0 123
100	128	2.7	1	0 128
101	31	2.7	1	0 31


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007186_2.fastq
=============================================
45263682 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007186_1_trimmed.fq and SRR11007186_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007186_1_trimmed.fq<<	RENAMING TO:>>Mature_NK_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007186_2_trimmed.fq<<	RENAMING TO:>>Mature_NK_1004_R2_trimmed.fq<<
file_1: Mature_NK_1004_R1_trimmed.fq, file_2: Mature_NK_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Mature_NK_1004_R1_trimmed.fq and Mature_NK_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Mature_NK_1004_val_1.fq
Writing validated paired-end Read 2 reads to Mature_NK_1004_val_2.fq

Total number of sequences analysed: 45263682

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 15126 (0.03%)


  >>> Now running FastQC on the validated data Mature_NK_1004_val_1.fq<<<

Started analysis of Mature_NK_1004_val_1.fq
Approx 5% complete for Mature_NK_1004_val_1.fq
Approx 10% complete for Mature_NK_1004_val_1.fq
Approx 15% complete for Mature_NK_1004_val_1.fq
Approx 20% complete for Mature_NK_1004_val_1.fq
Approx 25% complete for Mature_NK_1004_val_1.fq
Approx 30% complete for Mature_NK_1004_val_1.fq
Approx 35% complete for Mature_NK_1004_val_1.fq
Approx 40% complete for Mature_NK_1004_val_1.fq
Approx 45% complete for Mature_NK_1004_val_1.fq
Approx 50% complete for Mature_NK_1004_val_1.fq
Approx 55% complete for Mature_NK_1004_val_1.fq
Approx 60% complete for Mature_NK_1004_val_1.fq
Approx 65% complete for Mature_NK_1004_val_1.fq
Approx 70% complete for Mature_NK_1004_val_1.fq
Approx 75% complete for Mature_NK_1004_val_1.fq
Approx 80% complete for Mature_NK_1004_val_1.fq
Approx 85% complete for Mature_NK_1004_val_1.fq
Approx 90% complete for Mature_NK_1004_val_1.fq
Approx 95% complete for Mature_NK_1004_val_1.fq
Analysis complete for Mature_NK_1004_val_1.fq

  >>> Now running FastQC on the validated data Mature_NK_1004_val_2.fq<<<

Started analysis of Mature_NK_1004_val_2.fq
Approx 5% complete for Mature_NK_1004_val_2.fq
Approx 10% complete for Mature_NK_1004_val_2.fq
Approx 15% complete for Mature_NK_1004_val_2.fq
Approx 20% complete for Mature_NK_1004_val_2.fq
Approx 25% complete for Mature_NK_1004_val_2.fq
Approx 30% complete for Mature_NK_1004_val_2.fq
Approx 35% complete for Mature_NK_1004_val_2.fq
Approx 40% complete for Mature_NK_1004_val_2.fq
Approx 45% complete for Mature_NK_1004_val_2.fq
Approx 50% complete for Mature_NK_1004_val_2.fq
Approx 55% complete for Mature_NK_1004_val_2.fq
Approx 60% complete for Mature_NK_1004_val_2.fq
Approx 65% complete for Mature_NK_1004_val_2.fq
Approx 70% complete for Mature_NK_1004_val_2.fq
Approx 75% complete for Mature_NK_1004_val_2.fq
Approx 80% complete for Mature_NK_1004_val_2.fq
Approx 85% complete for Mature_NK_1004_val_2.fq
Approx 90% complete for Mature_NK_1004_val_2.fq
Approx 95% complete for Mature_NK_1004_val_2.fq
Analysis complete for Mature_NK_1004_val_2.fq
Deleting both intermediate output files Mature_NK_1004_R1_trimmed.fq and Mature_NK_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Monocytes_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	169	CTGTCTCTTATA	1000000	0.02
smallRNA	5	TGGAATTCTCGG	1000000	0.00
Illumina	2	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 169). Second best hit was smallRNA (count: 5)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007188_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007188_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 105.70 s (3 us/read; 20.65 M reads/minute).

=== Summary ===

Total reads processed:              36,377,838
Reads with adapters:                14,365,442 (39.5%)
Reads written (passing filters):    36,377,838 (100.0%)

Total basepairs processed: 3,408,082,630 bp
Quality-trimmed:               3,061,144 bp (0.1%)
Total written (filtered):  3,383,988,036 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 14365442 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 24.6%
  C: 29.9%
  G: 22.8%
  T: 22.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	10585792	9094459.5	0	10585792
2	2383643	2273614.9	0	2383643
3	1001001	568403.7	0	1001001
4	322756	142100.9	0	322756
5	10252	35525.2	0	10252
6	25441	8881.3	0	25441
7	5826	2220.3	0	5826
8	1014	555.1	0	1014
9	281	138.8	0	40 241
10	383	34.7	1	23 360
11	518	8.7	1	28 490
12	538	2.2	1	88 450
13	336	2.2	1	39 297
14	867	2.2	1	114 753
15	669	2.2	1	46 623
16	1641	2.2	1	409 1232
17	701	2.2	1	133 568
18	914	2.2	1	152 762
19	715	2.2	1	141 574
20	502	2.2	1	110 392
21	572	2.2	1	120 452
22	363	2.2	1	40 323
23	991	2.2	1	243 748
24	323	2.2	1	70 253
25	641	2.2	1	186 455
26	811	2.2	1	212 599
27	631	2.2	1	172 459
28	883	2.2	1	255 628
29	938	2.2	1	260 678
30	206	2.2	1	35 171
31	759	2.2	1	150 609
32	182	2.2	1	36 146
33	745	2.2	1	207 538
34	628	2.2	1	161 467
35	367	2.2	1	93 274
36	395	2.2	1	74 321
37	294	2.2	1	41 253
38	507	2.2	1	122 385
39	435	2.2	1	112 323
40	354	2.2	1	81 273
41	289	2.2	1	38 251
42	373	2.2	1	80 293
43	642	2.2	1	171 471
44	398	2.2	1	85 313
45	277	2.2	1	57 220
46	203	2.2	1	44 159
47	310	2.2	1	58 252
48	240	2.2	1	46 194
49	193	2.2	1	28 165
50	319	2.2	1	59 260
51	267	2.2	1	60 207
52	214	2.2	1	30 184
53	182	2.2	1	18 164
54	240	2.2	1	46 194
55	179	2.2	1	23 156
56	134	2.2	1	16 118
57	199	2.2	1	22 177
58	223	2.2	1	22 201
59	150	2.2	1	22 128
60	185	2.2	1	16 169
61	128	2.2	1	19 109
62	129	2.2	1	20 109
63	191	2.2	1	15 176
64	114	2.2	1	11 103
65	157	2.2	1	12 145
66	133	2.2	1	3 130
67	125	2.2	1	3 122
68	193	2.2	1	7 186
69	109	2.2	1	2 107
70	129	2.2	1	0 129
71	76	2.2	1	2 74
72	94	2.2	1	0 94
73	207	2.2	1	0 207
74	100	2.2	1	0 100
75	430	2.2	1	1 429
76	74	2.2	1	0 74
77	103	2.2	1	1 102
78	271	2.2	1	1 270
79	73	2.2	1	0 73
80	214	2.2	1	0 214
81	59	2.2	1	1 58
82	78	2.2	1	0 78
83	206	2.2	1	2 204
84	70	2.2	1	1 69
85	311	2.2	1	0 311
86	94	2.2	1	0 94
87	75	2.2	1	0 75
88	229	2.2	1	0 229
89	75	2.2	1	0 75
90	51	2.2	1	0 51
91	134	2.2	1	1 133
92	104	2.2	1	1 103
93	291	2.2	1	1 290
94	56	2.2	1	0 56
95	55	2.2	1	1 54
96	35	2.2	1	0 35
97	72	2.2	1	0 72
98	219	2.2	1	0 219
99	69	2.2	1	0 69
100	55	2.2	1	0 55
101	22	2.2	1	0 22


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_1.fastq
=============================================
36377838 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007188_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007188_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 107.34 s (3 us/read; 20.33 M reads/minute).

=== Summary ===

Total reads processed:              36,377,838
Reads with adapters:                14,442,008 (39.7%)
Reads written (passing filters):    36,377,838 (100.0%)

Total basepairs processed: 3,413,864,262 bp
Quality-trimmed:              17,394,185 bp (0.5%)
Total written (filtered):  3,373,442,917 bp (98.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 14442008 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 24.6%
  C: 29.5%
  G: 22.7%
  T: 23.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	10589163	9094459.5	0	10589163
2	2386605	2273614.9	0	2386605
3	1011069	568403.7	0	1011069
4	307039	142100.9	0	307039
5	13293	35525.2	0	13293
6	26202	8881.3	0	26202
7	7186	2220.3	0	7186
8	2521	555.1	0	2521
9	1347	138.8	0	939 408
10	1389	34.7	1	498 891
11	1740	8.7	1	698 1042
12	1734	2.2	1	698 1036
13	1834	2.2	1	641 1193
14	1881	2.2	1	363 1518
15	2385	2.2	1	421 1964
16	3706	2.2	1	799 2907
17	3482	2.2	1	856 2626
18	3223	2.2	1	744 2479
19	3119	2.2	1	791 2328
20	1574	2.2	1	436 1138
21	2292	2.2	1	599 1693
22	2484	2.2	1	671 1813
23	2274	2.2	1	768 1506
24	2571	2.2	1	884 1687
25	3107	2.2	1	1158 1949
26	3148	2.2	1	1286 1862
27	2773	2.2	1	1126 1647
28	3853	2.2	1	1733 2120
29	3613	2.2	1	1912 1701
30	2532	2.2	1	1047 1485
31	2959	2.2	1	1333 1626
32	2494	2.2	1	1288 1206
33	2671	2.2	1	1275 1396
34	2930	2.2	1	1402 1528
35	2163	2.2	1	1116 1047
36	2106	2.2	1	945 1161
37	1846	2.2	1	1009 837
38	2061	2.2	1	935 1126
39	2026	2.2	1	928 1098
40	1484	2.2	1	713 771
41	1460	2.2	1	632 828
42	1241	2.2	1	565 676
43	1247	2.2	1	556 691
44	1195	2.2	1	531 664
45	947	2.2	1	405 542
46	907	2.2	1	385 522
47	748	2.2	1	294 454
48	698	2.2	1	274 424
49	727	2.2	1	280 447
50	611	2.2	1	221 390
51	564	2.2	1	226 338
52	555	2.2	1	207 348
53	427	2.2	1	154 273
54	405	2.2	1	145 260
55	470	2.2	1	144 326
56	323	2.2	1	125 198
57	350	2.2	1	109 241
58	338	2.2	1	92 246
59	287	2.2	1	89 198
60	342	2.2	1	67 275
61	267	2.2	1	68 199
62	245	2.2	1	69 176
63	264	2.2	1	68 196
64	160	2.2	1	38 122
65	173	2.2	1	28 145
66	131	2.2	1	14 117
67	165	2.2	1	15 150
68	216	2.2	1	6 210
69	120	2.2	1	10 110
70	151	2.2	1	4 147
71	86	2.2	1	11 75
72	111	2.2	1	2 109
73	223	2.2	1	0 223
74	108	2.2	1	0 108
75	383	2.2	1	0 383
76	69	2.2	1	0 69
77	122	2.2	1	0 122
78	337	2.2	1	0 337
79	83	2.2	1	0 83
80	212	2.2	1	0 212
81	97	2.2	1	0 97
82	88	2.2	1	0 88
83	252	2.2	1	1 251
84	95	2.2	1	2 93
85	269	2.2	1	1 268
86	82	2.2	1	0 82
87	79	2.2	1	1 78
88	221	2.2	1	1 220
89	88	2.2	1	0 88
90	62	2.2	1	0 62
91	187	2.2	1	0 187
92	127	2.2	1	1 126
93	378	2.2	1	0 378
94	31	2.2	1	0 31
95	52	2.2	1	1 51
96	36	2.2	1	0 36
97	91	2.2	1	0 91
98	230	2.2	1	2 228
99	84	2.2	1	0 84
100	66	2.2	1	0 66
101	46	2.2	1	0 46


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007188_2.fastq
=============================================
36377838 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007188_1_trimmed.fq and SRR11007188_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007188_1_trimmed.fq<<	RENAMING TO:>>Monocytes_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007188_2_trimmed.fq<<	RENAMING TO:>>Monocytes_1004_R2_trimmed.fq<<
file_1: Monocytes_1004_R1_trimmed.fq, file_2: Monocytes_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Monocytes_1004_R1_trimmed.fq and Monocytes_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Monocytes_1004_val_1.fq
Writing validated paired-end Read 2 reads to Monocytes_1004_val_2.fq

Total number of sequences analysed: 36377838

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 10214 (0.03%)


  >>> Now running FastQC on the validated data Monocytes_1004_val_1.fq<<<

Started analysis of Monocytes_1004_val_1.fq
Approx 5% complete for Monocytes_1004_val_1.fq
Approx 10% complete for Monocytes_1004_val_1.fq
Approx 15% complete for Monocytes_1004_val_1.fq
Approx 20% complete for Monocytes_1004_val_1.fq
Approx 25% complete for Monocytes_1004_val_1.fq
Approx 30% complete for Monocytes_1004_val_1.fq
Approx 35% complete for Monocytes_1004_val_1.fq
Approx 40% complete for Monocytes_1004_val_1.fq
Approx 45% complete for Monocytes_1004_val_1.fq
Approx 50% complete for Monocytes_1004_val_1.fq
Approx 55% complete for Monocytes_1004_val_1.fq
Approx 60% complete for Monocytes_1004_val_1.fq
Approx 65% complete for Monocytes_1004_val_1.fq
Approx 70% complete for Monocytes_1004_val_1.fq
Approx 75% complete for Monocytes_1004_val_1.fq
Approx 80% complete for Monocytes_1004_val_1.fq
Approx 85% complete for Monocytes_1004_val_1.fq
Approx 90% complete for Monocytes_1004_val_1.fq
Approx 95% complete for Monocytes_1004_val_1.fq
Analysis complete for Monocytes_1004_val_1.fq

  >>> Now running FastQC on the validated data Monocytes_1004_val_2.fq<<<

Started analysis of Monocytes_1004_val_2.fq
Approx 5% complete for Monocytes_1004_val_2.fq
Approx 10% complete for Monocytes_1004_val_2.fq
Approx 15% complete for Monocytes_1004_val_2.fq
Approx 20% complete for Monocytes_1004_val_2.fq
Approx 25% complete for Monocytes_1004_val_2.fq
Approx 30% complete for Monocytes_1004_val_2.fq
Approx 35% complete for Monocytes_1004_val_2.fq
Approx 40% complete for Monocytes_1004_val_2.fq
Approx 45% complete for Monocytes_1004_val_2.fq
Approx 50% complete for Monocytes_1004_val_2.fq
Approx 55% complete for Monocytes_1004_val_2.fq
Approx 60% complete for Monocytes_1004_val_2.fq
Approx 65% complete for Monocytes_1004_val_2.fq
Approx 70% complete for Monocytes_1004_val_2.fq
Approx 75% complete for Monocytes_1004_val_2.fq
Approx 80% complete for Monocytes_1004_val_2.fq
Approx 85% complete for Monocytes_1004_val_2.fq
Approx 90% complete for Monocytes_1004_val_2.fq
Approx 95% complete for Monocytes_1004_val_2.fq
Analysis complete for Monocytes_1004_val_2.fq
Deleting both intermediate output files Monocytes_1004_R1_trimmed.fq and Monocytes_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Myeloid_DCs_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	270	CTGTCTCTTATA	1000000	0.03
Illumina	25	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 270). Second best hit was Illumina (count: 25)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007190_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR11007190_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 161.67 s (3 us/read; 21.01 M reads/minute).

=== Summary ===

Total reads processed:              56,611,062
Reads with adapters:                23,113,754 (40.8%)
Reads written (passing filters):    56,611,062 (100.0%)

Total basepairs processed: 5,068,311,979 bp
Quality-trimmed:               5,535,536 bp (0.1%)
Total written (filtered):  5,028,568,153 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 23113754 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.4%
  C: 27.1%
  G: 21.8%
  T: 22.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	17340363	14152765.5	0	17340363
2	3581530	3538191.4	0	3581530
3	1488209	884547.8	0	1488209
4	569296	221137.0	0	569296
5	18901	55284.2	0	18901
6	33121	13821.1	0	33121
7	7787	3455.3	0	7787
8	1396	863.8	0	1396
9	530	216.0	0	112 418
10	887	54.0	1	44 843
11	1504	13.5	1	82 1422
12	1337	3.4	1	245 1092
13	971	3.4	1	85 886
14	2149	3.4	1	247 1902
15	1535	3.4	1	102 1433
16	4365	3.4	1	978 3387
17	1384	3.4	1	275 1109
18	2070	3.4	1	385 1685
19	1503	3.4	1	342 1161
20	1110	3.4	1	261 849
21	1494	3.4	1	330 1164
22	707	3.4	1	77 630
23	2326	3.4	1	603 1723
24	849	3.4	1	168 681
25	1593	3.4	1	425 1168
26	2155	3.4	1	572 1583
27	1806	3.4	1	496 1310
28	2320	3.4	1	710 1610
29	2506	3.4	1	679 1827
30	432	3.4	1	100 332
31	2012	3.4	1	478 1534
32	420	3.4	1	93 327
33	1841	3.4	1	470 1371
34	1274	3.4	1	307 967
35	900	3.4	1	231 669
36	1978	3.4	1	455 1523
37	2322	3.4	1	587 1735
38	1444	3.4	1	363 1081
39	934	3.4	1	184 750
40	1050	3.4	1	264 786
41	1136	3.4	1	223 913
42	1193	3.4	1	287 906
43	2597	3.4	1	721 1876
44	909	3.4	1	220 689
45	845	3.4	1	179 666
46	441	3.4	1	102 339
47	775	3.4	1	125 650
48	650	3.4	1	170 480
49	614	3.4	1	109 505
50	899	3.4	1	143 756
51	704	3.4	1	155 549
52	484	3.4	1	76 408
53	494	3.4	1	98 396
54	698	3.4	1	105 593
55	396	3.4	1	65 331
56	383	3.4	1	59 324
57	420	3.4	1	51 369
58	420	3.4	1	50 370
59	342	3.4	1	62 280
60	473	3.4	1	42 431
61	273	3.4	1	48 225
62	265	3.4	1	30 235
63	307	3.4	1	36 271
64	372	3.4	1	28 344
65	238	3.4	1	23 215
66	115	3.4	1	5 110
67	289	3.4	1	9 280
68	239	3.4	1	11 228
69	185	3.4	1	5 180
70	202	3.4	1	7 195
71	115	3.4	1	3 112
72	151	3.4	1	2 149
73	212	3.4	1	3 209
74	165	3.4	1	1 164
75	496	3.4	1	1 495
76	127	3.4	1	1 126
77	153	3.4	1	3 150
78	321	3.4	1	4 317
79	140	3.4	1	1 139
80	351	3.4	1	0 351
81	117	3.4	1	4 113
82	185	3.4	1	0 185
83	347	3.4	1	1 346
84	122	3.4	1	2 120
85	422	3.4	1	0 422
86	99	3.4	1	2 97
87	105	3.4	1	0 105
88	331	3.4	1	10 321
89	65	3.4	1	1 64
90	104	3.4	1	0 104
91	149	3.4	1	0 149
92	319	3.4	1	2 317
93	587	3.4	1	4 583
94	64	3.4	1	0 64
95	77	3.4	1	0 77
96	26	3.4	1	0 26
97	92	3.4	1	0 92
98	315	3.4	1	7 308
99	154	3.4	1	0 154
100	139	3.4	1	1 138
101	35	3.4	1	0 35


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_1.fastq
=============================================
56611062 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR11007190_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR11007190_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 169.25 s (3 us/read; 20.07 M reads/minute).

=== Summary ===

Total reads processed:              56,611,062
Reads with adapters:                23,142,676 (40.9%)
Reads written (passing filters):    56,611,062 (100.0%)

Total basepairs processed: 5,078,395,805 bp
Quality-trimmed:              23,808,241 bp (0.5%)
Total written (filtered):  5,016,908,018 bp (98.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 23142676 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.2%
  C: 26.9%
  G: 21.8%
  T: 23.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	17250439	14152765.5	0	17250439
2	3581474	3538191.4	0	3581474
3	1487190	884547.8	0	1487190
4	557898	221137.0	0	557898
5	22552	55284.2	0	22552
6	33913	13821.1	0	33913
7	9550	3455.3	0	9550
8	3403	863.8	0	3403
9	2404	216.0	0	1813 591
10	3123	54.0	1	1355 1768
11	3314	13.5	1	1228 2086
12	3360	3.4	1	1262 2098
13	3333	3.4	1	1012 2321
14	4102	3.4	1	749 3353
15	4233	3.4	1	744 3489
16	7535	3.4	1	1793 5742
17	6650	3.4	1	1898 4752
18	6016	3.4	1	1629 4387
19	6067	3.4	1	1628 4439
20	3093	3.4	1	887 2206
21	4192	3.4	1	1162 3030
22	4827	3.4	1	1465 3362
23	4460	3.4	1	1600 2860
24	5054	3.4	1	1772 3282
25	5688	3.4	1	2200 3488
26	5760	3.4	1	2513 3247
27	5514	3.4	1	2340 3174
28	7721	3.4	1	3667 4054
29	6825	3.4	1	3835 2990
30	4925	3.4	1	2208 2717
31	5850	3.4	1	2618 3232
32	5041	3.4	1	2892 2149
33	5228	3.4	1	2549 2679
34	6033	3.4	1	3037 2996
35	4516	3.4	1	2295 2221
36	3839	3.4	1	1940 1899
37	4458	3.4	1	2253 2205
38	4692	3.4	1	2289 2403
39	3787	3.4	1	1896 1891
40	2859	3.4	1	1497 1362
41	3002	3.4	1	1348 1654
42	2431	3.4	1	1184 1247
43	2554	3.4	1	1188 1366
44	2081	3.4	1	973 1108
45	2184	3.4	1	933 1251
46	2305	3.4	1	956 1349
47	1660	3.4	1	758 902
48	1751	3.4	1	758 993
49	1838	3.4	1	733 1105
50	1523	3.4	1	570 953
51	1418	3.4	1	605 813
52	1422	3.4	1	514 908
53	1194	3.4	1	526 668
54	1164	3.4	1	391 773
55	1034	3.4	1	395 639
56	840	3.4	1	321 519
57	901	3.4	1	308 593
58	842	3.4	1	279 563
59	678	3.4	1	240 438
60	817	3.4	1	235 582
61	565	3.4	1	190 375
62	586	3.4	1	178 408
63	579	3.4	1	162 417
64	483	3.4	1	108 375
65	334	3.4	1	77 257
66	232	3.4	1	45 187
67	282	3.4	1	24 258
68	303	3.4	1	28 275
69	205	3.4	1	24 181
70	227	3.4	1	27 200
71	151	3.4	1	14 137
72	182	3.4	1	3 179
73	205	3.4	1	0 205
74	165	3.4	1	0 165
75	415	3.4	1	0 415
76	105	3.4	1	1 104
77	147	3.4	1	2 145
78	405	3.4	1	1 404
79	121	3.4	1	2 119
80	395	3.4	1	2 393
81	133	3.4	1	1 132
82	231	3.4	1	0 231
83	362	3.4	1	1 361
84	121	3.4	1	0 121
85	399	3.4	1	1 398
86	90	3.4	1	1 89
87	142	3.4	1	2 140
88	255	3.4	1	4 251
89	103	3.4	1	0 103
90	91	3.4	1	3 88
91	185	3.4	1	0 185
92	321	3.4	1	2 319
93	638	3.4	1	4 634
94	67	3.4	1	0 67
95	69	3.4	1	0 69
96	41	3.4	1	0 41
97	117	3.4	1	0 117
98	334	3.4	1	9 325
99	144	3.4	1	0 144
100	154	3.4	1	0 154
101	35	3.4	1	0 35


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR11007190_2.fastq
=============================================
56611062 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR11007190_1_trimmed.fq and SRR11007190_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR11007190_1_trimmed.fq<<	RENAMING TO:>>Myeloid_DCs_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR11007190_2_trimmed.fq<<	RENAMING TO:>>Myeloid_DCs_1004_R2_trimmed.fq<<
file_1: Myeloid_DCs_1004_R1_trimmed.fq, file_2: Myeloid_DCs_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Myeloid_DCs_1004_R1_trimmed.fq and Myeloid_DCs_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Myeloid_DCs_1004_val_1.fq
Writing validated paired-end Read 2 reads to Myeloid_DCs_1004_val_2.fq

Total number of sequences analysed: 56611062

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 17060 (0.03%)


  >>> Now running FastQC on the validated data Myeloid_DCs_1004_val_1.fq<<<

Started analysis of Myeloid_DCs_1004_val_1.fq
Approx 5% complete for Myeloid_DCs_1004_val_1.fq
Approx 10% complete for Myeloid_DCs_1004_val_1.fq
Approx 15% complete for Myeloid_DCs_1004_val_1.fq
Approx 20% complete for Myeloid_DCs_1004_val_1.fq
Approx 25% complete for Myeloid_DCs_1004_val_1.fq
Approx 30% complete for Myeloid_DCs_1004_val_1.fq
Approx 35% complete for Myeloid_DCs_1004_val_1.fq
Approx 40% complete for Myeloid_DCs_1004_val_1.fq
Approx 45% complete for Myeloid_DCs_1004_val_1.fq
Approx 50% complete for Myeloid_DCs_1004_val_1.fq
Approx 55% complete for Myeloid_DCs_1004_val_1.fq
Approx 60% complete for Myeloid_DCs_1004_val_1.fq
Approx 65% complete for Myeloid_DCs_1004_val_1.fq
Approx 70% complete for Myeloid_DCs_1004_val_1.fq
Approx 75% complete for Myeloid_DCs_1004_val_1.fq
Approx 80% complete for Myeloid_DCs_1004_val_1.fq
Approx 85% complete for Myeloid_DCs_1004_val_1.fq
Approx 90% complete for Myeloid_DCs_1004_val_1.fq
Approx 95% complete for Myeloid_DCs_1004_val_1.fq
Approx 100% complete for Myeloid_DCs_1004_val_1.fq
Analysis complete for Myeloid_DCs_1004_val_1.fq

  >>> Now running FastQC on the validated data Myeloid_DCs_1004_val_2.fq<<<

Started analysis of Myeloid_DCs_1004_val_2.fq
Approx 5% complete for Myeloid_DCs_1004_val_2.fq
Approx 10% complete for Myeloid_DCs_1004_val_2.fq
Approx 15% complete for Myeloid_DCs_1004_val_2.fq
Approx 20% complete for Myeloid_DCs_1004_val_2.fq
Approx 25% complete for Myeloid_DCs_1004_val_2.fq
Approx 30% complete for Myeloid_DCs_1004_val_2.fq
Approx 35% complete for Myeloid_DCs_1004_val_2.fq
Approx 40% complete for Myeloid_DCs_1004_val_2.fq
Approx 45% complete for Myeloid_DCs_1004_val_2.fq
Approx 50% complete for Myeloid_DCs_1004_val_2.fq
Approx 55% complete for Myeloid_DCs_1004_val_2.fq
Approx 60% complete for Myeloid_DCs_1004_val_2.fq
Approx 65% complete for Myeloid_DCs_1004_val_2.fq
Approx 70% complete for Myeloid_DCs_1004_val_2.fq
Approx 75% complete for Myeloid_DCs_1004_val_2.fq
Approx 80% complete for Myeloid_DCs_1004_val_2.fq
Approx 85% complete for Myeloid_DCs_1004_val_2.fq
Approx 90% complete for Myeloid_DCs_1004_val_2.fq
Approx 95% complete for Myeloid_DCs_1004_val_2.fq
Approx 100% complete for Myeloid_DCs_1004_val_2.fq
Analysis complete for Myeloid_DCs_1004_val_2.fq
Deleting both intermediate output files Myeloid_DCs_1004_R1_trimmed.fq and Myeloid_DCs_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Bulk_B_1001<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	59	CTGTCTCTTATA	1000000	0.01
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 59). Second best hit was smallRNA (count: 0)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647654_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR7647654_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 110.45 s (3 us/read; 20.31 M reads/minute).

=== Summary ===

Total reads processed:              37,377,639
Reads with adapters:                16,264,513 (43.5%)
Reads written (passing filters):    37,377,639 (100.0%)

Total basepairs processed: 3,648,902,601 bp
Quality-trimmed:               2,497,935 bp (0.1%)
Total written (filtered):  3,622,952,874 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 16264513 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.8%
  C: 30.3%
  G: 26.7%
  T: 22.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11723278	9344409.8	0	11723278
2	2908446	2336102.4	0	2908446
3	1199288	584025.6	0	1199288
4	403774	146006.4	0	403774
5	8524	36501.6	0	8524
6	5189	9125.4	0	5189
7	1212	2281.4	0	1212
8	278	570.3	0	278
9	88	142.6	0	10 78
10	271	35.6	1	8 263
11	224	8.9	1	2 222
12	223	2.2	1	15 208
13	220	2.2	1	5 215
14	406	2.2	1	42 364
15	358	2.2	1	12 346
16	833	2.2	1	150 683
17	302	2.2	1	28 274
18	614	2.2	1	90 524
19	369	2.2	1	60 309
20	231	2.2	1	28 203
21	342	2.2	1	62 280
22	124	2.2	1	19 105
23	386	2.2	1	82 304
24	165	2.2	1	23 142
25	273	2.2	1	50 223
26	346	2.2	1	70 276
27	309	2.2	1	60 249
28	315	2.2	1	59 256
29	361	2.2	1	71 290
30	159	2.2	1	12 147
31	217	2.2	1	37 180
32	92	2.2	1	13 79
33	222	2.2	1	29 193
34	199	2.2	1	17 182
35	180	2.2	1	19 161
36	169	2.2	1	26 143
37	140	2.2	1	14 126
38	144	2.2	1	17 127
39	132	2.2	1	9 123
40	101	2.2	1	8 93
41	127	2.2	1	11 116
42	162	2.2	1	7 155
43	127	2.2	1	19 108
44	85	2.2	1	4 81
45	102	2.2	1	2 100
46	85	2.2	1	3 82
47	118	2.2	1	5 113
48	94	2.2	1	2 92
49	48	2.2	1	1 47
50	106	2.2	1	2 104
51	87	2.2	1	1 86
52	78	2.2	1	2 76
53	90	2.2	1	1 89
54	107	2.2	1	0 107
55	72	2.2	1	0 72
56	81	2.2	1	2 79
57	70	2.2	1	0 70
58	84	2.2	1	0 84
59	79	2.2	1	1 78
60	81	2.2	1	0 81
61	86	2.2	1	1 85
62	94	2.2	1	2 92
63	138	2.2	1	1 137
64	111	2.2	1	2 109
65	83	2.2	1	0 83
66	76	2.2	1	2 74
67	56	2.2	1	1 55
68	134	2.2	1	1 133
69	99	2.2	1	1 98
70	150	2.2	1	1 149
71	68	2.2	1	4 64
72	48	2.2	1	0 48
73	140	2.2	1	2 138
74	91	2.2	1	0 91
75	296	2.2	1	1 295
76	95	2.2	1	1 94
77	69	2.2	1	1 68
78	149	2.2	1	1 148
79	92	2.2	1	0 92
80	98	2.2	1	1 97
81	63	2.2	1	0 63
82	57	2.2	1	0 57
83	137	2.2	1	1 136
84	91	2.2	1	1 90
85	204	2.2	1	0 204
86	131	2.2	1	2 129
87	45	2.2	1	1 44
88	163	2.2	1	0 163
89	73	2.2	1	0 73
90	43	2.2	1	0 43
91	113	2.2	1	0 113
92	101	2.2	1	2 99
93	243	2.2	1	1 242
94	35	2.2	1	0 35
95	40	2.2	1	0 40
96	37	2.2	1	0 37
97	55	2.2	1	0 55
98	153	2.2	1	1 152
99	76	2.2	1	0 76
100	66	2.2	1	0 66
101	27	2.2	1	0 27


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_1.fastq
=============================================
37377639 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647654_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR7647654_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 117.63 s (3 us/read; 19.07 M reads/minute).

=== Summary ===

Total reads processed:              37,377,639
Reads with adapters:                16,351,560 (43.7%)
Reads written (passing filters):    37,377,639 (100.0%)

Total basepairs processed: 3,650,342,867 bp
Quality-trimmed:               7,826,520 bp (0.2%)
Total written (filtered):  3,618,565,989 bp (99.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 16351560 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.8%
  C: 30.1%
  G: 26.6%
  T: 22.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11787286	9344409.8	0	11787286
2	2905378	2336102.4	0	2905378
3	1211336	584025.6	0	1211336
4	395603	146006.4	0	395603
5	10970	36501.6	0	10970
6	6034	9125.4	0	6034
7	2085	2281.4	0	2085
8	811	570.3	0	811
9	316	142.6	0	210 106
10	568	35.6	1	82 486
11	548	8.9	1	90 458
12	399	2.2	1	78 321
13	555	2.2	1	91 464
14	738	2.2	1	74 664
15	1019	2.2	1	100 919
16	1764	2.2	1	253 1511
17	1419	2.2	1	268 1151
18	1764	2.2	1	252 1512
19	1364	2.2	1	280 1084
20	675	2.2	1	113 562
21	854	2.2	1	173 681
22	992	2.2	1	214 778
23	867	2.2	1	240 627
24	1049	2.2	1	277 772
25	1115	2.2	1	365 750
26	1104	2.2	1	395 709
27	1048	2.2	1	386 662
28	1354	2.2	1	550 804
29	1142	2.2	1	553 589
30	666	2.2	1	233 433
31	751	2.2	1	303 448
32	593	2.2	1	292 301
33	611	2.2	1	247 364
34	614	2.2	1	234 380
35	408	2.2	1	128 280
36	362	2.2	1	103 259
37	351	2.2	1	125 226
38	308	2.2	1	97 211
39	256	2.2	1	64 192
40	245	2.2	1	67 178
41	169	2.2	1	30 139
42	215	2.2	1	25 190
43	139	2.2	1	32 107
44	124	2.2	1	12 112
45	126	2.2	1	19 107
46	116	2.2	1	13 103
47	110	2.2	1	4 106
48	90	2.2	1	5 85
49	75	2.2	1	8 67
50	103	2.2	1	7 96
51	95	2.2	1	9 86
52	93	2.2	1	0 93
53	109	2.2	1	1 108
54	124	2.2	1	3 121
55	81	2.2	1	4 77
56	83	2.2	1	1 82
57	68	2.2	1	2 66
58	78	2.2	1	2 76
59	94	2.2	1	0 94
60	88	2.2	1	0 88
61	119	2.2	1	1 118
62	68	2.2	1	0 68
63	119	2.2	1	1 118
64	93	2.2	1	0 93
65	121	2.2	1	0 121
66	73	2.2	1	3 70
67	59	2.2	1	2 57
68	113	2.2	1	3 110
69	89	2.2	1	0 89
70	121	2.2	1	0 121
71	66	2.2	1	1 65
72	62	2.2	1	0 62
73	146	2.2	1	0 146
74	90	2.2	1	3 87
75	295	2.2	1	0 295
76	83	2.2	1	0 83
77	66	2.2	1	0 66
78	127	2.2	1	0 127
79	89	2.2	1	0 89
80	102	2.2	1	0 102
81	76	2.2	1	2 74
82	46	2.2	1	0 46
83	138	2.2	1	1 137
84	104	2.2	1	2 102
85	202	2.2	1	0 202
86	115	2.2	1	0 115
87	77	2.2	1	0 77
88	141	2.2	1	1 140
89	70	2.2	1	0 70
90	64	2.2	1	0 64
91	125	2.2	1	1 124
92	94	2.2	1	1 93
93	231	2.2	1	0 231
94	31	2.2	1	0 31
95	47	2.2	1	0 47
96	32	2.2	1	0 32
97	63	2.2	1	2 61
98	155	2.2	1	0 155
99	61	2.2	1	0 61
100	59	2.2	1	0 59
101	26	2.2	1	0 26


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647654_2.fastq
=============================================
37377639 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR7647654_1_trimmed.fq and SRR7647654_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR7647654_1_trimmed.fq<<	RENAMING TO:>>Bulk_B_1001_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR7647654_2_trimmed.fq<<	RENAMING TO:>>Bulk_B_1001_R2_trimmed.fq<<
file_1: Bulk_B_1001_R1_trimmed.fq, file_2: Bulk_B_1001_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Bulk_B_1001_R1_trimmed.fq and Bulk_B_1001_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Bulk_B_1001_val_1.fq
Writing validated paired-end Read 2 reads to Bulk_B_1001_val_2.fq

Total number of sequences analysed: 37377639

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 5813 (0.02%)


  >>> Now running FastQC on the validated data Bulk_B_1001_val_1.fq<<<

Started analysis of Bulk_B_1001_val_1.fq
Approx 5% complete for Bulk_B_1001_val_1.fq
Approx 10% complete for Bulk_B_1001_val_1.fq
Approx 15% complete for Bulk_B_1001_val_1.fq
Approx 20% complete for Bulk_B_1001_val_1.fq
Approx 25% complete for Bulk_B_1001_val_1.fq
Approx 30% complete for Bulk_B_1001_val_1.fq
Approx 35% complete for Bulk_B_1001_val_1.fq
Approx 40% complete for Bulk_B_1001_val_1.fq
Approx 45% complete for Bulk_B_1001_val_1.fq
Approx 50% complete for Bulk_B_1001_val_1.fq
Approx 55% complete for Bulk_B_1001_val_1.fq
Approx 60% complete for Bulk_B_1001_val_1.fq
Approx 65% complete for Bulk_B_1001_val_1.fq
Approx 70% complete for Bulk_B_1001_val_1.fq
Approx 75% complete for Bulk_B_1001_val_1.fq
Approx 80% complete for Bulk_B_1001_val_1.fq
Approx 85% complete for Bulk_B_1001_val_1.fq
Approx 90% complete for Bulk_B_1001_val_1.fq
Approx 95% complete for Bulk_B_1001_val_1.fq
Analysis complete for Bulk_B_1001_val_1.fq

  >>> Now running FastQC on the validated data Bulk_B_1001_val_2.fq<<<

Started analysis of Bulk_B_1001_val_2.fq
Approx 5% complete for Bulk_B_1001_val_2.fq
Approx 10% complete for Bulk_B_1001_val_2.fq
Approx 15% complete for Bulk_B_1001_val_2.fq
Approx 20% complete for Bulk_B_1001_val_2.fq
Approx 25% complete for Bulk_B_1001_val_2.fq
Approx 30% complete for Bulk_B_1001_val_2.fq
Approx 35% complete for Bulk_B_1001_val_2.fq
Approx 40% complete for Bulk_B_1001_val_2.fq
Approx 45% complete for Bulk_B_1001_val_2.fq
Approx 50% complete for Bulk_B_1001_val_2.fq
Approx 55% complete for Bulk_B_1001_val_2.fq
Approx 60% complete for Bulk_B_1001_val_2.fq
Approx 65% complete for Bulk_B_1001_val_2.fq
Approx 70% complete for Bulk_B_1001_val_2.fq
Approx 75% complete for Bulk_B_1001_val_2.fq
Approx 80% complete for Bulk_B_1001_val_2.fq
Approx 85% complete for Bulk_B_1001_val_2.fq
Approx 90% complete for Bulk_B_1001_val_2.fq
Approx 95% complete for Bulk_B_1001_val_2.fq
Analysis complete for Bulk_B_1001_val_2.fq
Deleting both intermediate output files Bulk_B_1001_R1_trimmed.fq and Bulk_B_1001_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Naive_B_1001<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647658_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Bulk_B_1002<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647696_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mem_B_1002<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647698_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Naive_B_1002<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647700_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Bulk_B_1003<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647731_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Bulk_B_1004<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mem_B_1004<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Naive_B_1004<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mem_B_1010<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Naive_B_1010<<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_1.fastq' to perform sanity check: No such file or directory
Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>><<) instead of deriving the filename from the input file(s)
Failed to read from file '/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/_1.fastq' to perform sanity check: No such file or directory
