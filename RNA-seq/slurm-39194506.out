Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Bulk_B_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	172	CTGTCTCTTATA	1000000	0.02
Illumina	6	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 172). Second best hit was Illumina (count: 6)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647767_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR7647767_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 608.66 s (12 us/read; 4.98 M reads/minute).

=== Summary ===

Total reads processed:              50,476,030
Reads with adapters:                19,754,480 (39.1%)
Reads written (passing filters):    50,476,030 (100.0%)

Total basepairs processed: 4,759,420,027 bp
Quality-trimmed:               4,828,903 bp (0.1%)
Total written (filtered):  4,725,051,631 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 19754480 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.8%
  C: 26.6%
  G: 22.7%
  T: 23.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	14351236	12619007.5	0	14351236
2	3552868	3154751.9	0	3552868
3	1292828	788688.0	0	1292828
4	482788	197172.0	0	482788
5	10511	49293.0	0	10511
6	9614	12323.2	0	9614
7	2378	3080.8	0	2378
8	493	770.2	0	493
9	302	192.6	0	63 239
10	595	48.1	1	40 555
11	926	12.0	1	48 878
12	941	3.0	1	171 770
13	593	3.0	1	44 549
14	1472	3.0	1	146 1326
15	895	3.0	1	49 846
16	2656	3.0	1	594 2062
17	915	3.0	1	172 743
18	1309	3.0	1	245 1064
19	1005	3.0	1	208 797
20	809	3.0	1	166 643
21	948	3.0	1	170 778
22	666	3.0	1	58 608
23	1492	3.0	1	338 1154
24	608	3.0	1	107 501
25	855	3.0	1	226 629
26	1282	3.0	1	282 1000
27	1041	3.0	1	249 792
28	1378	3.0	1	409 969
29	1409	3.0	1	340 1069
30	366	3.0	1	64 302
31	1457	3.0	1	258 1199
32	364	3.0	1	56 308
33	1107	3.0	1	260 847
34	918	3.0	1	153 765
35	752	3.0	1	184 568
36	1045	3.0	1	217 828
37	608	3.0	1	106 502
38	739	3.0	1	133 606
39	397	3.0	1	89 308
40	661	3.0	1	161 500
41	819	3.0	1	133 686
42	651	3.0	1	95 556
43	759	3.0	1	206 553
44	595	3.0	1	67 528
45	534	3.0	1	75 459
46	354	3.0	1	46 308
47	504	3.0	1	75 429
48	302	3.0	1	49 253
49	389	3.0	1	50 339
50	706	3.0	1	78 628
51	444	3.0	1	80 364
52	396	3.0	1	53 343
53	309	3.0	1	40 269
54	437	3.0	1	46 391
55	406	3.0	1	36 370
56	300	3.0	1	27 273
57	303	3.0	1	20 283
58	432	3.0	1	34 398
59	280	3.0	1	30 250
60	299	3.0	1	24 275
61	229	3.0	1	24 205
62	232	3.0	1	17 215
63	376	3.0	1	19 357
64	227	3.0	1	18 209
65	226	3.0	1	6 220
66	209	3.0	1	8 201
67	223	3.0	1	5 218
68	461	3.0	1	4 457
69	189	3.0	1	4 185
70	316	3.0	1	4 312
71	146	3.0	1	2 144
72	211	3.0	1	2 209
73	438	3.0	1	0 438
74	181	3.0	1	0 181
75	1091	3.0	1	2 1089
76	161	3.0	1	3 158
77	122	3.0	1	0 122
78	519	3.0	1	4 515
79	149	3.0	1	1 148
80	670	3.0	1	2 668
81	201	3.0	1	3 198
82	197	3.0	1	0 197
83	435	3.0	1	0 435
84	227	3.0	1	4 223
85	867	3.0	1	0 867
86	237	3.0	1	1 236
87	160	3.0	1	0 160
88	665	3.0	1	7 658
89	113	3.0	1	0 113
90	102	3.0	1	0 102
91	312	3.0	1	3 309
92	240	3.0	1	1 239
93	578	3.0	1	6 572
94	96	3.0	1	0 96
95	85	3.0	1	0 85
96	61	3.0	1	0 61
97	164	3.0	1	0 164
98	525	3.0	1	13 512
99	146	3.0	1	1 145
100	190	3.0	1	0 190
101	57	3.0	1	0 57


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_1.fastq
=============================================
50476030 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647767_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR7647767_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 570.46 s (11 us/read; 5.31 M reads/minute).

=== Summary ===

Total reads processed:              50,476,030
Reads with adapters:                19,817,459 (39.3%)
Reads written (passing filters):    50,476,030 (100.0%)

Total basepairs processed: 4,767,017,272 bp
Quality-trimmed:              25,545,771 bp (0.5%)
Total written (filtered):  4,709,352,228 bp (98.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 19817459 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 26.8%
  C: 26.3%
  G: 22.6%
  T: 24.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	14311171	12619007.5	0	14311171
2	3555761	3154751.9	0	3555761
3	1312715	788688.0	0	1312715
4	460286	197172.0	0	460286
5	14821	49293.0	0	14821
6	11643	12323.2	0	11643
7	4418	3080.8	0	4418
8	2342	770.2	0	2342
9	1729	192.6	0	1346 383
10	1991	48.1	1	765 1226
11	2588	12.0	1	1065 1523
12	2467	3.0	1	957 1510
13	2673	3.0	1	950 1723
14	3041	3.0	1	535 2506
15	3215	3.0	1	625 2590
16	5140	3.0	1	1160 3980
17	4843	3.0	1	1250 3593
18	4341	3.0	1	1090 3251
19	4376	3.0	1	1129 3247
20	2367	3.0	1	633 1734
21	3259	3.0	1	831 2428
22	3794	3.0	1	1015 2779
23	3510	3.0	1	1134 2376
24	3727	3.0	1	1242 2485
25	4121	3.0	1	1478 2643
26	4134	3.0	1	1582 2552
27	4009	3.0	1	1570 2439
28	5333	3.0	1	2482 2851
29	4864	3.0	1	2486 2378
30	3482	3.0	1	1485 1997
31	4416	3.0	1	1776 2640
32	3676	3.0	1	1938 1738
33	3669	3.0	1	1702 1967
34	4125	3.0	1	1916 2209
35	3216	3.0	1	1592 1624
36	3064	3.0	1	1336 1728
37	2543	3.0	1	1282 1261
38	2750	3.0	1	1241 1509
39	2713	3.0	1	1246 1467
40	2222	3.0	1	1036 1186
41	2255	3.0	1	909 1346
42	1802	3.0	1	809 993
43	1602	3.0	1	693 909
44	1670	3.0	1	658 1012
45	1380	3.0	1	556 824
46	1291	3.0	1	545 746
47	1146	3.0	1	465 681
48	1010	3.0	1	448 562
49	1065	3.0	1	384 681
50	1058	3.0	1	335 723
51	865	3.0	1	316 549
52	767	3.0	1	249 518
53	682	3.0	1	247 435
54	633	3.0	1	193 440
55	662	3.0	1	163 499
56	547	3.0	1	154 393
57	554	3.0	1	147 407
58	571	3.0	1	115 456
59	427	3.0	1	111 316
60	453	3.0	1	93 360
61	351	3.0	1	70 281
62	403	3.0	1	92 311
63	464	3.0	1	68 396
64	308	3.0	1	57 251
65	307	3.0	1	26 281
66	254	3.0	1	24 230
67	235	3.0	1	9 226
68	470	3.0	1	12 458
69	211	3.0	1	8 203
70	325	3.0	1	9 316
71	144	3.0	1	2 142
72	208	3.0	1	4 204
73	422	3.0	1	3 419
74	224	3.0	1	3 221
75	1023	3.0	1	0 1023
76	170	3.0	1	1 169
77	144	3.0	1	2 142
78	537	3.0	1	6 531
79	175	3.0	1	1 174
80	559	3.0	1	0 559
81	208	3.0	1	2 206
82	203	3.0	1	0 203
83	406	3.0	1	2 404
84	264	3.0	1	2 262
85	824	3.0	1	0 824
86	234	3.0	1	6 228
87	190	3.0	1	0 190
88	575	3.0	1	5 570
89	142	3.0	1	0 142
90	127	3.0	1	1 126
91	311	3.0	1	0 311
92	229	3.0	1	2 227
93	578	3.0	1	1 577
94	76	3.0	1	1 75
95	94	3.0	1	0 94
96	66	3.0	1	0 66
97	167	3.0	1	3 164
98	473	3.0	1	10 463
99	145	3.0	1	2 143
100	157	3.0	1	0 157
101	61	3.0	1	1 60


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647767_2.fastq
=============================================
50476030 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR7647767_1_trimmed.fq and SRR7647767_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR7647767_1_trimmed.fq<<	RENAMING TO:>>Bulk_B_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR7647767_2_trimmed.fq<<	RENAMING TO:>>Bulk_B_1004_R2_trimmed.fq<<
file_1: Bulk_B_1004_R1_trimmed.fq, file_2: Bulk_B_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Bulk_B_1004_R1_trimmed.fq and Bulk_B_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Bulk_B_1004_val_1.fq
Writing validated paired-end Read 2 reads to Bulk_B_1004_val_2.fq

Total number of sequences analysed: 50476030

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 18743 (0.04%)


  >>> Now running FastQC on the validated data Bulk_B_1004_val_1.fq<<<

Started analysis of Bulk_B_1004_val_1.fq
Approx 5% complete for Bulk_B_1004_val_1.fq
Approx 10% complete for Bulk_B_1004_val_1.fq
Approx 15% complete for Bulk_B_1004_val_1.fq
Approx 20% complete for Bulk_B_1004_val_1.fq
Approx 25% complete for Bulk_B_1004_val_1.fq
Approx 30% complete for Bulk_B_1004_val_1.fq
Approx 35% complete for Bulk_B_1004_val_1.fq
Approx 40% complete for Bulk_B_1004_val_1.fq
Approx 45% complete for Bulk_B_1004_val_1.fq
Approx 50% complete for Bulk_B_1004_val_1.fq
Approx 55% complete for Bulk_B_1004_val_1.fq
Approx 60% complete for Bulk_B_1004_val_1.fq
Approx 65% complete for Bulk_B_1004_val_1.fq
Approx 70% complete for Bulk_B_1004_val_1.fq
Approx 75% complete for Bulk_B_1004_val_1.fq
Approx 80% complete for Bulk_B_1004_val_1.fq
Approx 85% complete for Bulk_B_1004_val_1.fq
Approx 90% complete for Bulk_B_1004_val_1.fq
Approx 95% complete for Bulk_B_1004_val_1.fq
Analysis complete for Bulk_B_1004_val_1.fq

  >>> Now running FastQC on the validated data Bulk_B_1004_val_2.fq<<<

Started analysis of Bulk_B_1004_val_2.fq
Approx 5% complete for Bulk_B_1004_val_2.fq
Approx 10% complete for Bulk_B_1004_val_2.fq
Approx 15% complete for Bulk_B_1004_val_2.fq
Approx 20% complete for Bulk_B_1004_val_2.fq
Approx 25% complete for Bulk_B_1004_val_2.fq
Approx 30% complete for Bulk_B_1004_val_2.fq
Approx 35% complete for Bulk_B_1004_val_2.fq
Approx 40% complete for Bulk_B_1004_val_2.fq
Approx 45% complete for Bulk_B_1004_val_2.fq
Approx 50% complete for Bulk_B_1004_val_2.fq
Approx 55% complete for Bulk_B_1004_val_2.fq
Approx 60% complete for Bulk_B_1004_val_2.fq
Approx 65% complete for Bulk_B_1004_val_2.fq
Approx 70% complete for Bulk_B_1004_val_2.fq
Approx 75% complete for Bulk_B_1004_val_2.fq
Approx 80% complete for Bulk_B_1004_val_2.fq
Approx 85% complete for Bulk_B_1004_val_2.fq
Approx 90% complete for Bulk_B_1004_val_2.fq
Approx 95% complete for Bulk_B_1004_val_2.fq
Analysis complete for Bulk_B_1004_val_2.fq
Deleting both intermediate output files Bulk_B_1004_R1_trimmed.fq and Bulk_B_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mem_B_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	199	CTGTCTCTTATA	1000000	0.02
Illumina	2	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 199). Second best hit was Illumina (count: 2)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647768_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR7647768_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 497.45 s (18 us/read; 3.33 M reads/minute).

=== Summary ===

Total reads processed:              27,585,401
Reads with adapters:                10,928,415 (39.6%)
Reads written (passing filters):    27,585,401 (100.0%)

Total basepairs processed: 2,575,561,263 bp
Quality-trimmed:               2,643,529 bp (0.1%)
Total written (filtered):  2,556,608,992 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 10928415 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 27.4%
  C: 26.3%
  G: 22.7%
  T: 23.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	7969491	6896350.2	0	7969491
2	1926295	1724087.6	0	1926295
3	713317	431021.9	0	713317
4	276963	107755.5	0	276963
5	6188	26938.9	0	6188
6	5215	6734.7	0	5215
7	1365	1683.7	0	1365
8	306	420.9	0	306
9	167	105.2	0	44 123
10	350	26.3	1	30 320
11	531	6.6	1	30 501
12	501	1.6	1	101 400
13	347	1.6	1	43 304
14	854	1.6	1	91 763
15	600	1.6	1	41 559
16	1576	1.6	1	356 1220
17	514	1.6	1	90 424
18	696	1.6	1	131 565
19	621	1.6	1	107 514
20	458	1.6	1	97 361
21	541	1.6	1	103 438
22	474	1.6	1	35 439
23	874	1.6	1	203 671
24	458	1.6	1	58 400
25	465	1.6	1	117 348
26	746	1.6	1	184 562
27	587	1.6	1	137 450
28	799	1.6	1	245 554
29	807	1.6	1	235 572
30	200	1.6	1	28 172
31	1037	1.6	1	162 875
32	189	1.6	1	28 161
33	654	1.6	1	157 497
34	531	1.6	1	90 441
35	462	1.6	1	132 330
36	569	1.6	1	76 493
37	294	1.6	1	43 251
38	540	1.6	1	147 393
39	332	1.6	1	83 249
40	218	1.6	1	42 176
41	551	1.6	1	92 459
42	302	1.6	1	51 251
43	439	1.6	1	139 300
44	377	1.6	1	57 320
45	294	1.6	1	42 252
46	229	1.6	1	34 195
47	307	1.6	1	47 260
48	172	1.6	1	22 150
49	247	1.6	1	29 218
50	449	1.6	1	67 382
51	240	1.6	1	42 198
52	214	1.6	1	34 180
53	152	1.6	1	28 124
54	237	1.6	1	20 217
55	264	1.6	1	18 246
56	146	1.6	1	14 132
57	176	1.6	1	17 159
58	209	1.6	1	24 185
59	172	1.6	1	21 151
60	159	1.6	1	11 148
61	150	1.6	1	18 132
62	141	1.6	1	11 130
63	135	1.6	1	11 124
64	146	1.6	1	11 135
65	106	1.6	1	6 100
66	114	1.6	1	3 111
67	144	1.6	1	4 140
68	192	1.6	1	6 186
69	107	1.6	1	3 104
70	137	1.6	1	1 136
71	61	1.6	1	1 60
72	99	1.6	1	0 99
73	220	1.6	1	4 216
74	112	1.6	1	0 112
75	530	1.6	1	1 529
76	90	1.6	1	2 88
77	83	1.6	1	4 79
78	267	1.6	1	12 255
79	92	1.6	1	0 92
80	300	1.6	1	3 297
81	86	1.6	1	1 85
82	86	1.6	1	0 86
83	188	1.6	1	2 186
84	90	1.6	1	4 86
85	419	1.6	1	0 419
86	93	1.6	1	3 90
87	99	1.6	1	1 98
88	301	1.6	1	7 294
89	80	1.6	1	2 78
90	74	1.6	1	1 73
91	129	1.6	1	3 126
92	117	1.6	1	3 114
93	296	1.6	1	10 286
94	43	1.6	1	1 42
95	38	1.6	1	2 36
96	30	1.6	1	1 29
97	85	1.6	1	0 85
98	283	1.6	1	16 267
99	78	1.6	1	1 77
100	80	1.6	1	0 80
101	26	1.6	1	1 25


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_1.fastq
=============================================
27585401 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647768_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR7647768_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 304.50 s (11 us/read; 5.44 M reads/minute).

=== Summary ===

Total reads processed:              27,585,401
Reads with adapters:                10,960,418 (39.7%)
Reads written (passing filters):    27,585,401 (100.0%)

Total basepairs processed: 2,580,082,580 bp
Quality-trimmed:              13,697,099 bp (0.5%)
Total written (filtered):  2,548,488,351 bp (98.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 10960418 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 27.3%
  C: 26.1%
  G: 22.6%
  T: 24.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	7932877	6896350.2	0	7932877
2	1934896	1724087.6	0	1934896
3	721955	431021.9	0	721955
4	266380	107755.5	0	266380
5	8483	26938.9	0	8483
6	6223	6734.7	0	6223
7	2351	1683.7	0	2351
8	1319	420.9	0	1319
9	1012	105.2	0	807 205
10	1205	26.3	1	428 777
11	1514	6.6	1	639 875
12	1435	1.6	1	560 875
13	1524	1.6	1	515 1009
14	1801	1.6	1	315 1486
15	1989	1.6	1	389 1600
16	3072	1.6	1	651 2421
17	2949	1.6	1	758 2191
18	2720	1.6	1	733 1987
19	2690	1.6	1	646 2044
20	1411	1.6	1	397 1014
21	1843	1.6	1	499 1344
22	2372	1.6	1	638 1734
23	2040	1.6	1	646 1394
24	2190	1.6	1	764 1426
25	2505	1.6	1	910 1595
26	2474	1.6	1	1004 1470
27	2396	1.6	1	969 1427
28	3154	1.6	1	1476 1678
29	2926	1.6	1	1520 1406
30	2197	1.6	1	952 1245
31	2758	1.6	1	1122 1636
32	2174	1.6	1	1153 1021
33	2377	1.6	1	1057 1320
34	2504	1.6	1	1230 1274
35	1899	1.6	1	994 905
36	1904	1.6	1	784 1120
37	1568	1.6	1	778 790
38	1633	1.6	1	752 881
39	1621	1.6	1	751 870
40	1315	1.6	1	631 684
41	1434	1.6	1	557 877
42	1155	1.6	1	512 643
43	998	1.6	1	434 564
44	1009	1.6	1	383 626
45	838	1.6	1	354 484
46	758	1.6	1	310 448
47	688	1.6	1	270 418
48	627	1.6	1	250 377
49	653	1.6	1	248 405
50	646	1.6	1	205 441
51	446	1.6	1	189 257
52	479	1.6	1	167 312
53	454	1.6	1	184 270
54	435	1.6	1	142 293
55	454	1.6	1	121 333
56	311	1.6	1	103 208
57	314	1.6	1	93 221
58	352	1.6	1	87 265
59	243	1.6	1	63 180
60	273	1.6	1	68 205
61	215	1.6	1	51 164
62	258	1.6	1	53 205
63	226	1.6	1	44 182
64	194	1.6	1	35 159
65	130	1.6	1	26 104
66	136	1.6	1	9 127
67	164	1.6	1	9 155
68	214	1.6	1	8 206
69	118	1.6	1	8 110
70	146	1.6	1	5 141
71	62	1.6	1	2 60
72	100	1.6	1	1 99
73	200	1.6	1	0 200
74	104	1.6	1	2 102
75	483	1.6	1	2 481
76	83	1.6	1	2 81
77	83	1.6	1	0 83
78	244	1.6	1	5 239
79	96	1.6	1	0 96
80	268	1.6	1	1 267
81	100	1.6	1	2 98
82	70	1.6	1	0 70
83	188	1.6	1	1 187
84	106	1.6	1	2 104
85	431	1.6	1	0 431
86	104	1.6	1	5 99
87	97	1.6	1	4 93
88	276	1.6	1	6 270
89	73	1.6	1	0 73
90	65	1.6	1	0 65
91	140	1.6	1	1 139
92	108	1.6	1	1 107
93	259	1.6	1	2 257
94	51	1.6	1	1 50
95	44	1.6	1	0 44
96	28	1.6	1	0 28
97	86	1.6	1	5 81
98	253	1.6	1	6 247
99	79	1.6	1	4 75
100	90	1.6	1	0 90
101	23	1.6	1	2 21


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647768_2.fastq
=============================================
27585401 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR7647768_1_trimmed.fq and SRR7647768_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR7647768_1_trimmed.fq<<	RENAMING TO:>>Mem_B_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR7647768_2_trimmed.fq<<	RENAMING TO:>>Mem_B_1004_R2_trimmed.fq<<
file_1: Mem_B_1004_R1_trimmed.fq, file_2: Mem_B_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Mem_B_1004_R1_trimmed.fq and Mem_B_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Mem_B_1004_val_1.fq
Writing validated paired-end Read 2 reads to Mem_B_1004_val_2.fq

Total number of sequences analysed: 27585401

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 9730 (0.04%)


  >>> Now running FastQC on the validated data Mem_B_1004_val_1.fq<<<

Started analysis of Mem_B_1004_val_1.fq
Approx 5% complete for Mem_B_1004_val_1.fq
Approx 10% complete for Mem_B_1004_val_1.fq
Approx 15% complete for Mem_B_1004_val_1.fq
Approx 20% complete for Mem_B_1004_val_1.fq
Approx 25% complete for Mem_B_1004_val_1.fq
Approx 30% complete for Mem_B_1004_val_1.fq
Approx 35% complete for Mem_B_1004_val_1.fq
Approx 40% complete for Mem_B_1004_val_1.fq
Approx 45% complete for Mem_B_1004_val_1.fq
Approx 50% complete for Mem_B_1004_val_1.fq
Approx 55% complete for Mem_B_1004_val_1.fq
Approx 60% complete for Mem_B_1004_val_1.fq
Approx 65% complete for Mem_B_1004_val_1.fq
Approx 70% complete for Mem_B_1004_val_1.fq
Approx 75% complete for Mem_B_1004_val_1.fq
Approx 80% complete for Mem_B_1004_val_1.fq
Approx 85% complete for Mem_B_1004_val_1.fq
Approx 90% complete for Mem_B_1004_val_1.fq
Approx 95% complete for Mem_B_1004_val_1.fq
Analysis complete for Mem_B_1004_val_1.fq

  >>> Now running FastQC on the validated data Mem_B_1004_val_2.fq<<<

Started analysis of Mem_B_1004_val_2.fq
Approx 5% complete for Mem_B_1004_val_2.fq
Approx 10% complete for Mem_B_1004_val_2.fq
Approx 15% complete for Mem_B_1004_val_2.fq
Approx 20% complete for Mem_B_1004_val_2.fq
Approx 25% complete for Mem_B_1004_val_2.fq
Approx 30% complete for Mem_B_1004_val_2.fq
Approx 35% complete for Mem_B_1004_val_2.fq
Approx 40% complete for Mem_B_1004_val_2.fq
Approx 45% complete for Mem_B_1004_val_2.fq
Approx 50% complete for Mem_B_1004_val_2.fq
Approx 55% complete for Mem_B_1004_val_2.fq
Approx 60% complete for Mem_B_1004_val_2.fq
Approx 65% complete for Mem_B_1004_val_2.fq
Approx 70% complete for Mem_B_1004_val_2.fq
Approx 75% complete for Mem_B_1004_val_2.fq
Approx 80% complete for Mem_B_1004_val_2.fq
Approx 85% complete for Mem_B_1004_val_2.fq
Approx 90% complete for Mem_B_1004_val_2.fq
Approx 95% complete for Mem_B_1004_val_2.fq
Analysis complete for Mem_B_1004_val_2.fq
Deleting both intermediate output files Mem_B_1004_R1_trimmed.fq and Mem_B_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Naive_B_1004<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	221	CTGTCTCTTATA	1000000	0.02
smallRNA	7	TGGAATTCTCGG	1000000	0.00
Illumina	5	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 221). Second best hit was smallRNA (count: 7)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647769_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR7647769_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
60000000 sequences processed
70000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 846.66 s (12 us/read; 5.01 M reads/minute).

=== Summary ===

Total reads processed:              70,704,119
Reads with adapters:                27,666,774 (39.1%)
Reads written (passing filters):    70,704,119 (100.0%)

Total basepairs processed: 6,520,558,097 bp
Quality-trimmed:               6,379,970 bp (0.1%)
Total written (filtered):  6,472,916,916 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 27666774 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.4%
  C: 26.2%
  G: 21.3%
  T: 24.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	20425664	17676029.8	0	20425664
2	4677433	4419007.4	0	4677433
3	1755811	1104751.9	0	1755811
4	687905	276188.0	0	687905
5	17633	69047.0	0	17633
6	16346	17261.7	0	16346
7	4292	4315.4	0	4292
8	844	1078.9	0	844
9	436	269.7	0	96 340
10	942	67.4	1	49 893
11	1415	16.9	1	78 1337
12	1410	4.2	1	208 1202
13	1074	4.2	1	81 993
14	2431	4.2	1	220 2211
15	1567	4.2	1	94 1473
16	4439	4.2	1	1022 3417
17	1550	4.2	1	278 1272
18	2050	4.2	1	386 1664
19	1527	4.2	1	309 1218
20	1329	4.2	1	257 1072
21	1493	4.2	1	310 1183
22	957	4.2	1	87 870
23	2318	4.2	1	560 1758
24	958	4.2	1	147 811
25	1399	4.2	1	350 1049
26	2205	4.2	1	519 1686
27	1807	4.2	1	463 1344
28	2114	4.2	1	583 1531
29	2227	4.2	1	557 1670
30	606	4.2	1	99 507
31	2171	4.2	1	381 1790
32	559	4.2	1	71 488
33	1671	4.2	1	377 1294
34	1317	4.2	1	232 1085
35	1347	4.2	1	340 1007
36	1715	4.2	1	342 1373
37	997	4.2	1	144 853
38	1125	4.2	1	196 929
39	615	4.2	1	101 514
40	1112	4.2	1	218 894
41	1254	4.2	1	219 1035
42	1046	4.2	1	190 856
43	1503	4.2	1	386 1117
44	874	4.2	1	135 739
45	964	4.2	1	172 792
46	531	4.2	1	68 463
47	751	4.2	1	97 654
48	576	4.2	1	81 495
49	604	4.2	1	84 520
50	1077	4.2	1	146 931
51	748	4.2	1	144 604
52	644	4.2	1	77 567
53	558	4.2	1	72 486
54	721	4.2	1	92 629
55	620	4.2	1	49 571
56	526	4.2	1	57 469
57	511	4.2	1	55 456
58	632	4.2	1	53 579
59	494	4.2	1	48 446
60	557	4.2	1	43 514
61	469	4.2	1	40 429
62	433	4.2	1	39 394
63	474	4.2	1	30 444
64	377	4.2	1	28 349
65	405	4.2	1	31 374
66	399	4.2	1	10 389
67	397	4.2	1	12 385
68	631	4.2	1	11 620
69	335	4.2	1	9 326
70	429	4.2	1	7 422
71	288	4.2	1	0 288
72	289	4.2	1	0 289
73	564	4.2	1	2 562
74	325	4.2	1	2 323
75	1215	4.2	1	2 1213
76	268	4.2	1	4 264
77	255	4.2	1	2 253
78	649	4.2	1	5 644
79	268	4.2	1	2 266
80	780	4.2	1	0 780
81	277	4.2	1	4 273
82	205	4.2	1	1 204
83	563	4.2	1	4 559
84	255	4.2	1	4 251
85	999	4.2	1	4 995
86	297	4.2	1	2 295
87	222	4.2	1	4 218
88	829	4.2	1	4 825
89	246	4.2	1	1 245
90	205	4.2	1	2 203
91	470	4.2	1	1 469
92	299	4.2	1	2 297
93	854	4.2	1	5 849
94	99	4.2	1	0 99
95	148	4.2	1	0 148
96	117	4.2	1	1 116
97	195	4.2	1	0 195
98	729	4.2	1	5 724
99	205	4.2	1	3 202
100	221	4.2	1	0 221
101	87	4.2	1	1 86


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_1.fastq
=============================================
70704119 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647769_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR7647769_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
60000000 sequences processed
70000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 1043.38 s (15 us/read; 4.07 M reads/minute).

=== Summary ===

Total reads processed:              70,704,119
Reads with adapters:                27,708,647 (39.2%)
Reads written (passing filters):    70,704,119 (100.0%)

Total basepairs processed: 6,530,660,509 bp
Quality-trimmed:              24,951,232 bp (0.4%)
Total written (filtered):  6,460,829,619 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 27708647 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 28.4%
  C: 26.0%
  G: 21.1%
  T: 24.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	20333731	17676029.8	0	20333731
2	4684939	4419007.4	0	4684939
3	1760309	1104751.9	0	1760309
4	670748	276188.0	0	670748
5	22329	69047.0	0	22329
6	19014	17261.7	0	19014
7	6323	4315.4	0	6323
8	2816	1078.9	0	2816
9	2154	269.7	0	1615 539
10	3127	67.4	1	1245 1882
11	3297	16.9	1	1170 2127
12	3538	4.2	1	1271 2267
13	3265	4.2	1	934 2331
14	4421	4.2	1	728 3693
15	4113	4.2	1	694 3419
16	7839	4.2	1	1780 6059
17	6958	4.2	1	1888 5070
18	6050	4.2	1	1635 4415
19	5884	4.2	1	1565 4319
20	3124	4.2	1	834 2290
21	4493	4.2	1	1203 3290
22	5018	4.2	1	1386 3632
23	4645	4.2	1	1548 3097
24	5071	4.2	1	1662 3409
25	5835	4.2	1	2184 3651
26	5789	4.2	1	2413 3376
27	5937	4.2	1	2455 3482
28	7673	4.2	1	3537 4136
29	6640	4.2	1	3597 3043
30	5064	4.2	1	2208 2856
31	6237	4.2	1	2698 3539
32	5288	4.2	1	2925 2363
33	5096	4.2	1	2315 2781
34	5994	4.2	1	2982 3012
35	4500	4.2	1	2214 2286
36	3912	4.2	1	1945 1967
37	4694	4.2	1	2243 2451
38	4521	4.2	1	2015 2506
39	3805	4.2	1	1805 2000
40	2842	4.2	1	1428 1414
41	3242	4.2	1	1372 1870
42	2739	4.2	1	1253 1486
43	2546	4.2	1	1119 1427
44	2334	4.2	1	992 1342
45	2102	4.2	1	871 1231
46	2390	4.2	1	942 1448
47	1798	4.2	1	743 1055
48	1798	4.2	1	701 1097
49	1936	4.2	1	747 1189
50	1691	4.2	1	591 1100
51	1611	4.2	1	584 1027
52	1619	4.2	1	567 1052
53	1314	4.2	1	455 859
54	1191	4.2	1	378 813
55	1258	4.2	1	330 928
56	1036	4.2	1	304 732
57	982	4.2	1	268 714
58	1054	4.2	1	275 779
59	816	4.2	1	228 588
60	930	4.2	1	219 711
61	721	4.2	1	170 551
62	699	4.2	1	169 530
63	730	4.2	1	146 584
64	542	4.2	1	85 457
65	510	4.2	1	106 404
66	433	4.2	1	56 377
67	448	4.2	1	31 417
68	587	4.2	1	41 546
69	381	4.2	1	21 360
70	431	4.2	1	11 420
71	277	4.2	1	15 262
72	323	4.2	1	7 316
73	584	4.2	1	8 576
74	311	4.2	1	6 305
75	1052	4.2	1	5 1047
76	280	4.2	1	4 276
77	279	4.2	1	1 278
78	688	4.2	1	12 676
79	299	4.2	1	1 298
80	645	4.2	1	3 642
81	259	4.2	1	2 257
82	263	4.2	1	2 261
83	519	4.2	1	3 516
84	311	4.2	1	11 300
85	851	4.2	1	1 850
86	281	4.2	1	3 278
87	245	4.2	1	0 245
88	677	4.2	1	2 675
89	241	4.2	1	2 239
90	229	4.2	1	0 229
91	426	4.2	1	0 426
92	296	4.2	1	0 296
93	765	4.2	1	4 761
94	126	4.2	1	1 125
95	128	4.2	1	0 128
96	94	4.2	1	0 94
97	230	4.2	1	1 229
98	623	4.2	1	6 617
99	182	4.2	1	4 178
100	190	4.2	1	0 190
101	71	4.2	1	1 70


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647769_2.fastq
=============================================
70704119 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR7647769_1_trimmed.fq and SRR7647769_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR7647769_1_trimmed.fq<<	RENAMING TO:>>Naive_B_1004_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR7647769_2_trimmed.fq<<	RENAMING TO:>>Naive_B_1004_R2_trimmed.fq<<
file_1: Naive_B_1004_R1_trimmed.fq, file_2: Naive_B_1004_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Naive_B_1004_R1_trimmed.fq and Naive_B_1004_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Naive_B_1004_val_1.fq
Writing validated paired-end Read 2 reads to Naive_B_1004_val_2.fq

Total number of sequences analysed: 70704119

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 24063 (0.03%)


  >>> Now running FastQC on the validated data Naive_B_1004_val_1.fq<<<

Started analysis of Naive_B_1004_val_1.fq
Approx 5% complete for Naive_B_1004_val_1.fq
Approx 10% complete for Naive_B_1004_val_1.fq
Approx 15% complete for Naive_B_1004_val_1.fq
Approx 20% complete for Naive_B_1004_val_1.fq
Approx 25% complete for Naive_B_1004_val_1.fq
Approx 30% complete for Naive_B_1004_val_1.fq
Approx 35% complete for Naive_B_1004_val_1.fq
Approx 40% complete for Naive_B_1004_val_1.fq
Approx 45% complete for Naive_B_1004_val_1.fq
Approx 50% complete for Naive_B_1004_val_1.fq
Approx 55% complete for Naive_B_1004_val_1.fq
Approx 60% complete for Naive_B_1004_val_1.fq
Approx 65% complete for Naive_B_1004_val_1.fq
Approx 70% complete for Naive_B_1004_val_1.fq
Approx 75% complete for Naive_B_1004_val_1.fq
Approx 80% complete for Naive_B_1004_val_1.fq
Approx 85% complete for Naive_B_1004_val_1.fq
Approx 90% complete for Naive_B_1004_val_1.fq
Approx 95% complete for Naive_B_1004_val_1.fq
Analysis complete for Naive_B_1004_val_1.fq

  >>> Now running FastQC on the validated data Naive_B_1004_val_2.fq<<<

Started analysis of Naive_B_1004_val_2.fq
Approx 5% complete for Naive_B_1004_val_2.fq
Approx 10% complete for Naive_B_1004_val_2.fq
Approx 15% complete for Naive_B_1004_val_2.fq
Approx 20% complete for Naive_B_1004_val_2.fq
Approx 25% complete for Naive_B_1004_val_2.fq
Approx 30% complete for Naive_B_1004_val_2.fq
Approx 35% complete for Naive_B_1004_val_2.fq
Approx 40% complete for Naive_B_1004_val_2.fq
Approx 45% complete for Naive_B_1004_val_2.fq
Approx 50% complete for Naive_B_1004_val_2.fq
Approx 55% complete for Naive_B_1004_val_2.fq
Approx 60% complete for Naive_B_1004_val_2.fq
Approx 65% complete for Naive_B_1004_val_2.fq
Approx 70% complete for Naive_B_1004_val_2.fq
Approx 75% complete for Naive_B_1004_val_2.fq
Approx 80% complete for Naive_B_1004_val_2.fq
Approx 85% complete for Naive_B_1004_val_2.fq
Approx 90% complete for Naive_B_1004_val_2.fq
Approx 95% complete for Naive_B_1004_val_2.fq
Analysis complete for Naive_B_1004_val_2.fq
Deleting both intermediate output files Naive_B_1004_R1_trimmed.fq and Naive_B_1004_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Mem_B_1010<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	25	CTGTCTCTTATA	1000000	0.00
Illumina	1	AGATCGGAAGAGC	1000000	0.00
smallRNA	1	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 25). Second best hit was Illumina (count: 1)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647807_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR7647807_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_1.fastq <<< 
10000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 216.79 s (13 us/read; 4.59 M reads/minute).

=== Summary ===

Total reads processed:              16,601,754
Reads with adapters:                 5,900,846 (35.5%)
Reads written (passing filters):    16,601,754 (100.0%)

Total basepairs processed: 1,248,556,753 bp
Quality-trimmed:               8,878,515 bp (0.7%)
Total written (filtered):  1,230,892,909 bp (98.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5900846 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.9%
  C: 31.0%
  G: 23.5%
  T: 23.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4074097	4150438.5	0	4074097
2	1168605	1037609.6	0	1168605
3	467017	259402.4	0	467017
4	180018	64850.6	0	180018
5	2038	16212.7	0	2038
6	2423	4053.2	0	2423
7	539	1013.3	0	539
8	205	253.3	0	205
9	32	63.3	0	16 16
10	53	15.8	1	5 48
11	88	4.0	1	5 83
12	85	1.0	1	10 75
13	116	1.0	1	3 113
14	170	1.0	1	6 164
15	128	1.0	1	6 122
16	203	1.0	1	17 186
17	108	1.0	1	8 100
18	112	1.0	1	8 104
19	126	1.0	1	4 122
20	91	1.0	1	1 90
21	114	1.0	1	10 104
22	147	1.0	1	11 136
23	108	1.0	1	7 101
24	101	1.0	1	9 92
25	181	1.0	1	15 166
26	151	1.0	1	16 135
27	255	1.0	1	39 216
28	116	1.0	1	11 105
29	134	1.0	1	5 129
30	98	1.0	1	6 92
31	63	1.0	1	5 58
32	77	1.0	1	7 70
33	83	1.0	1	5 78
34	92	1.0	1	1 91
35	100	1.0	1	1 99
36	71	1.0	1	4 67
37	36	1.0	1	0 36
38	66	1.0	1	1 65
39	57	1.0	1	0 57
40	74	1.0	1	1 73
41	46	1.0	1	0 46
42	57	1.0	1	0 57
43	113	1.0	1	0 113
44	30	1.0	1	0 30
45	85	1.0	1	8 77
46	58	1.0	1	0 58
47	57	1.0	1	0 57
48	110	1.0	1	3 107
49	43	1.0	1	0 43
50	153	1.0	1	5 148
51	70	1.0	1	1 69
52	67	1.0	1	0 67
53	119	1.0	1	0 119
54	68	1.0	1	0 68
55	51	1.0	1	0 51
56	50	1.0	1	6 44
57	53	1.0	1	0 53
58	137	1.0	1	4 133
59	30	1.0	1	0 30
60	82	1.0	1	0 82
61	64	1.0	1	0 64
62	37	1.0	1	0 37
63	156	1.0	1	4 152
64	50	1.0	1	0 50
65	31	1.0	1	0 31
66	107	1.0	1	0 107
67	62	1.0	1	1 61
68	194	1.0	1	4 190
69	28	1.0	1	0 28
70	22	1.0	1	2 20
71	14	1.0	1	0 14
72	38	1.0	1	0 38
73	98	1.0	1	7 91
74	52	1.0	1	0 52
75	31	1.0	1	0 31
76	5	1.0	1	0 5


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_1.fastq
=============================================
16601754 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647807_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR7647807_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_2.fastq <<< 
10000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 373.80 s (23 us/read; 2.66 M reads/minute).

=== Summary ===

Total reads processed:              16,601,754
Reads with adapters:                 6,108,709 (36.8%)
Reads written (passing filters):    16,601,754 (100.0%)

Total basepairs processed: 1,248,592,048 bp
Quality-trimmed:               6,648,726 bp (0.5%)
Total written (filtered):  1,232,838,455 bp (98.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 6108709 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.1%
  C: 31.2%
  G: 23.5%
  T: 23.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4241080	4150438.5	0	4241080
2	1188801	1037609.6	0	1188801
3	478472	259402.4	0	478472
4	186748	64850.6	0	186748
5	2318	16212.7	0	2318
6	2670	4053.2	0	2670
7	698	1013.3	0	698
8	249	253.3	0	249
9	84	63.3	0	29 55
10	161	15.8	1	14 147
11	102	4.0	1	9 93
12	199	1.0	1	25 174
13	198	1.0	1	7 191
14	345	1.0	1	18 327
15	203	1.0	1	7 196
16	375	1.0	1	44 331
17	250	1.0	1	18 232
18	218	1.0	1	24 194
19	225	1.0	1	28 197
20	142	1.0	1	4 138
21	173	1.0	1	17 156
22	202	1.0	1	10 192
23	105	1.0	1	7 98
24	106	1.0	1	7 99
25	156	1.0	1	8 148
26	97	1.0	1	8 89
27	172	1.0	1	3 169
28	166	1.0	1	18 148
29	142	1.0	1	7 135
30	103	1.0	1	7 96
31	51	1.0	1	6 45
32	86	1.0	1	3 83
33	108	1.0	1	4 104
34	139	1.0	1	1 138
35	116	1.0	1	3 113
36	84	1.0	1	5 79
37	63	1.0	1	3 60
38	91	1.0	1	8 83
39	60	1.0	1	2 58
40	93	1.0	1	2 91
41	59	1.0	1	1 58
42	67	1.0	1	1 66
43	131	1.0	1	6 125
44	49	1.0	1	0 49
45	92	1.0	1	4 88
46	62	1.0	1	0 62
47	88	1.0	1	2 86
48	129	1.0	1	7 122
49	40	1.0	1	1 39
50	154	1.0	1	4 150
51	60	1.0	1	2 58
52	83	1.0	1	1 82
53	145	1.0	1	0 145
54	59	1.0	1	0 59
55	62	1.0	1	0 62
56	42	1.0	1	2 40
57	64	1.0	1	0 64
58	155	1.0	1	13 142
59	36	1.0	1	0 36
60	103	1.0	1	0 103
61	67	1.0	1	1 66
62	69	1.0	1	1 68
63	190	1.0	1	5 185
64	45	1.0	1	0 45
65	42	1.0	1	0 42
66	132	1.0	1	0 132
67	51	1.0	1	0 51
68	238	1.0	1	6 232
69	26	1.0	1	0 26
70	27	1.0	1	1 26
71	20	1.0	1	0 20
72	63	1.0	1	1 62
73	130	1.0	1	1 129
74	39	1.0	1	0 39
75	30	1.0	1	0 30
76	9	1.0	1	0 9


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647807_2.fastq
=============================================
16601754 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR7647807_1_trimmed.fq and SRR7647807_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR7647807_1_trimmed.fq<<	RENAMING TO:>>Mem_B_1010_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR7647807_2_trimmed.fq<<	RENAMING TO:>>Mem_B_1010_R2_trimmed.fq<<
file_1: Mem_B_1010_R1_trimmed.fq, file_2: Mem_B_1010_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Mem_B_1010_R1_trimmed.fq and Mem_B_1010_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Mem_B_1010_val_1.fq
Writing validated paired-end Read 2 reads to Mem_B_1010_val_2.fq

Total number of sequences analysed: 16601754

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 41583 (0.25%)


  >>> Now running FastQC on the validated data Mem_B_1010_val_1.fq<<<

Started analysis of Mem_B_1010_val_1.fq
Approx 5% complete for Mem_B_1010_val_1.fq
Approx 10% complete for Mem_B_1010_val_1.fq
Approx 15% complete for Mem_B_1010_val_1.fq
Approx 20% complete for Mem_B_1010_val_1.fq
Approx 25% complete for Mem_B_1010_val_1.fq
Approx 30% complete for Mem_B_1010_val_1.fq
Approx 35% complete for Mem_B_1010_val_1.fq
Approx 40% complete for Mem_B_1010_val_1.fq
Approx 45% complete for Mem_B_1010_val_1.fq
Approx 50% complete for Mem_B_1010_val_1.fq
Approx 55% complete for Mem_B_1010_val_1.fq
Approx 60% complete for Mem_B_1010_val_1.fq
Approx 65% complete for Mem_B_1010_val_1.fq
Approx 70% complete for Mem_B_1010_val_1.fq
Approx 75% complete for Mem_B_1010_val_1.fq
Approx 80% complete for Mem_B_1010_val_1.fq
Approx 85% complete for Mem_B_1010_val_1.fq
Approx 90% complete for Mem_B_1010_val_1.fq
Approx 95% complete for Mem_B_1010_val_1.fq
Analysis complete for Mem_B_1010_val_1.fq

  >>> Now running FastQC on the validated data Mem_B_1010_val_2.fq<<<

Started analysis of Mem_B_1010_val_2.fq
Approx 5% complete for Mem_B_1010_val_2.fq
Approx 10% complete for Mem_B_1010_val_2.fq
Approx 15% complete for Mem_B_1010_val_2.fq
Approx 20% complete for Mem_B_1010_val_2.fq
Approx 25% complete for Mem_B_1010_val_2.fq
Approx 30% complete for Mem_B_1010_val_2.fq
Approx 35% complete for Mem_B_1010_val_2.fq
Approx 40% complete for Mem_B_1010_val_2.fq
Approx 45% complete for Mem_B_1010_val_2.fq
Approx 50% complete for Mem_B_1010_val_2.fq
Approx 55% complete for Mem_B_1010_val_2.fq
Approx 60% complete for Mem_B_1010_val_2.fq
Approx 65% complete for Mem_B_1010_val_2.fq
Approx 70% complete for Mem_B_1010_val_2.fq
Approx 75% complete for Mem_B_1010_val_2.fq
Approx 80% complete for Mem_B_1010_val_2.fq
Approx 85% complete for Mem_B_1010_val_2.fq
Approx 90% complete for Mem_B_1010_val_2.fq
Approx 95% complete for Mem_B_1010_val_2.fq
Analysis complete for Mem_B_1010_val_2.fq
Deleting both intermediate output files Mem_B_1010_R1_trimmed.fq and Mem_B_1010_R2_trimmed.fq

====================================================================================================

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 1.18
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/
Using user-specified basename (>>Naive_B_1010<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_1.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	23	CTGTCTCTTATA	1000000	0.00
Illumina	5	AGATCGGAAGAGC	1000000	0.00
smallRNA	1	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 23). Second best hit was Illumina (count: 5)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647808_1.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_1.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j 12
Writing final adapter and quality trimmed output to SRR7647808_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_1.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_1.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 1249.25 s (34 us/read; 1.76 M reads/minute).

=== Summary ===

Total reads processed:              36,710,832
Reads with adapters:                13,271,130 (36.2%)
Reads written (passing filters):    36,710,832 (100.0%)

Total basepairs processed: 2,761,217,822 bp
Quality-trimmed:              10,516,671 bp (0.4%)
Total written (filtered):  2,730,704,470 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 13271130 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.8%
  C: 29.4%
  G: 25.0%
  T: 23.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	9078575	9177708.0	0	9078575
2	2712592	2294427.0	0	2712592
3	1055380	573606.8	0	1055380
4	399122	143401.7	0	399122
5	3976	35850.4	0	3976
6	4055	8962.6	0	4055
7	1057	2240.7	0	1057
8	129	560.2	0	129
9	94	140.0	0	54 40
10	89	35.0	1	7 82
11	184	8.8	1	12 172
12	164	2.2	1	12 152
13	240	2.2	1	3 237
14	241	2.2	1	24 217
15	330	2.2	1	14 316
16	342	2.2	1	18 324
17	405	2.2	1	15 390
18	211	2.2	1	10 201
19	326	2.2	1	12 314
20	209	2.2	1	5 204
21	277	2.2	1	10 267
22	289	2.2	1	13 276
23	246	2.2	1	17 229
24	268	2.2	1	3 265
25	422	2.2	1	21 401
26	282	2.2	1	16 266
27	407	2.2	1	41 366
28	300	2.2	1	7 293
29	372	2.2	1	23 349
30	245	2.2	1	4 241
31	185	2.2	1	5 180
32	137	2.2	1	5 132
33	247	2.2	1	4 243
34	197	2.2	1	2 195
35	316	2.2	1	9 307
36	236	2.2	1	2 234
37	130	2.2	1	1 129
38	196	2.2	1	2 194
39	160	2.2	1	1 159
40	181	2.2	1	0 181
41	235	2.2	1	0 235
42	150	2.2	1	3 147
43	395	2.2	1	0 395
44	189	2.2	1	0 189
45	165	2.2	1	0 165
46	135	2.2	1	0 135
47	111	2.2	1	1 110
48	355	2.2	1	2 353
49	158	2.2	1	2 156
50	429	2.2	1	0 429
51	207	2.2	1	5 202
52	139	2.2	1	0 139
53	374	2.2	1	5 369
54	173	2.2	1	0 173
55	206	2.2	1	1 205
56	183	2.2	1	3 180
57	154	2.2	1	0 154
58	423	2.2	1	1 422
59	168	2.2	1	3 165
60	390	2.2	1	0 390
61	219	2.2	1	1 218
62	135	2.2	1	1 134
63	351	2.2	1	10 341
64	167	2.2	1	0 167
65	130	2.2	1	0 130
66	439	2.2	1	1 438
67	264	2.2	1	2 262
68	709	2.2	1	4 705
69	70	2.2	1	1 69
70	84	2.2	1	0 84
71	77	2.2	1	0 77
72	129	2.2	1	0 129
73	453	2.2	1	10 443
74	163	2.2	1	5 158
75	117	2.2	1	0 117
76	70	2.2	1	3 67


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_1.fastq
=============================================
36710832 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/gpfs52/data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/trimmed_reads/SRR7647808_2.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_2.fastq
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 1.18
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/processing_results/fastQC'

Cutadapt seems to be reasonably up-to-date. Setting -j -j 12
Writing final adapter and quality trimmed output to SRR7647808_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_2.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
This is cutadapt 1.18 with Python 3.6.15
Command line parameters: -j 12 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_2.fastq
Processing reads on 12 cores in single-end mode ...
Finished in 712.33 s (19 us/read; 3.09 M reads/minute).

=== Summary ===

Total reads processed:              36,710,832
Reads with adapters:                13,456,214 (36.7%)
Reads written (passing filters):    36,710,832 (100.0%)

Total basepairs processed: 2,761,356,584 bp
Quality-trimmed:               8,777,021 bp (0.3%)
Total written (filtered):  2,732,276,704 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 13456214 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.0%
  C: 29.4%
  G: 25.1%
  T: 23.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	9231949	9177708.0	0	9231949
2	2723729	2294427.0	0	2723729
3	1060064	573606.8	0	1060064
4	411589	143401.7	0	411589
5	4393	35850.4	0	4393
6	4265	8962.6	0	4265
7	1159	2240.7	0	1159
8	184	560.2	0	184
9	115	140.0	0	41 74
10	210	35.0	1	12 198
11	231	8.8	1	10 221
12	273	2.2	1	19 254
13	336	2.2	1	5 331
14	531	2.2	1	26 505
15	437	2.2	1	11 426
16	693	2.2	1	84 609
17	557	2.2	1	28 529
18	427	2.2	1	30 397
19	478	2.2	1	37 441
20	297	2.2	1	9 288
21	380	2.2	1	38 342
22	326	2.2	1	15 311
23	288	2.2	1	12 276
24	339	2.2	1	24 315
25	412	2.2	1	16 396
26	281	2.2	1	12 269
27	317	2.2	1	34 283
28	402	2.2	1	25 377
29	404	2.2	1	6 398
30	328	2.2	1	2 326
31	178	2.2	1	3 175
32	152	2.2	1	6 146
33	285	2.2	1	4 281
34	223	2.2	1	8 215
35	339	2.2	1	6 333
36	216	2.2	1	0 216
37	149	2.2	1	2 147
38	231	2.2	1	5 226
39	205	2.2	1	1 204
40	185	2.2	1	4 181
41	266	2.2	1	6 260
42	140	2.2	1	2 138
43	408	2.2	1	2 406
44	228	2.2	1	2 226
45	195	2.2	1	1 194
46	168	2.2	1	2 166
47	121	2.2	1	1 120
48	380	2.2	1	1 379
49	166	2.2	1	1 165
50	399	2.2	1	8 391
51	200	2.2	1	2 198
52	141	2.2	1	1 140
53	406	2.2	1	3 403
54	212	2.2	1	1 211
55	186	2.2	1	0 186
56	207	2.2	1	0 207
57	133	2.2	1	0 133
58	388	2.2	1	4 384
59	190	2.2	1	3 187
60	345	2.2	1	0 345
61	207	2.2	1	2 205
62	128	2.2	1	1 127
63	367	2.2	1	10 357
64	169	2.2	1	0 169
65	151	2.2	1	0 151
66	464	2.2	1	0 464
67	285	2.2	1	1 284
68	766	2.2	1	9 757
69	78	2.2	1	6 72
70	100	2.2	1	0 100
71	75	2.2	1	0 75
72	130	2.2	1	1 129
73	489	2.2	1	13 476
74	198	2.2	1	3 195
75	120	2.2	1	0 120
76	51	2.2	1	1 50


RUN STATISTICS FOR INPUT FILE: /data/hodges_lab/public_data/immune-cell_RNA-seq/Calderon_2019/fastq/SRR7647808_2.fastq
=============================================
36710832 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR7647808_1_trimmed.fq and SRR7647808_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>SRR7647808_1_trimmed.fq<<	RENAMING TO:>>Naive_B_1010_R1_trimmed.fq<<
ORIGINAL FILE 2: >>SRR7647808_2_trimmed.fq<<	RENAMING TO:>>Naive_B_1010_R2_trimmed.fq<<
file_1: Naive_B_1010_R1_trimmed.fq, file_2: Naive_B_1010_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: Naive_B_1010_R1_trimmed.fq and Naive_B_1010_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to Naive_B_1010_val_1.fq
Writing validated paired-end Read 2 reads to Naive_B_1010_val_2.fq

Total number of sequences analysed: 36710832

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 49865 (0.14%)


  >>> Now running FastQC on the validated data Naive_B_1010_val_1.fq<<<

Started analysis of Naive_B_1010_val_1.fq
Approx 5% complete for Naive_B_1010_val_1.fq
Approx 10% complete for Naive_B_1010_val_1.fq
Approx 15% complete for Naive_B_1010_val_1.fq
Approx 20% complete for Naive_B_1010_val_1.fq
Approx 25% complete for Naive_B_1010_val_1.fq
Approx 30% complete for Naive_B_1010_val_1.fq
Approx 35% complete for Naive_B_1010_val_1.fq
Approx 40% complete for Naive_B_1010_val_1.fq
Approx 45% complete for Naive_B_1010_val_1.fq
Approx 50% complete for Naive_B_1010_val_1.fq
Approx 55% complete for Naive_B_1010_val_1.fq
Approx 60% complete for Naive_B_1010_val_1.fq
Approx 65% complete for Naive_B_1010_val_1.fq
Approx 70% complete for Naive_B_1010_val_1.fq
Approx 75% complete for Naive_B_1010_val_1.fq
Approx 80% complete for Naive_B_1010_val_1.fq
Approx 85% complete for Naive_B_1010_val_1.fq
Approx 90% complete for Naive_B_1010_val_1.fq
Approx 95% complete for Naive_B_1010_val_1.fq
Analysis complete for Naive_B_1010_val_1.fq

  >>> Now running FastQC on the validated data Naive_B_1010_val_2.fq<<<

Started analysis of Naive_B_1010_val_2.fq
Approx 5% complete for Naive_B_1010_val_2.fq
Approx 10% complete for Naive_B_1010_val_2.fq
Approx 15% complete for Naive_B_1010_val_2.fq
Approx 20% complete for Naive_B_1010_val_2.fq
Approx 25% complete for Naive_B_1010_val_2.fq
Approx 30% complete for Naive_B_1010_val_2.fq
Approx 35% complete for Naive_B_1010_val_2.fq
Approx 40% complete for Naive_B_1010_val_2.fq
Approx 45% complete for Naive_B_1010_val_2.fq
Approx 50% complete for Naive_B_1010_val_2.fq
Approx 55% complete for Naive_B_1010_val_2.fq
Approx 60% complete for Naive_B_1010_val_2.fq
Approx 65% complete for Naive_B_1010_val_2.fq
Approx 70% complete for Naive_B_1010_val_2.fq
Approx 75% complete for Naive_B_1010_val_2.fq
Approx 80% complete for Naive_B_1010_val_2.fq
Approx 85% complete for Naive_B_1010_val_2.fq
Approx 90% complete for Naive_B_1010_val_2.fq
Approx 95% complete for Naive_B_1010_val_2.fq
Analysis complete for Naive_B_1010_val_2.fq
Deleting both intermediate output files Naive_B_1010_R1_trimmed.fq and Naive_B_1010_R2_trimmed.fq

====================================================================================================

